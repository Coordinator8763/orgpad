// Compiled by ClojureScript 0.0-2814 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2814";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__13059__delegate = function (args){
return console.log.apply(console,(function (){var G__13058 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__13058) : cljs.core.into_array.call(null,G__13058));
})());
};
var G__13059 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__13060__i = 0, G__13060__a = new Array(arguments.length -  0);
while (G__13060__i < G__13060__a.length) {G__13060__a[G__13060__i] = arguments[G__13060__i + 0]; ++G__13060__i;}
  args = new cljs.core.IndexedSeq(G__13060__a,0);
} 
return G__13059__delegate.call(this,args);};
G__13059.cljs$lang$maxFixedArity = 0;
G__13059.cljs$lang$applyTo = (function (arglist__13061){
var args = cljs.core.seq(arglist__13061);
return G__13059__delegate(args);
});
G__13059.cljs$core$IFn$_invoke$arity$variadic = G__13059__delegate;
return G__13059;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__13063 = x;
return goog.isString(G__13063);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__13065 = x__$1;
return goog.typeOf(G__13065);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__5514__auto__ = ty;
if(cljs.core.truth_(and__5514__auto__)){
return ty.cljs$lang$type;
} else {
return and__5514__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__13067 = obj;
return goog.typeOf(G__13067);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__13069 = Symbol;
return goog.typeOf(G__13069);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__6413__auto___13071 = len;
var i_13072 = (0);
while(true){
if((i_13072 < n__6413__auto___13071)){
(new_arr[i_13072] = (arr[i_13072]));

var G__13073 = (i_13072 + (1));
i_13072 = G__13073;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__13074 = (i + (1));
i = G__13074;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__13083__delegate = function (array,i,idxs){
var G__13080 = aget;
var G__13081 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__13082 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__13080,G__13081,G__13082) : cljs.core.apply.call(null,G__13080,G__13081,G__13082));
};
var G__13083 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__13084__i = 0, G__13084__a = new Array(arguments.length -  2);
while (G__13084__i < G__13084__a.length) {G__13084__a[G__13084__i] = arguments[G__13084__i + 2]; ++G__13084__i;}
  idxs = new cljs.core.IndexedSeq(G__13084__a,0);
} 
return G__13083__delegate.call(this,array,i,idxs);};
G__13083.cljs$lang$maxFixedArity = 2;
G__13083.cljs$lang$applyTo = (function (arglist__13085){
var array = cljs.core.first(arglist__13085);
arglist__13085 = cljs.core.next(arglist__13085);
var i = cljs.core.first(arglist__13085);
var idxs = cljs.core.rest(arglist__13085);
return G__13083__delegate(array,i,idxs);
});
G__13083.cljs$core$IFn$_invoke$arity$variadic = G__13083__delegate;
return G__13083;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__13086 = null;
if (arguments.length > 2) {
var G__13087__i = 0, G__13087__a = new Array(arguments.length -  2);
while (G__13087__i < G__13087__a.length) {G__13087__a[G__13087__i] = arguments[G__13087__i + 2]; ++G__13087__i;}
G__13086 = new cljs.core.IndexedSeq(G__13087__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__13086);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__13096__delegate = function (array,idx,idx2,idxv){
var G__13092 = aset;
var G__13093 = (array[idx]);
var G__13094 = idx2;
var G__13095 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__13092,G__13093,G__13094,G__13095) : cljs.core.apply.call(null,G__13092,G__13093,G__13094,G__13095));
};
var G__13096 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__13097__i = 0, G__13097__a = new Array(arguments.length -  3);
while (G__13097__i < G__13097__a.length) {G__13097__a[G__13097__i] = arguments[G__13097__i + 3]; ++G__13097__i;}
  idxv = new cljs.core.IndexedSeq(G__13097__a,0);
} 
return G__13096__delegate.call(this,array,idx,idx2,idxv);};
G__13096.cljs$lang$maxFixedArity = 3;
G__13096.cljs$lang$applyTo = (function (arglist__13098){
var array = cljs.core.first(arglist__13098);
arglist__13098 = cljs.core.next(arglist__13098);
var idx = cljs.core.first(arglist__13098);
arglist__13098 = cljs.core.next(arglist__13098);
var idx2 = cljs.core.first(arglist__13098);
var idxv = cljs.core.rest(arglist__13098);
return G__13096__delegate(array,idx,idx2,idxv);
});
G__13096.cljs$core$IFn$_invoke$arity$variadic = G__13096__delegate;
return G__13096;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__13099 = null;
if (arguments.length > 3) {
var G__13100__i = 0, G__13100__a = new Array(arguments.length -  3);
while (G__13100__i < G__13100__a.length) {G__13100__a[G__13100__i] = arguments[G__13100__i + 3]; ++G__13100__i;}
G__13099 = new cljs.core.IndexedSeq(G__13100__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__13099);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__13106 = (function (a,x){
a.push(x);

return a;
});
var G__13107 = [];
var G__13108 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__13106,G__13107,G__13108) : cljs.core.reduce.call(null,G__13106,G__13107,G__13108));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__13109__i = 0, G__13109__a = new Array(arguments.length -  2);
while (G__13109__i < G__13109__a.length) {G__13109__a[G__13109__i] = arguments[G__13109__i + 2]; ++G__13109__i;}
  args = new cljs.core.IndexedSeq(G__13109__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__13110){
var obj = cljs.core.first(arglist__13110);
arglist__13110 = cljs.core.next(arglist__13110);
var s = cljs.core.first(arglist__13110);
var args = cljs.core.rest(arglist__13110);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj13112 = {};
return obj13112;
})();


cljs.core.IFn = (function (){var obj13114 = {};
return obj13114;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__5514__auto__ = this$;
if(and__5514__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__5514__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__6170__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5526__auto__ = (cljs.core._invoke[(function (){var G__13160 = x__6170__auto__;
return goog.typeOf(G__13160);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._invoke["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__5514__auto__ = this$;
if(and__5514__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__5514__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__6170__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5526__auto__ = (cljs.core._invoke[(function (){var G__13162 = x__6170__auto__;
return goog.typeOf(G__13162);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._invoke["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__5514__auto__ = this$;
if(and__5514__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__5514__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__6170__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5526__auto__ = (cljs.core._invoke[(function (){var G__13164 = x__6170__auto__;
return goog.typeOf(G__13164);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._invoke["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__5514__auto__ = this$;
if(and__5514__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__5514__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__6170__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5526__auto__ = (cljs.core._invoke[(function (){var G__13166 = x__6170__auto__;
return goog.typeOf(G__13166);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._invoke["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__5514__auto__ = this$;
if(and__5514__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__5514__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__6170__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5526__auto__ = (cljs.core._invoke[(function (){var G__13168 = x__6170__auto__;
return goog.typeOf(G__13168);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._invoke["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__5514__auto__ = this$;
if(and__5514__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__5514__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__6170__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5526__auto__ = (cljs.core._invoke[(function (){var G__13170 = x__6170__auto__;
return goog.typeOf(G__13170);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._invoke["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__5514__auto__ = this$;
if(and__5514__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__5514__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__6170__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5526__auto__ = (cljs.core._invoke[(function (){var G__13172 = x__6170__auto__;
return goog.typeOf(G__13172);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._invoke["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__5514__auto__ = this$;
if(and__5514__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__5514__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__6170__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5526__auto__ = (cljs.core._invoke[(function (){var G__13174 = x__6170__auto__;
return goog.typeOf(G__13174);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._invoke["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__5514__auto__ = this$;
if(and__5514__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__5514__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__6170__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5526__auto__ = (cljs.core._invoke[(function (){var G__13176 = x__6170__auto__;
return goog.typeOf(G__13176);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._invoke["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__5514__auto__ = this$;
if(and__5514__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__5514__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__6170__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5526__auto__ = (cljs.core._invoke[(function (){var G__13178 = x__6170__auto__;
return goog.typeOf(G__13178);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._invoke["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__5514__auto__ = this$;
if(and__5514__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__5514__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__6170__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5526__auto__ = (cljs.core._invoke[(function (){var G__13180 = x__6170__auto__;
return goog.typeOf(G__13180);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._invoke["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__5514__auto__ = this$;
if(and__5514__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__5514__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__6170__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5526__auto__ = (cljs.core._invoke[(function (){var G__13182 = x__6170__auto__;
return goog.typeOf(G__13182);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._invoke["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__5514__auto__ = this$;
if(and__5514__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__5514__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__6170__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5526__auto__ = (cljs.core._invoke[(function (){var G__13184 = x__6170__auto__;
return goog.typeOf(G__13184);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._invoke["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__5514__auto__ = this$;
if(and__5514__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__5514__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__6170__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5526__auto__ = (cljs.core._invoke[(function (){var G__13186 = x__6170__auto__;
return goog.typeOf(G__13186);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._invoke["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__5514__auto__ = this$;
if(and__5514__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__5514__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__6170__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5526__auto__ = (cljs.core._invoke[(function (){var G__13188 = x__6170__auto__;
return goog.typeOf(G__13188);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._invoke["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__5514__auto__ = this$;
if(and__5514__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__5514__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__6170__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5526__auto__ = (cljs.core._invoke[(function (){var G__13190 = x__6170__auto__;
return goog.typeOf(G__13190);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._invoke["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__5514__auto__ = this$;
if(and__5514__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__5514__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__6170__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5526__auto__ = (cljs.core._invoke[(function (){var G__13192 = x__6170__auto__;
return goog.typeOf(G__13192);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._invoke["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__5514__auto__ = this$;
if(and__5514__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__5514__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__6170__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5526__auto__ = (cljs.core._invoke[(function (){var G__13194 = x__6170__auto__;
return goog.typeOf(G__13194);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._invoke["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__5514__auto__ = this$;
if(and__5514__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__5514__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__6170__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5526__auto__ = (cljs.core._invoke[(function (){var G__13196 = x__6170__auto__;
return goog.typeOf(G__13196);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._invoke["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__5514__auto__ = this$;
if(and__5514__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__5514__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__6170__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5526__auto__ = (cljs.core._invoke[(function (){var G__13198 = x__6170__auto__;
return goog.typeOf(G__13198);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._invoke["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__5514__auto__ = this$;
if(and__5514__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__5514__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__6170__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5526__auto__ = (cljs.core._invoke[(function (){var G__13200 = x__6170__auto__;
return goog.typeOf(G__13200);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._invoke["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__5514__auto__ = this$;
if(and__5514__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__5514__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__6170__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5526__auto__ = (cljs.core._invoke[(function (){var G__13202 = x__6170__auto__;
return goog.typeOf(G__13202);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._invoke["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj13204 = {};
return obj13204;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__5514__auto__ = value;
if(and__5514__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__5514__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__6170__auto__ = (((value == null))?null:value);
return (function (){var or__5526__auto__ = (cljs.core._clone[(function (){var G__13208 = x__6170__auto__;
return goog.typeOf(G__13208);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._clone["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj13210 = {};
return obj13210;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__5514__auto__ = coll;
if(and__5514__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__5514__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__6170__auto__ = (((coll == null))?null:coll);
return (function (){var or__5526__auto__ = (cljs.core._count[(function (){var G__13214 = x__6170__auto__;
return goog.typeOf(G__13214);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._count["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj13216 = {};
return obj13216;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__5514__auto__ = coll;
if(and__5514__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__5514__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__6170__auto__ = (((coll == null))?null:coll);
return (function (){var or__5526__auto__ = (cljs.core._empty[(function (){var G__13220 = x__6170__auto__;
return goog.typeOf(G__13220);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._empty["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj13222 = {};
return obj13222;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__5514__auto__ = coll;
if(and__5514__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__5514__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__6170__auto__ = (((coll == null))?null:coll);
return (function (){var or__5526__auto__ = (cljs.core._conj[(function (){var G__13226 = x__6170__auto__;
return goog.typeOf(G__13226);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._conj["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj13228 = {};
return obj13228;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__5514__auto__ = coll;
if(and__5514__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__5514__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__6170__auto__ = (((coll == null))?null:coll);
return (function (){var or__5526__auto__ = (cljs.core._nth[(function (){var G__13234 = x__6170__auto__;
return goog.typeOf(G__13234);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._nth["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__5514__auto__ = coll;
if(and__5514__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__5514__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__6170__auto__ = (((coll == null))?null:coll);
return (function (){var or__5526__auto__ = (cljs.core._nth[(function (){var G__13236 = x__6170__auto__;
return goog.typeOf(G__13236);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._nth["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj13238 = {};
return obj13238;
})();


cljs.core.ISeq = (function (){var obj13240 = {};
return obj13240;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__5514__auto__ = coll;
if(and__5514__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__5514__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__6170__auto__ = (((coll == null))?null:coll);
return (function (){var or__5526__auto__ = (cljs.core._first[(function (){var G__13244 = x__6170__auto__;
return goog.typeOf(G__13244);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._first["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__5514__auto__ = coll;
if(and__5514__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__5514__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__6170__auto__ = (((coll == null))?null:coll);
return (function (){var or__5526__auto__ = (cljs.core._rest[(function (){var G__13248 = x__6170__auto__;
return goog.typeOf(G__13248);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._rest["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj13250 = {};
return obj13250;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__5514__auto__ = coll;
if(and__5514__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__5514__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__6170__auto__ = (((coll == null))?null:coll);
return (function (){var or__5526__auto__ = (cljs.core._next[(function (){var G__13254 = x__6170__auto__;
return goog.typeOf(G__13254);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._next["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj13256 = {};
return obj13256;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__5514__auto__ = o;
if(and__5514__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__5514__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__6170__auto__ = (((o == null))?null:o);
return (function (){var or__5526__auto__ = (cljs.core._lookup[(function (){var G__13262 = x__6170__auto__;
return goog.typeOf(G__13262);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._lookup["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__5514__auto__ = o;
if(and__5514__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__5514__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__6170__auto__ = (((o == null))?null:o);
return (function (){var or__5526__auto__ = (cljs.core._lookup[(function (){var G__13264 = x__6170__auto__;
return goog.typeOf(G__13264);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._lookup["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj13266 = {};
return obj13266;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__5514__auto__ = coll;
if(and__5514__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__5514__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__6170__auto__ = (((coll == null))?null:coll);
return (function (){var or__5526__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__13270 = x__6170__auto__;
return goog.typeOf(G__13270);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__5514__auto__ = coll;
if(and__5514__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__5514__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__6170__auto__ = (((coll == null))?null:coll);
return (function (){var or__5526__auto__ = (cljs.core._assoc[(function (){var G__13274 = x__6170__auto__;
return goog.typeOf(G__13274);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._assoc["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj13276 = {};
return obj13276;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__5514__auto__ = coll;
if(and__5514__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__5514__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__6170__auto__ = (((coll == null))?null:coll);
return (function (){var or__5526__auto__ = (cljs.core._dissoc[(function (){var G__13280 = x__6170__auto__;
return goog.typeOf(G__13280);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._dissoc["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj13282 = {};
return obj13282;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__5514__auto__ = coll;
if(and__5514__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__5514__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__6170__auto__ = (((coll == null))?null:coll);
return (function (){var or__5526__auto__ = (cljs.core._key[(function (){var G__13286 = x__6170__auto__;
return goog.typeOf(G__13286);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._key["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__5514__auto__ = coll;
if(and__5514__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__5514__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__6170__auto__ = (((coll == null))?null:coll);
return (function (){var or__5526__auto__ = (cljs.core._val[(function (){var G__13290 = x__6170__auto__;
return goog.typeOf(G__13290);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._val["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj13292 = {};
return obj13292;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__5514__auto__ = coll;
if(and__5514__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__5514__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__6170__auto__ = (((coll == null))?null:coll);
return (function (){var or__5526__auto__ = (cljs.core._disjoin[(function (){var G__13296 = x__6170__auto__;
return goog.typeOf(G__13296);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._disjoin["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj13298 = {};
return obj13298;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__5514__auto__ = coll;
if(and__5514__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__5514__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__6170__auto__ = (((coll == null))?null:coll);
return (function (){var or__5526__auto__ = (cljs.core._peek[(function (){var G__13302 = x__6170__auto__;
return goog.typeOf(G__13302);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._peek["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__5514__auto__ = coll;
if(and__5514__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__5514__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__6170__auto__ = (((coll == null))?null:coll);
return (function (){var or__5526__auto__ = (cljs.core._pop[(function (){var G__13306 = x__6170__auto__;
return goog.typeOf(G__13306);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._pop["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj13308 = {};
return obj13308;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__5514__auto__ = coll;
if(and__5514__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__5514__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__6170__auto__ = (((coll == null))?null:coll);
return (function (){var or__5526__auto__ = (cljs.core._assoc_n[(function (){var G__13312 = x__6170__auto__;
return goog.typeOf(G__13312);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj13314 = {};
return obj13314;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__5514__auto__ = o;
if(and__5514__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__5514__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__6170__auto__ = (((o == null))?null:o);
return (function (){var or__5526__auto__ = (cljs.core._deref[(function (){var G__13318 = x__6170__auto__;
return goog.typeOf(G__13318);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._deref["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj13320 = {};
return obj13320;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__5514__auto__ = o;
if(and__5514__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__5514__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__6170__auto__ = (((o == null))?null:o);
return (function (){var or__5526__auto__ = (cljs.core._deref_with_timeout[(function (){var G__13324 = x__6170__auto__;
return goog.typeOf(G__13324);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj13326 = {};
return obj13326;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__5514__auto__ = o;
if(and__5514__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__5514__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__6170__auto__ = (((o == null))?null:o);
return (function (){var or__5526__auto__ = (cljs.core._meta[(function (){var G__13330 = x__6170__auto__;
return goog.typeOf(G__13330);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._meta["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj13332 = {};
return obj13332;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__5514__auto__ = o;
if(and__5514__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__5514__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__6170__auto__ = (((o == null))?null:o);
return (function (){var or__5526__auto__ = (cljs.core._with_meta[(function (){var G__13336 = x__6170__auto__;
return goog.typeOf(G__13336);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._with_meta["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj13338 = {};
return obj13338;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__5514__auto__ = coll;
if(and__5514__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__5514__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__6170__auto__ = (((coll == null))?null:coll);
return (function (){var or__5526__auto__ = (cljs.core._reduce[(function (){var G__13344 = x__6170__auto__;
return goog.typeOf(G__13344);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._reduce["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__5514__auto__ = coll;
if(and__5514__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__5514__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__6170__auto__ = (((coll == null))?null:coll);
return (function (){var or__5526__auto__ = (cljs.core._reduce[(function (){var G__13346 = x__6170__auto__;
return goog.typeOf(G__13346);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._reduce["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj13348 = {};
return obj13348;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__5514__auto__ = coll;
if(and__5514__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__5514__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__6170__auto__ = (((coll == null))?null:coll);
return (function (){var or__5526__auto__ = (cljs.core._kv_reduce[(function (){var G__13352 = x__6170__auto__;
return goog.typeOf(G__13352);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj13354 = {};
return obj13354;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__5514__auto__ = o;
if(and__5514__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__5514__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__6170__auto__ = (((o == null))?null:o);
return (function (){var or__5526__auto__ = (cljs.core._equiv[(function (){var G__13358 = x__6170__auto__;
return goog.typeOf(G__13358);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._equiv["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj13360 = {};
return obj13360;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__5514__auto__ = o;
if(and__5514__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__5514__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__6170__auto__ = (((o == null))?null:o);
return (function (){var or__5526__auto__ = (cljs.core._hash[(function (){var G__13364 = x__6170__auto__;
return goog.typeOf(G__13364);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._hash["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj13366 = {};
return obj13366;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__5514__auto__ = o;
if(and__5514__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__5514__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__6170__auto__ = (((o == null))?null:o);
return (function (){var or__5526__auto__ = (cljs.core._seq[(function (){var G__13370 = x__6170__auto__;
return goog.typeOf(G__13370);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._seq["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj13372 = {};
return obj13372;
})();


cljs.core.IList = (function (){var obj13374 = {};
return obj13374;
})();


cljs.core.IRecord = (function (){var obj13376 = {};
return obj13376;
})();


cljs.core.IReversible = (function (){var obj13378 = {};
return obj13378;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__5514__auto__ = coll;
if(and__5514__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__5514__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__6170__auto__ = (((coll == null))?null:coll);
return (function (){var or__5526__auto__ = (cljs.core._rseq[(function (){var G__13382 = x__6170__auto__;
return goog.typeOf(G__13382);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._rseq["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj13384 = {};
return obj13384;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__5514__auto__ = coll;
if(and__5514__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__5514__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__6170__auto__ = (((coll == null))?null:coll);
return (function (){var or__5526__auto__ = (cljs.core._sorted_seq[(function (){var G__13388 = x__6170__auto__;
return goog.typeOf(G__13388);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__5514__auto__ = coll;
if(and__5514__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__5514__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__6170__auto__ = (((coll == null))?null:coll);
return (function (){var or__5526__auto__ = (cljs.core._sorted_seq_from[(function (){var G__13392 = x__6170__auto__;
return goog.typeOf(G__13392);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__5514__auto__ = coll;
if(and__5514__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__5514__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__6170__auto__ = (((coll == null))?null:coll);
return (function (){var or__5526__auto__ = (cljs.core._entry_key[(function (){var G__13396 = x__6170__auto__;
return goog.typeOf(G__13396);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._entry_key["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__5514__auto__ = coll;
if(and__5514__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__5514__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__6170__auto__ = (((coll == null))?null:coll);
return (function (){var or__5526__auto__ = (cljs.core._comparator[(function (){var G__13400 = x__6170__auto__;
return goog.typeOf(G__13400);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._comparator["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj13402 = {};
return obj13402;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__5514__auto__ = writer;
if(and__5514__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__5514__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__6170__auto__ = (((writer == null))?null:writer);
return (function (){var or__5526__auto__ = (cljs.core._write[(function (){var G__13406 = x__6170__auto__;
return goog.typeOf(G__13406);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._write["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__5514__auto__ = writer;
if(and__5514__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__5514__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__6170__auto__ = (((writer == null))?null:writer);
return (function (){var or__5526__auto__ = (cljs.core._flush[(function (){var G__13410 = x__6170__auto__;
return goog.typeOf(G__13410);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._flush["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj13412 = {};
return obj13412;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__5514__auto__ = o;
if(and__5514__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__5514__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__6170__auto__ = (((o == null))?null:o);
return (function (){var or__5526__auto__ = (cljs.core._pr_writer[(function (){var G__13416 = x__6170__auto__;
return goog.typeOf(G__13416);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj13418 = {};
return obj13418;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__5514__auto__ = d;
if(and__5514__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__5514__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__6170__auto__ = (((d == null))?null:d);
return (function (){var or__5526__auto__ = (cljs.core._realized_QMARK_[(function (){var G__13422 = x__6170__auto__;
return goog.typeOf(G__13422);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj13424 = {};
return obj13424;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__5514__auto__ = this$;
if(and__5514__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__5514__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__6170__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5526__auto__ = (cljs.core._notify_watches[(function (){var G__13428 = x__6170__auto__;
return goog.typeOf(G__13428);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__5514__auto__ = this$;
if(and__5514__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__5514__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__6170__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5526__auto__ = (cljs.core._add_watch[(function (){var G__13432 = x__6170__auto__;
return goog.typeOf(G__13432);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._add_watch["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__5514__auto__ = this$;
if(and__5514__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__5514__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__6170__auto__ = (((this$ == null))?null:this$);
return (function (){var or__5526__auto__ = (cljs.core._remove_watch[(function (){var G__13436 = x__6170__auto__;
return goog.typeOf(G__13436);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj13438 = {};
return obj13438;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__5514__auto__ = coll;
if(and__5514__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__5514__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__6170__auto__ = (((coll == null))?null:coll);
return (function (){var or__5526__auto__ = (cljs.core._as_transient[(function (){var G__13442 = x__6170__auto__;
return goog.typeOf(G__13442);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._as_transient["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj13444 = {};
return obj13444;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__5514__auto__ = tcoll;
if(and__5514__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__5514__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__6170__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__5526__auto__ = (cljs.core._conj_BANG_[(function (){var G__13448 = x__6170__auto__;
return goog.typeOf(G__13448);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__5514__auto__ = tcoll;
if(and__5514__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__5514__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__6170__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__5526__auto__ = (cljs.core._persistent_BANG_[(function (){var G__13452 = x__6170__auto__;
return goog.typeOf(G__13452);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj13454 = {};
return obj13454;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__5514__auto__ = tcoll;
if(and__5514__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__5514__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__6170__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__5526__auto__ = (cljs.core._assoc_BANG_[(function (){var G__13458 = x__6170__auto__;
return goog.typeOf(G__13458);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj13460 = {};
return obj13460;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__5514__auto__ = tcoll;
if(and__5514__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__5514__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__6170__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__5526__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__13464 = x__6170__auto__;
return goog.typeOf(G__13464);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj13466 = {};
return obj13466;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__5514__auto__ = tcoll;
if(and__5514__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__5514__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__6170__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__5526__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__13470 = x__6170__auto__;
return goog.typeOf(G__13470);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__5514__auto__ = tcoll;
if(and__5514__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__5514__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__6170__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__5526__auto__ = (cljs.core._pop_BANG_[(function (){var G__13474 = x__6170__auto__;
return goog.typeOf(G__13474);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj13476 = {};
return obj13476;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__5514__auto__ = tcoll;
if(and__5514__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__5514__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__6170__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__5526__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__13480 = x__6170__auto__;
return goog.typeOf(G__13480);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj13482 = {};
return obj13482;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__5514__auto__ = x;
if(and__5514__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__5514__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__6170__auto__ = (((x == null))?null:x);
return (function (){var or__5526__auto__ = (cljs.core._compare[(function (){var G__13486 = x__6170__auto__;
return goog.typeOf(G__13486);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._compare["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj13488 = {};
return obj13488;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__5514__auto__ = coll;
if(and__5514__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__5514__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__6170__auto__ = (((coll == null))?null:coll);
return (function (){var or__5526__auto__ = (cljs.core._drop_first[(function (){var G__13492 = x__6170__auto__;
return goog.typeOf(G__13492);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._drop_first["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj13494 = {};
return obj13494;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__5514__auto__ = coll;
if(and__5514__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__5514__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__6170__auto__ = (((coll == null))?null:coll);
return (function (){var or__5526__auto__ = (cljs.core._chunked_first[(function (){var G__13498 = x__6170__auto__;
return goog.typeOf(G__13498);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__5514__auto__ = coll;
if(and__5514__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__5514__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__6170__auto__ = (((coll == null))?null:coll);
return (function (){var or__5526__auto__ = (cljs.core._chunked_rest[(function (){var G__13502 = x__6170__auto__;
return goog.typeOf(G__13502);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj13504 = {};
return obj13504;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__5514__auto__ = coll;
if(and__5514__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__5514__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__6170__auto__ = (((coll == null))?null:coll);
return (function (){var or__5526__auto__ = (cljs.core._chunked_next[(function (){var G__13508 = x__6170__auto__;
return goog.typeOf(G__13508);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj13510 = {};
return obj13510;
})();

cljs.core._name = (function _name(x){
if((function (){var and__5514__auto__ = x;
if(and__5514__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__5514__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__6170__auto__ = (((x == null))?null:x);
return (function (){var or__5526__auto__ = (cljs.core._name[(function (){var G__13514 = x__6170__auto__;
return goog.typeOf(G__13514);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._name["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__5514__auto__ = x;
if(and__5514__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__5514__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__6170__auto__ = (((x == null))?null:x);
return (function (){var or__5526__auto__ = (cljs.core._namespace[(function (){var G__13518 = x__6170__auto__;
return goog.typeOf(G__13518);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._namespace["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj13520 = {};
return obj13520;
})();


cljs.core.IReset = (function (){var obj13522 = {};
return obj13522;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__5514__auto__ = o;
if(and__5514__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__5514__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__6170__auto__ = (((o == null))?null:o);
return (function (){var or__5526__auto__ = (cljs.core._reset_BANG_[(function (){var G__13526 = x__6170__auto__;
return goog.typeOf(G__13526);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj13528 = {};
return obj13528;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__5514__auto__ = o;
if(and__5514__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__5514__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__6170__auto__ = (((o == null))?null:o);
return (function (){var or__5526__auto__ = (cljs.core._swap_BANG_[(function (){var G__13538 = x__6170__auto__;
return goog.typeOf(G__13538);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__5514__auto__ = o;
if(and__5514__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__5514__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__6170__auto__ = (((o == null))?null:o);
return (function (){var or__5526__auto__ = (cljs.core._swap_BANG_[(function (){var G__13540 = x__6170__auto__;
return goog.typeOf(G__13540);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__5514__auto__ = o;
if(and__5514__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__5514__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__6170__auto__ = (((o == null))?null:o);
return (function (){var or__5526__auto__ = (cljs.core._swap_BANG_[(function (){var G__13542 = x__6170__auto__;
return goog.typeOf(G__13542);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__5514__auto__ = o;
if(and__5514__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__5514__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__6170__auto__ = (((o == null))?null:o);
return (function (){var or__5526__auto__ = (cljs.core._swap_BANG_[(function (){var G__13544 = x__6170__auto__;
return goog.typeOf(G__13544);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj13546 = {};
return obj13546;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__5514__auto__ = o;
if(and__5514__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__5514__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__6170__auto__ = (((o == null))?null:o);
return (function (){var or__5526__auto__ = (cljs.core._vreset_BANG_[(function (){var G__13550 = x__6170__auto__;
return goog.typeOf(G__13550);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj13552 = {};
return obj13552;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__5514__auto__ = coll;
if(and__5514__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__5514__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__6170__auto__ = (((coll == null))?null:coll);
return (function (){var or__5526__auto__ = (cljs.core._iterator[(function (){var G__13556 = x__6170__auto__;
return goog.typeOf(G__13556);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._iterator["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__13559 = (4294967295);
var G__13560 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__13559,G__13560) : Math.imul.call(null,G__13559,G__13560));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__13563 = a;
var G__13564 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__13563,G__13564) : Math.imul.call(null,G__13563,G__13564));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__13565 = (i + (2));
var G__13566 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__13565;
h1 = G__13566;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj13568 = {};
return obj13568;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__13569 = (i + (1));
var G__13570 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__13569;
hash = G__13570;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj13574 = {};
return obj13574;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__13577 = o;
if(G__13577){
var bit__6200__auto__ = (G__13577.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__6200__auto__) || (G__13577.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__13578 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__13578) : Math.floor.call(null,G__13578));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__5514__auto__ = cljs.core.not(a.ns);
if(and__5514__auto__){
return b.ns;
} else {
return and__5514__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__13585 = a.ns;
var G__13586 = b.ns;
return goog.array.defaultCompare(G__13585,G__13586);
})();
if(((0) === nsc)){
var G__13587 = a.name;
var G__13588 = b.name;
return goog.array.defaultCompare(G__13587,G__13588);
} else {
return nsc;
}
}
} else {
var G__13589 = a.name;
var G__13590 = b.name;
return goog.array.defaultCompare(G__13589,G__13590);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__5947__auto__ = self__._hash;
if(!((h__5947__auto__ == null))){
return h__5947__auto__;
} else {
var h__5947__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__5947__auto____$1;

return h__5947__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__13592 = null;
var G__13592__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__13592__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__13592 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__13592__2.call(this,self__,coll);
case 3:
return G__13592__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13592.cljs$core$IFn$_invoke$arity$2 = G__13592__2;
G__13592.cljs$core$IFn$_invoke$arity$3 = G__13592__3;
return G__13592;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args13591){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13591)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__13640 = null;
var G__13640__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__13640__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__13640__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__13640__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__13640__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__13640__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__13640__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__13640__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__13640__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__13640__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__13640__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__13640__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__13640__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__13640__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__13640__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__13640__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__13640__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__13640__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__13640__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__13640__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__13640__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__13640__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13596 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__13597 = a;
var G__13598 = b;
var G__13599 = c;
var G__13600 = d;
var G__13601 = e;
var G__13602 = f;
var G__13603 = g;
var G__13604 = h;
var G__13605 = i;
var G__13606 = j;
var G__13607 = k;
var G__13608 = l;
var G__13609 = m;
var G__13610 = n;
var G__13611 = o;
var G__13612 = p;
var G__13613 = q;
var G__13614 = r;
var G__13615 = s;
var G__13616 = t;
var G__13617 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__13596,G__13597,G__13598,G__13599,G__13600,G__13601,G__13602,G__13603,G__13604,G__13605,G__13606,G__13607,G__13608,G__13609,G__13610,G__13611,G__13612,G__13613,G__13614,G__13615,G__13616,G__13617) : cljs.core.apply.call(null,G__13596,G__13597,G__13598,G__13599,G__13600,G__13601,G__13602,G__13603,G__13604,G__13605,G__13606,G__13607,G__13608,G__13609,G__13610,G__13611,G__13612,G__13613,G__13614,G__13615,G__13616,G__13617));
});
G__13640 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__13640__1.call(this,self__);
case 2:
return G__13640__2.call(this,self__,a);
case 3:
return G__13640__3.call(this,self__,a,b);
case 4:
return G__13640__4.call(this,self__,a,b,c);
case 5:
return G__13640__5.call(this,self__,a,b,c,d);
case 6:
return G__13640__6.call(this,self__,a,b,c,d,e);
case 7:
return G__13640__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__13640__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__13640__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__13640__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__13640__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__13640__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__13640__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__13640__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__13640__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__13640__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__13640__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__13640__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__13640__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__13640__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__13640__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__13640__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13640.cljs$core$IFn$_invoke$arity$1 = G__13640__1;
G__13640.cljs$core$IFn$_invoke$arity$2 = G__13640__2;
G__13640.cljs$core$IFn$_invoke$arity$3 = G__13640__3;
G__13640.cljs$core$IFn$_invoke$arity$4 = G__13640__4;
G__13640.cljs$core$IFn$_invoke$arity$5 = G__13640__5;
G__13640.cljs$core$IFn$_invoke$arity$6 = G__13640__6;
G__13640.cljs$core$IFn$_invoke$arity$7 = G__13640__7;
G__13640.cljs$core$IFn$_invoke$arity$8 = G__13640__8;
G__13640.cljs$core$IFn$_invoke$arity$9 = G__13640__9;
G__13640.cljs$core$IFn$_invoke$arity$10 = G__13640__10;
G__13640.cljs$core$IFn$_invoke$arity$11 = G__13640__11;
G__13640.cljs$core$IFn$_invoke$arity$12 = G__13640__12;
G__13640.cljs$core$IFn$_invoke$arity$13 = G__13640__13;
G__13640.cljs$core$IFn$_invoke$arity$14 = G__13640__14;
G__13640.cljs$core$IFn$_invoke$arity$15 = G__13640__15;
G__13640.cljs$core$IFn$_invoke$arity$16 = G__13640__16;
G__13640.cljs$core$IFn$_invoke$arity$17 = G__13640__17;
G__13640.cljs$core$IFn$_invoke$arity$18 = G__13640__18;
G__13640.cljs$core$IFn$_invoke$arity$19 = G__13640__19;
G__13640.cljs$core$IFn$_invoke$arity$20 = G__13640__20;
G__13640.cljs$core$IFn$_invoke$arity$21 = G__13640__21;
G__13640.cljs$core$IFn$_invoke$arity$22 = G__13640__22;
return G__13640;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args13595){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13595)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__13618 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__13619 = a;
var G__13620 = b;
var G__13621 = c;
var G__13622 = d;
var G__13623 = e;
var G__13624 = f;
var G__13625 = g;
var G__13626 = h;
var G__13627 = i;
var G__13628 = j;
var G__13629 = k;
var G__13630 = l;
var G__13631 = m;
var G__13632 = n;
var G__13633 = o;
var G__13634 = p;
var G__13635 = q;
var G__13636 = r;
var G__13637 = s;
var G__13638 = t;
var G__13639 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__13618,G__13619,G__13620,G__13621,G__13622,G__13623,G__13624,G__13625,G__13626,G__13627,G__13628,G__13629,G__13630,G__13631,G__13632,G__13633,G__13634,G__13635,G__13636,G__13637,G__13638,G__13639) : cljs.core.apply.call(null,G__13618,G__13619,G__13620,G__13621,G__13622,G__13623,G__13624,G__13625,G__13626,G__13627,G__13628,G__13629,G__13630,G__13631,G__13632,G__13633,G__13634,G__13635,G__13636,G__13637,G__13638,G__13639));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__13642 = x;
if(G__13642){
var bit__6207__auto__ = null;
if(cljs.core.truth_((function (){var or__5526__auto__ = bit__6207__auto__;
if(cljs.core.truth_(or__5526__auto__)){
return or__5526__auto__;
} else {
return G__13642.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__13642.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__13642);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__13642);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__13644 = value;
if(G__13644){
var bit__6207__auto__ = (G__13644.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__6207__auto__) || (G__13644.cljs$core$ICloneable$)){
return true;
} else {
if((!G__13644.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__13644);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__13644);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__13646 = coll;
if(G__13646){
var bit__6200__auto__ = (G__13646.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__6200__auto__) || (G__13646.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__13648 = coll;
if(G__13648){
var bit__6200__auto__ = (G__13648.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__6200__auto__) || (G__13648.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__13650 = coll;
if(G__13650){
var bit__6200__auto__ = (G__13650.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__6200__auto__) || (G__13650.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__13652 = coll;
if(G__13652){
var bit__6200__auto__ = (G__13652.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__6200__auto__) || (G__13652.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__13657__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__13658 = y;
var G__13659 = cljs.core.first(more);
var G__13660 = cljs.core.next(more);
x = G__13658;
y = G__13659;
more = G__13660;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__13657 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13661__i = 0, G__13661__a = new Array(arguments.length -  2);
while (G__13661__i < G__13661__a.length) {G__13661__a[G__13661__i] = arguments[G__13661__i + 2]; ++G__13661__i;}
  more = new cljs.core.IndexedSeq(G__13661__a,0);
} 
return G__13657__delegate.call(this,x,y,more);};
G__13657.cljs$lang$maxFixedArity = 2;
G__13657.cljs$lang$applyTo = (function (arglist__13662){
var x = cljs.core.first(arglist__13662);
arglist__13662 = cljs.core.next(arglist__13662);
var y = cljs.core.first(arglist__13662);
var more = cljs.core.rest(arglist__13662);
return G__13657__delegate(x,y,more);
});
G__13657.cljs$core$IFn$_invoke$arity$variadic = G__13657__delegate;
return G__13657;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__13663 = null;
if (arguments.length > 2) {
var G__13664__i = 0, G__13664__a = new Array(arguments.length -  2);
while (G__13664__i < G__13664__a.length) {G__13664__a[G__13664__i] = arguments[G__13664__i + 2]; ++G__13664__i;}
G__13663 = new cljs.core.IndexedSeq(G__13664__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13663);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__13665 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__13665) : cljs.core.es6_iterator_seq.call(null,G__13665));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__13666 = (n + (1));
var G__13667 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__13668 = cljs.core.next(coll__$1);
n = G__13666;
hash_code = G__13667;
coll__$1 = G__13668;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__13669 = (n + (1));
var G__13670 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__13671 = cljs.core.next(coll__$1);
n = G__13669;
hash_code = G__13670;
coll__$1 = G__13671;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__13672 = o;
return goog.getUid(G__13672);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__13674 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13674) : cljs.core.deref.call(null,G__13674));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__13681 = val;
var G__13682 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13681,G__13682) : f.call(null,G__13681,G__13682));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__13687 = nval;
var G__13688 = (n + (1));
val = G__13687;
n = G__13688;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__13683 = val__$1;
var G__13684 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13683,G__13684) : f.call(null,G__13683,G__13684));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__13689 = nval;
var G__13690 = (n + (1));
val__$1 = G__13689;
n = G__13690;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__13685 = val__$1;
var G__13686 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13685,G__13686) : f.call(null,G__13685,G__13686));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__13691 = nval;
var G__13692 = (n + (1));
val__$1 = G__13691;
n = G__13692;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__13699 = val;
var G__13700 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13699,G__13700) : f.call(null,G__13699,G__13700));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__13705 = nval;
var G__13706 = (n + (1));
val = G__13705;
n = G__13706;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__13701 = val__$1;
var G__13702 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13701,G__13702) : f.call(null,G__13701,G__13702));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__13707 = nval;
var G__13708 = (n + (1));
val__$1 = G__13707;
n = G__13708;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__13703 = val__$1;
var G__13704 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13703,G__13704) : f.call(null,G__13703,G__13704));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__13709 = nval;
var G__13710 = (n + (1));
val__$1 = G__13709;
n = G__13710;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__13712 = x;
if(G__13712){
var bit__6207__auto__ = (G__13712.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__6207__auto__) || (G__13712.cljs$core$ICounted$)){
return true;
} else {
if((!G__13712.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__13712);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__13712);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__13714 = x;
if(G__13714){
var bit__6207__auto__ = (G__13714.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__6207__auto__) || (G__13714.cljs$core$IIndexed$)){
return true;
} else {
if((!G__13714.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__13714);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__13714);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__13715 = coll__$1;
var G__13716 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__13715,G__13716) : cljs.core.equiv_sequential.call(null,G__13715,G__13716));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__13717 = o;
var G__13718 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__13717,G__13718) : cljs.core.cons.call(null,G__13717,G__13718));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6504__auto__ = this;
return cljs.core.es6_iterator(this__6504__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__13721 = coll__$1;
var G__13722 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__13721,G__13722) : cljs.core.equiv_sequential.call(null,G__13721,G__13722));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__13723 = cljs.core.List.EMPTY;
var G__13724 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__13723,G__13724) : cljs.core.with_meta.call(null,G__13723,G__13724));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__13725 = f;
var G__13726 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__13725,G__13726) : cljs.core.seq_reduce.call(null,G__13725,G__13726));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__13727 = f;
var G__13728 = start;
var G__13729 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__13727,G__13728,G__13729) : cljs.core.seq_reduce.call(null,G__13727,G__13728,G__13729));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__13730 = o;
var G__13731 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__13730,G__13731) : cljs.core.cons.call(null,G__13730,G__13731));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6504__auto__ = this;
return cljs.core.es6_iterator(this__6504__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__13732 = sn;
s = G__13732;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__13737__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__13738 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__13739 = cljs.core.first(xs);
var G__13740 = cljs.core.next(xs);
coll = G__13738;
x = G__13739;
xs = G__13740;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__13737 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__13741__i = 0, G__13741__a = new Array(arguments.length -  2);
while (G__13741__i < G__13741__a.length) {G__13741__a[G__13741__i] = arguments[G__13741__i + 2]; ++G__13741__i;}
  xs = new cljs.core.IndexedSeq(G__13741__a,0);
} 
return G__13737__delegate.call(this,coll,x,xs);};
G__13737.cljs$lang$maxFixedArity = 2;
G__13737.cljs$lang$applyTo = (function (arglist__13742){
var coll = cljs.core.first(arglist__13742);
arglist__13742 = cljs.core.next(arglist__13742);
var x = cljs.core.first(arglist__13742);
var xs = cljs.core.rest(arglist__13742);
return G__13737__delegate(coll,x,xs);
});
G__13737.cljs$core$IFn$_invoke$arity$variadic = G__13737__delegate;
return G__13737;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__13743 = null;
if (arguments.length > 2) {
var G__13744__i = 0, G__13744__a = new Array(arguments.length -  2);
while (G__13744__i < G__13744__a.length) {G__13744__a[G__13744__i] = arguments[G__13744__i + 2]; ++G__13744__i;}
G__13743 = new cljs.core.IndexedSeq(G__13744__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__13743);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__13745 = cljs.core.next(s);
var G__13746 = (acc + (1));
s = G__13745;
acc = G__13746;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__13748 = coll;
if(G__13748){
var bit__6200__auto__ = (G__13748.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__6200__auto__) || (G__13748.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__13749 = cljs.core.next(coll);
var G__13750 = (n - (1));
coll = G__13749;
n = G__13750;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__13751 = cljs.core.next(coll);
var G__13752 = (n - (1));
var G__13753 = not_found;
coll = G__13751;
n = G__13752;
not_found = G__13753;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__13758 = coll;
if(G__13758){
var bit__6200__auto__ = (G__13758.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__6200__auto__) || (G__13758.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__13759 = coll;
if(G__13759){
var bit__6207__auto__ = (G__13759.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__6207__auto__) || (G__13759.cljs$core$ISeq$)){
return true;
} else {
if((!G__13759.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__13759);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__13759);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__13760 = coll;
if(G__13760){
var bit__6200__auto__ = (G__13760.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__6200__auto__) || (G__13760.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__13761 = coll;
if(G__13761){
var bit__6207__auto__ = (G__13761.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__6207__auto__) || (G__13761.cljs$core$ISeq$)){
return true;
} else {
if((!G__13761.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__13761);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__13761);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__13762 = (n__$1 - (1));
var G__13763 = cljs.core.rest(xs);
n__$1 = G__13762;
xs = G__13763;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__13766 = o;
if(G__13766){
var bit__6200__auto__ = (G__13766.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__6200__auto__) || (G__13766.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__13767 = o;
if(G__13767){
var bit__6200__auto__ = (G__13767.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__6200__auto__) || (G__13767.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__13771__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__13772 = ret;
var G__13773 = cljs.core.first(kvs);
var G__13774 = cljs.core.second(kvs);
var G__13775 = cljs.core.nnext(kvs);
coll = G__13772;
k = G__13773;
v = G__13774;
kvs = G__13775;
continue;
} else {
return ret;
}
break;
}
};
var G__13771 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__13776__i = 0, G__13776__a = new Array(arguments.length -  3);
while (G__13776__i < G__13776__a.length) {G__13776__a[G__13776__i] = arguments[G__13776__i + 3]; ++G__13776__i;}
  kvs = new cljs.core.IndexedSeq(G__13776__a,0);
} 
return G__13771__delegate.call(this,coll,k,v,kvs);};
G__13771.cljs$lang$maxFixedArity = 3;
G__13771.cljs$lang$applyTo = (function (arglist__13777){
var coll = cljs.core.first(arglist__13777);
arglist__13777 = cljs.core.next(arglist__13777);
var k = cljs.core.first(arglist__13777);
arglist__13777 = cljs.core.next(arglist__13777);
var v = cljs.core.first(arglist__13777);
var kvs = cljs.core.rest(arglist__13777);
return G__13771__delegate(coll,k,v,kvs);
});
G__13771.cljs$core$IFn$_invoke$arity$variadic = G__13771__delegate;
return G__13771;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__13778 = null;
if (arguments.length > 3) {
var G__13779__i = 0, G__13779__a = new Array(arguments.length -  3);
while (G__13779__i < G__13779__a.length) {G__13779__a[G__13779__i] = arguments[G__13779__i + 3]; ++G__13779__i;}
G__13778 = new cljs.core.IndexedSeq(G__13779__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__13778);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__13782__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__13783 = ret;
var G__13784 = cljs.core.first(ks);
var G__13785 = cljs.core.next(ks);
coll = G__13783;
k = G__13784;
ks = G__13785;
continue;
} else {
return ret;
}
}
break;
}
};
var G__13782 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__13786__i = 0, G__13786__a = new Array(arguments.length -  2);
while (G__13786__i < G__13786__a.length) {G__13786__a[G__13786__i] = arguments[G__13786__i + 2]; ++G__13786__i;}
  ks = new cljs.core.IndexedSeq(G__13786__a,0);
} 
return G__13782__delegate.call(this,coll,k,ks);};
G__13782.cljs$lang$maxFixedArity = 2;
G__13782.cljs$lang$applyTo = (function (arglist__13787){
var coll = cljs.core.first(arglist__13787);
arglist__13787 = cljs.core.next(arglist__13787);
var k = cljs.core.first(arglist__13787);
var ks = cljs.core.rest(arglist__13787);
return G__13782__delegate(coll,k,ks);
});
G__13782.cljs$core$IFn$_invoke$arity$variadic = G__13782__delegate;
return G__13782;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__13788 = null;
if (arguments.length > 2) {
var G__13789__i = 0, G__13789__a = new Array(arguments.length -  2);
while (G__13789__i < G__13789__a.length) {G__13789__a[G__13789__i] = arguments[G__13789__i + 2]; ++G__13789__i;}
G__13788 = new cljs.core.IndexedSeq(G__13789__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__13788);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__5526__auto__ = (function (){var G__13794 = f;
return goog.isFunction(G__13794);
})();
if(cljs.core.truth_(or__5526__auto__)){
return or__5526__auto__;
} else {
var G__13795 = f;
if(G__13795){
var bit__6207__auto__ = null;
if(cljs.core.truth_((function (){var or__5526__auto____$1 = bit__6207__auto__;
if(cljs.core.truth_(or__5526__auto____$1)){
return or__5526__auto____$1;
} else {
return G__13795.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__13795.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__13795);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__13795);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__14261 = null;
var G__14261__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__14261__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13797 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__13797) : self__.afn.call(null,G__13797));
});
var G__14261__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13798 = a;
var G__13799 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__13798,G__13799) : self__.afn.call(null,G__13798,G__13799));
});
var G__14261__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13800 = a;
var G__13801 = b;
var G__13802 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__13800,G__13801,G__13802) : self__.afn.call(null,G__13800,G__13801,G__13802));
});
var G__14261__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13803 = a;
var G__13804 = b;
var G__13805 = c;
var G__13806 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__13803,G__13804,G__13805,G__13806) : self__.afn.call(null,G__13803,G__13804,G__13805,G__13806));
});
var G__14261__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13807 = a;
var G__13808 = b;
var G__13809 = c;
var G__13810 = d;
var G__13811 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__13807,G__13808,G__13809,G__13810,G__13811) : self__.afn.call(null,G__13807,G__13808,G__13809,G__13810,G__13811));
});
var G__14261__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13812 = a;
var G__13813 = b;
var G__13814 = c;
var G__13815 = d;
var G__13816 = e;
var G__13817 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__13812,G__13813,G__13814,G__13815,G__13816,G__13817) : self__.afn.call(null,G__13812,G__13813,G__13814,G__13815,G__13816,G__13817));
});
var G__14261__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13818 = a;
var G__13819 = b;
var G__13820 = c;
var G__13821 = d;
var G__13822 = e;
var G__13823 = f;
var G__13824 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__13818,G__13819,G__13820,G__13821,G__13822,G__13823,G__13824) : self__.afn.call(null,G__13818,G__13819,G__13820,G__13821,G__13822,G__13823,G__13824));
});
var G__14261__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13825 = a;
var G__13826 = b;
var G__13827 = c;
var G__13828 = d;
var G__13829 = e;
var G__13830 = f;
var G__13831 = g;
var G__13832 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__13825,G__13826,G__13827,G__13828,G__13829,G__13830,G__13831,G__13832) : self__.afn.call(null,G__13825,G__13826,G__13827,G__13828,G__13829,G__13830,G__13831,G__13832));
});
var G__14261__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13833 = a;
var G__13834 = b;
var G__13835 = c;
var G__13836 = d;
var G__13837 = e;
var G__13838 = f;
var G__13839 = g;
var G__13840 = h;
var G__13841 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__13833,G__13834,G__13835,G__13836,G__13837,G__13838,G__13839,G__13840,G__13841) : self__.afn.call(null,G__13833,G__13834,G__13835,G__13836,G__13837,G__13838,G__13839,G__13840,G__13841));
});
var G__14261__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13842 = a;
var G__13843 = b;
var G__13844 = c;
var G__13845 = d;
var G__13846 = e;
var G__13847 = f;
var G__13848 = g;
var G__13849 = h;
var G__13850 = i;
var G__13851 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__13842,G__13843,G__13844,G__13845,G__13846,G__13847,G__13848,G__13849,G__13850,G__13851) : self__.afn.call(null,G__13842,G__13843,G__13844,G__13845,G__13846,G__13847,G__13848,G__13849,G__13850,G__13851));
});
var G__14261__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13852 = a;
var G__13853 = b;
var G__13854 = c;
var G__13855 = d;
var G__13856 = e;
var G__13857 = f;
var G__13858 = g;
var G__13859 = h;
var G__13860 = i;
var G__13861 = j;
var G__13862 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__13852,G__13853,G__13854,G__13855,G__13856,G__13857,G__13858,G__13859,G__13860,G__13861,G__13862) : self__.afn.call(null,G__13852,G__13853,G__13854,G__13855,G__13856,G__13857,G__13858,G__13859,G__13860,G__13861,G__13862));
});
var G__14261__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13863 = a;
var G__13864 = b;
var G__13865 = c;
var G__13866 = d;
var G__13867 = e;
var G__13868 = f;
var G__13869 = g;
var G__13870 = h;
var G__13871 = i;
var G__13872 = j;
var G__13873 = k;
var G__13874 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__13863,G__13864,G__13865,G__13866,G__13867,G__13868,G__13869,G__13870,G__13871,G__13872,G__13873,G__13874) : self__.afn.call(null,G__13863,G__13864,G__13865,G__13866,G__13867,G__13868,G__13869,G__13870,G__13871,G__13872,G__13873,G__13874));
});
var G__14261__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13875 = a;
var G__13876 = b;
var G__13877 = c;
var G__13878 = d;
var G__13879 = e;
var G__13880 = f;
var G__13881 = g;
var G__13882 = h;
var G__13883 = i;
var G__13884 = j;
var G__13885 = k;
var G__13886 = l;
var G__13887 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__13875,G__13876,G__13877,G__13878,G__13879,G__13880,G__13881,G__13882,G__13883,G__13884,G__13885,G__13886,G__13887) : self__.afn.call(null,G__13875,G__13876,G__13877,G__13878,G__13879,G__13880,G__13881,G__13882,G__13883,G__13884,G__13885,G__13886,G__13887));
});
var G__14261__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13888 = a;
var G__13889 = b;
var G__13890 = c;
var G__13891 = d;
var G__13892 = e;
var G__13893 = f;
var G__13894 = g;
var G__13895 = h;
var G__13896 = i;
var G__13897 = j;
var G__13898 = k;
var G__13899 = l;
var G__13900 = m;
var G__13901 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__13888,G__13889,G__13890,G__13891,G__13892,G__13893,G__13894,G__13895,G__13896,G__13897,G__13898,G__13899,G__13900,G__13901) : self__.afn.call(null,G__13888,G__13889,G__13890,G__13891,G__13892,G__13893,G__13894,G__13895,G__13896,G__13897,G__13898,G__13899,G__13900,G__13901));
});
var G__14261__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13902 = a;
var G__13903 = b;
var G__13904 = c;
var G__13905 = d;
var G__13906 = e;
var G__13907 = f;
var G__13908 = g;
var G__13909 = h;
var G__13910 = i;
var G__13911 = j;
var G__13912 = k;
var G__13913 = l;
var G__13914 = m;
var G__13915 = n;
var G__13916 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__13902,G__13903,G__13904,G__13905,G__13906,G__13907,G__13908,G__13909,G__13910,G__13911,G__13912,G__13913,G__13914,G__13915,G__13916) : self__.afn.call(null,G__13902,G__13903,G__13904,G__13905,G__13906,G__13907,G__13908,G__13909,G__13910,G__13911,G__13912,G__13913,G__13914,G__13915,G__13916));
});
var G__14261__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13917 = a;
var G__13918 = b;
var G__13919 = c;
var G__13920 = d;
var G__13921 = e;
var G__13922 = f;
var G__13923 = g;
var G__13924 = h;
var G__13925 = i;
var G__13926 = j;
var G__13927 = k;
var G__13928 = l;
var G__13929 = m;
var G__13930 = n;
var G__13931 = o;
var G__13932 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__13917,G__13918,G__13919,G__13920,G__13921,G__13922,G__13923,G__13924,G__13925,G__13926,G__13927,G__13928,G__13929,G__13930,G__13931,G__13932) : self__.afn.call(null,G__13917,G__13918,G__13919,G__13920,G__13921,G__13922,G__13923,G__13924,G__13925,G__13926,G__13927,G__13928,G__13929,G__13930,G__13931,G__13932));
});
var G__14261__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13933 = a;
var G__13934 = b;
var G__13935 = c;
var G__13936 = d;
var G__13937 = e;
var G__13938 = f;
var G__13939 = g;
var G__13940 = h;
var G__13941 = i;
var G__13942 = j;
var G__13943 = k;
var G__13944 = l;
var G__13945 = m;
var G__13946 = n;
var G__13947 = o;
var G__13948 = p;
var G__13949 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__13933,G__13934,G__13935,G__13936,G__13937,G__13938,G__13939,G__13940,G__13941,G__13942,G__13943,G__13944,G__13945,G__13946,G__13947,G__13948,G__13949) : self__.afn.call(null,G__13933,G__13934,G__13935,G__13936,G__13937,G__13938,G__13939,G__13940,G__13941,G__13942,G__13943,G__13944,G__13945,G__13946,G__13947,G__13948,G__13949));
});
var G__14261__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13950 = a;
var G__13951 = b;
var G__13952 = c;
var G__13953 = d;
var G__13954 = e;
var G__13955 = f;
var G__13956 = g;
var G__13957 = h;
var G__13958 = i;
var G__13959 = j;
var G__13960 = k;
var G__13961 = l;
var G__13962 = m;
var G__13963 = n;
var G__13964 = o;
var G__13965 = p;
var G__13966 = q;
var G__13967 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__13950,G__13951,G__13952,G__13953,G__13954,G__13955,G__13956,G__13957,G__13958,G__13959,G__13960,G__13961,G__13962,G__13963,G__13964,G__13965,G__13966,G__13967) : self__.afn.call(null,G__13950,G__13951,G__13952,G__13953,G__13954,G__13955,G__13956,G__13957,G__13958,G__13959,G__13960,G__13961,G__13962,G__13963,G__13964,G__13965,G__13966,G__13967));
});
var G__14261__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13968 = a;
var G__13969 = b;
var G__13970 = c;
var G__13971 = d;
var G__13972 = e;
var G__13973 = f;
var G__13974 = g;
var G__13975 = h;
var G__13976 = i;
var G__13977 = j;
var G__13978 = k;
var G__13979 = l;
var G__13980 = m;
var G__13981 = n;
var G__13982 = o;
var G__13983 = p;
var G__13984 = q;
var G__13985 = r;
var G__13986 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__13968,G__13969,G__13970,G__13971,G__13972,G__13973,G__13974,G__13975,G__13976,G__13977,G__13978,G__13979,G__13980,G__13981,G__13982,G__13983,G__13984,G__13985,G__13986) : self__.afn.call(null,G__13968,G__13969,G__13970,G__13971,G__13972,G__13973,G__13974,G__13975,G__13976,G__13977,G__13978,G__13979,G__13980,G__13981,G__13982,G__13983,G__13984,G__13985,G__13986));
});
var G__14261__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13987 = a;
var G__13988 = b;
var G__13989 = c;
var G__13990 = d;
var G__13991 = e;
var G__13992 = f;
var G__13993 = g;
var G__13994 = h;
var G__13995 = i;
var G__13996 = j;
var G__13997 = k;
var G__13998 = l;
var G__13999 = m;
var G__14000 = n;
var G__14001 = o;
var G__14002 = p;
var G__14003 = q;
var G__14004 = r;
var G__14005 = s;
var G__14006 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__13987,G__13988,G__13989,G__13990,G__13991,G__13992,G__13993,G__13994,G__13995,G__13996,G__13997,G__13998,G__13999,G__14000,G__14001,G__14002,G__14003,G__14004,G__14005,G__14006) : self__.afn.call(null,G__13987,G__13988,G__13989,G__13990,G__13991,G__13992,G__13993,G__13994,G__13995,G__13996,G__13997,G__13998,G__13999,G__14000,G__14001,G__14002,G__14003,G__14004,G__14005,G__14006));
});
var G__14261__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__14007 = self__.afn;
var G__14008 = a;
var G__14009 = b;
var G__14010 = c;
var G__14011 = d;
var G__14012 = e;
var G__14013 = f;
var G__14014 = g;
var G__14015 = h;
var G__14016 = i;
var G__14017 = j;
var G__14018 = k;
var G__14019 = l;
var G__14020 = m;
var G__14021 = n;
var G__14022 = o;
var G__14023 = p;
var G__14024 = q;
var G__14025 = r;
var G__14026 = s;
var G__14027 = t;
var G__14028 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__14007,G__14008,G__14009,G__14010,G__14011,G__14012,G__14013,G__14014,G__14015,G__14016,G__14017,G__14018,G__14019,G__14020,G__14021,G__14022,G__14023,G__14024,G__14025,G__14026,G__14027,G__14028) : cljs.core.apply.call(null,G__14007,G__14008,G__14009,G__14010,G__14011,G__14012,G__14013,G__14014,G__14015,G__14016,G__14017,G__14018,G__14019,G__14020,G__14021,G__14022,G__14023,G__14024,G__14025,G__14026,G__14027,G__14028));
});
G__14261 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__14261__1.call(this,self__);
case 2:
return G__14261__2.call(this,self__,a);
case 3:
return G__14261__3.call(this,self__,a,b);
case 4:
return G__14261__4.call(this,self__,a,b,c);
case 5:
return G__14261__5.call(this,self__,a,b,c,d);
case 6:
return G__14261__6.call(this,self__,a,b,c,d,e);
case 7:
return G__14261__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__14261__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__14261__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__14261__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__14261__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__14261__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__14261__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__14261__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__14261__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__14261__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__14261__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__14261__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__14261__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__14261__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__14261__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__14261__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14261.cljs$core$IFn$_invoke$arity$1 = G__14261__1;
G__14261.cljs$core$IFn$_invoke$arity$2 = G__14261__2;
G__14261.cljs$core$IFn$_invoke$arity$3 = G__14261__3;
G__14261.cljs$core$IFn$_invoke$arity$4 = G__14261__4;
G__14261.cljs$core$IFn$_invoke$arity$5 = G__14261__5;
G__14261.cljs$core$IFn$_invoke$arity$6 = G__14261__6;
G__14261.cljs$core$IFn$_invoke$arity$7 = G__14261__7;
G__14261.cljs$core$IFn$_invoke$arity$8 = G__14261__8;
G__14261.cljs$core$IFn$_invoke$arity$9 = G__14261__9;
G__14261.cljs$core$IFn$_invoke$arity$10 = G__14261__10;
G__14261.cljs$core$IFn$_invoke$arity$11 = G__14261__11;
G__14261.cljs$core$IFn$_invoke$arity$12 = G__14261__12;
G__14261.cljs$core$IFn$_invoke$arity$13 = G__14261__13;
G__14261.cljs$core$IFn$_invoke$arity$14 = G__14261__14;
G__14261.cljs$core$IFn$_invoke$arity$15 = G__14261__15;
G__14261.cljs$core$IFn$_invoke$arity$16 = G__14261__16;
G__14261.cljs$core$IFn$_invoke$arity$17 = G__14261__17;
G__14261.cljs$core$IFn$_invoke$arity$18 = G__14261__18;
G__14261.cljs$core$IFn$_invoke$arity$19 = G__14261__19;
G__14261.cljs$core$IFn$_invoke$arity$20 = G__14261__20;
G__14261.cljs$core$IFn$_invoke$arity$21 = G__14261__21;
G__14261.cljs$core$IFn$_invoke$arity$22 = G__14261__22;
return G__14261;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args13796){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13796)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__14029 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__14029) : self__.afn.call(null,G__14029));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__14030 = a;
var G__14031 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__14030,G__14031) : self__.afn.call(null,G__14030,G__14031));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__14032 = a;
var G__14033 = b;
var G__14034 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__14032,G__14033,G__14034) : self__.afn.call(null,G__14032,G__14033,G__14034));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__14035 = a;
var G__14036 = b;
var G__14037 = c;
var G__14038 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__14035,G__14036,G__14037,G__14038) : self__.afn.call(null,G__14035,G__14036,G__14037,G__14038));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__14039 = a;
var G__14040 = b;
var G__14041 = c;
var G__14042 = d;
var G__14043 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__14039,G__14040,G__14041,G__14042,G__14043) : self__.afn.call(null,G__14039,G__14040,G__14041,G__14042,G__14043));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__14044 = a;
var G__14045 = b;
var G__14046 = c;
var G__14047 = d;
var G__14048 = e;
var G__14049 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__14044,G__14045,G__14046,G__14047,G__14048,G__14049) : self__.afn.call(null,G__14044,G__14045,G__14046,G__14047,G__14048,G__14049));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__14050 = a;
var G__14051 = b;
var G__14052 = c;
var G__14053 = d;
var G__14054 = e;
var G__14055 = f;
var G__14056 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__14050,G__14051,G__14052,G__14053,G__14054,G__14055,G__14056) : self__.afn.call(null,G__14050,G__14051,G__14052,G__14053,G__14054,G__14055,G__14056));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__14057 = a;
var G__14058 = b;
var G__14059 = c;
var G__14060 = d;
var G__14061 = e;
var G__14062 = f;
var G__14063 = g;
var G__14064 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__14057,G__14058,G__14059,G__14060,G__14061,G__14062,G__14063,G__14064) : self__.afn.call(null,G__14057,G__14058,G__14059,G__14060,G__14061,G__14062,G__14063,G__14064));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__14065 = a;
var G__14066 = b;
var G__14067 = c;
var G__14068 = d;
var G__14069 = e;
var G__14070 = f;
var G__14071 = g;
var G__14072 = h;
var G__14073 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__14065,G__14066,G__14067,G__14068,G__14069,G__14070,G__14071,G__14072,G__14073) : self__.afn.call(null,G__14065,G__14066,G__14067,G__14068,G__14069,G__14070,G__14071,G__14072,G__14073));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__14074 = a;
var G__14075 = b;
var G__14076 = c;
var G__14077 = d;
var G__14078 = e;
var G__14079 = f;
var G__14080 = g;
var G__14081 = h;
var G__14082 = i;
var G__14083 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__14074,G__14075,G__14076,G__14077,G__14078,G__14079,G__14080,G__14081,G__14082,G__14083) : self__.afn.call(null,G__14074,G__14075,G__14076,G__14077,G__14078,G__14079,G__14080,G__14081,G__14082,G__14083));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__14084 = a;
var G__14085 = b;
var G__14086 = c;
var G__14087 = d;
var G__14088 = e;
var G__14089 = f;
var G__14090 = g;
var G__14091 = h;
var G__14092 = i;
var G__14093 = j;
var G__14094 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__14084,G__14085,G__14086,G__14087,G__14088,G__14089,G__14090,G__14091,G__14092,G__14093,G__14094) : self__.afn.call(null,G__14084,G__14085,G__14086,G__14087,G__14088,G__14089,G__14090,G__14091,G__14092,G__14093,G__14094));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__14095 = a;
var G__14096 = b;
var G__14097 = c;
var G__14098 = d;
var G__14099 = e;
var G__14100 = f;
var G__14101 = g;
var G__14102 = h;
var G__14103 = i;
var G__14104 = j;
var G__14105 = k;
var G__14106 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__14095,G__14096,G__14097,G__14098,G__14099,G__14100,G__14101,G__14102,G__14103,G__14104,G__14105,G__14106) : self__.afn.call(null,G__14095,G__14096,G__14097,G__14098,G__14099,G__14100,G__14101,G__14102,G__14103,G__14104,G__14105,G__14106));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__14107 = a;
var G__14108 = b;
var G__14109 = c;
var G__14110 = d;
var G__14111 = e;
var G__14112 = f;
var G__14113 = g;
var G__14114 = h;
var G__14115 = i;
var G__14116 = j;
var G__14117 = k;
var G__14118 = l;
var G__14119 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__14107,G__14108,G__14109,G__14110,G__14111,G__14112,G__14113,G__14114,G__14115,G__14116,G__14117,G__14118,G__14119) : self__.afn.call(null,G__14107,G__14108,G__14109,G__14110,G__14111,G__14112,G__14113,G__14114,G__14115,G__14116,G__14117,G__14118,G__14119));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__14120 = a;
var G__14121 = b;
var G__14122 = c;
var G__14123 = d;
var G__14124 = e;
var G__14125 = f;
var G__14126 = g;
var G__14127 = h;
var G__14128 = i;
var G__14129 = j;
var G__14130 = k;
var G__14131 = l;
var G__14132 = m;
var G__14133 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__14120,G__14121,G__14122,G__14123,G__14124,G__14125,G__14126,G__14127,G__14128,G__14129,G__14130,G__14131,G__14132,G__14133) : self__.afn.call(null,G__14120,G__14121,G__14122,G__14123,G__14124,G__14125,G__14126,G__14127,G__14128,G__14129,G__14130,G__14131,G__14132,G__14133));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__14134 = a;
var G__14135 = b;
var G__14136 = c;
var G__14137 = d;
var G__14138 = e;
var G__14139 = f;
var G__14140 = g;
var G__14141 = h;
var G__14142 = i;
var G__14143 = j;
var G__14144 = k;
var G__14145 = l;
var G__14146 = m;
var G__14147 = n;
var G__14148 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__14134,G__14135,G__14136,G__14137,G__14138,G__14139,G__14140,G__14141,G__14142,G__14143,G__14144,G__14145,G__14146,G__14147,G__14148) : self__.afn.call(null,G__14134,G__14135,G__14136,G__14137,G__14138,G__14139,G__14140,G__14141,G__14142,G__14143,G__14144,G__14145,G__14146,G__14147,G__14148));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__14149 = a;
var G__14150 = b;
var G__14151 = c;
var G__14152 = d;
var G__14153 = e;
var G__14154 = f;
var G__14155 = g;
var G__14156 = h;
var G__14157 = i;
var G__14158 = j;
var G__14159 = k;
var G__14160 = l;
var G__14161 = m;
var G__14162 = n;
var G__14163 = o;
var G__14164 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__14149,G__14150,G__14151,G__14152,G__14153,G__14154,G__14155,G__14156,G__14157,G__14158,G__14159,G__14160,G__14161,G__14162,G__14163,G__14164) : self__.afn.call(null,G__14149,G__14150,G__14151,G__14152,G__14153,G__14154,G__14155,G__14156,G__14157,G__14158,G__14159,G__14160,G__14161,G__14162,G__14163,G__14164));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__14165 = a;
var G__14166 = b;
var G__14167 = c;
var G__14168 = d;
var G__14169 = e;
var G__14170 = f;
var G__14171 = g;
var G__14172 = h;
var G__14173 = i;
var G__14174 = j;
var G__14175 = k;
var G__14176 = l;
var G__14177 = m;
var G__14178 = n;
var G__14179 = o;
var G__14180 = p;
var G__14181 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__14165,G__14166,G__14167,G__14168,G__14169,G__14170,G__14171,G__14172,G__14173,G__14174,G__14175,G__14176,G__14177,G__14178,G__14179,G__14180,G__14181) : self__.afn.call(null,G__14165,G__14166,G__14167,G__14168,G__14169,G__14170,G__14171,G__14172,G__14173,G__14174,G__14175,G__14176,G__14177,G__14178,G__14179,G__14180,G__14181));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__14182 = a;
var G__14183 = b;
var G__14184 = c;
var G__14185 = d;
var G__14186 = e;
var G__14187 = f;
var G__14188 = g;
var G__14189 = h;
var G__14190 = i;
var G__14191 = j;
var G__14192 = k;
var G__14193 = l;
var G__14194 = m;
var G__14195 = n;
var G__14196 = o;
var G__14197 = p;
var G__14198 = q;
var G__14199 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__14182,G__14183,G__14184,G__14185,G__14186,G__14187,G__14188,G__14189,G__14190,G__14191,G__14192,G__14193,G__14194,G__14195,G__14196,G__14197,G__14198,G__14199) : self__.afn.call(null,G__14182,G__14183,G__14184,G__14185,G__14186,G__14187,G__14188,G__14189,G__14190,G__14191,G__14192,G__14193,G__14194,G__14195,G__14196,G__14197,G__14198,G__14199));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__14200 = a;
var G__14201 = b;
var G__14202 = c;
var G__14203 = d;
var G__14204 = e;
var G__14205 = f;
var G__14206 = g;
var G__14207 = h;
var G__14208 = i;
var G__14209 = j;
var G__14210 = k;
var G__14211 = l;
var G__14212 = m;
var G__14213 = n;
var G__14214 = o;
var G__14215 = p;
var G__14216 = q;
var G__14217 = r;
var G__14218 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__14200,G__14201,G__14202,G__14203,G__14204,G__14205,G__14206,G__14207,G__14208,G__14209,G__14210,G__14211,G__14212,G__14213,G__14214,G__14215,G__14216,G__14217,G__14218) : self__.afn.call(null,G__14200,G__14201,G__14202,G__14203,G__14204,G__14205,G__14206,G__14207,G__14208,G__14209,G__14210,G__14211,G__14212,G__14213,G__14214,G__14215,G__14216,G__14217,G__14218));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__14219 = a;
var G__14220 = b;
var G__14221 = c;
var G__14222 = d;
var G__14223 = e;
var G__14224 = f;
var G__14225 = g;
var G__14226 = h;
var G__14227 = i;
var G__14228 = j;
var G__14229 = k;
var G__14230 = l;
var G__14231 = m;
var G__14232 = n;
var G__14233 = o;
var G__14234 = p;
var G__14235 = q;
var G__14236 = r;
var G__14237 = s;
var G__14238 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__14219,G__14220,G__14221,G__14222,G__14223,G__14224,G__14225,G__14226,G__14227,G__14228,G__14229,G__14230,G__14231,G__14232,G__14233,G__14234,G__14235,G__14236,G__14237,G__14238) : self__.afn.call(null,G__14219,G__14220,G__14221,G__14222,G__14223,G__14224,G__14225,G__14226,G__14227,G__14228,G__14229,G__14230,G__14231,G__14232,G__14233,G__14234,G__14235,G__14236,G__14237,G__14238));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__14239 = self__.afn;
var G__14240 = a;
var G__14241 = b;
var G__14242 = c;
var G__14243 = d;
var G__14244 = e;
var G__14245 = f;
var G__14246 = g;
var G__14247 = h;
var G__14248 = i;
var G__14249 = j;
var G__14250 = k;
var G__14251 = l;
var G__14252 = m;
var G__14253 = n;
var G__14254 = o;
var G__14255 = p;
var G__14256 = q;
var G__14257 = r;
var G__14258 = s;
var G__14259 = t;
var G__14260 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__14239,G__14240,G__14241,G__14242,G__14243,G__14244,G__14245,G__14246,G__14247,G__14248,G__14249,G__14250,G__14251,G__14252,G__14253,G__14254,G__14255,G__14256,G__14257,G__14258,G__14259,G__14260) : cljs.core.apply.call(null,G__14239,G__14240,G__14241,G__14242,G__14243,G__14244,G__14245,G__14246,G__14247,G__14248,G__14249,G__14250,G__14251,G__14252,G__14253,G__14254,G__14255,G__14256,G__14257,G__14258,G__14259,G__14260));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__14265 = o;
if(G__14265){
var bit__6207__auto__ = (G__14265.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__6207__auto__) || (G__14265.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__14265.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__14265);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__14265);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__5514__auto__ = !((o == null));
if(and__5514__auto__){
var G__14269 = o;
if(G__14269){
var bit__6207__auto__ = (G__14269.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__6207__auto__) || (G__14269.cljs$core$IMeta$)){
return true;
} else {
if((!G__14269.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__14269);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__14269);
}
} else {
return and__5514__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__14272__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__14273 = ret;
var G__14274 = cljs.core.first(ks);
var G__14275 = cljs.core.next(ks);
coll = G__14273;
k = G__14274;
ks = G__14275;
continue;
} else {
return ret;
}
}
break;
}
};
var G__14272 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__14276__i = 0, G__14276__a = new Array(arguments.length -  2);
while (G__14276__i < G__14276__a.length) {G__14276__a[G__14276__i] = arguments[G__14276__i + 2]; ++G__14276__i;}
  ks = new cljs.core.IndexedSeq(G__14276__a,0);
} 
return G__14272__delegate.call(this,coll,k,ks);};
G__14272.cljs$lang$maxFixedArity = 2;
G__14272.cljs$lang$applyTo = (function (arglist__14277){
var coll = cljs.core.first(arglist__14277);
arglist__14277 = cljs.core.next(arglist__14277);
var k = cljs.core.first(arglist__14277);
var ks = cljs.core.rest(arglist__14277);
return G__14272__delegate(coll,k,ks);
});
G__14272.cljs$core$IFn$_invoke$arity$variadic = G__14272__delegate;
return G__14272;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__14278 = null;
if (arguments.length > 2) {
var G__14279__i = 0, G__14279__a = new Array(arguments.length -  2);
while (G__14279__i < G__14279__a.length) {G__14279__a[G__14279__i] = arguments[G__14279__i + 2]; ++G__14279__i;}
G__14278 = new cljs.core.IndexedSeq(G__14279__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__14278);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__14281 = x;
if(G__14281){
var bit__6207__auto__ = (G__14281.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__6207__auto__) || (G__14281.cljs$core$ICollection$)){
return true;
} else {
if((!G__14281.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__14281);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__14281);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__14283 = x;
if(G__14283){
var bit__6207__auto__ = (G__14283.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__6207__auto__) || (G__14283.cljs$core$ISet$)){
return true;
} else {
if((!G__14283.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__14283);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__14283);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__14285 = x;
if(G__14285){
var bit__6207__auto__ = (G__14285.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__6207__auto__) || (G__14285.cljs$core$IAssociative$)){
return true;
} else {
if((!G__14285.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__14285);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__14285);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__14287 = x;
if(G__14287){
var bit__6207__auto__ = (G__14287.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__6207__auto__) || (G__14287.cljs$core$ISequential$)){
return true;
} else {
if((!G__14287.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__14287);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__14287);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__14289 = x;
if(G__14289){
var bit__6207__auto__ = (G__14289.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__6207__auto__) || (G__14289.cljs$core$ISorted$)){
return true;
} else {
if((!G__14289.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__14289);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__14289);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__14291 = x;
if(G__14291){
var bit__6207__auto__ = (G__14291.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__6207__auto__) || (G__14291.cljs$core$IReduce$)){
return true;
} else {
if((!G__14291.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__14291);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__14291);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__14293 = x;
if(G__14293){
var bit__6207__auto__ = (G__14293.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__6207__auto__) || (G__14293.cljs$core$IMap$)){
return true;
} else {
if((!G__14293.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__14293);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__14293);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__14295 = x;
if(G__14295){
var bit__6207__auto__ = (G__14295.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__6207__auto__) || (G__14295.cljs$core$IVector$)){
return true;
} else {
if((!G__14295.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__14295);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__14295);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__14297 = x;
if(G__14297){
var bit__6200__auto__ = (G__14297.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__6200__auto__) || (G__14297.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj14303 = {};
return obj14303;
});
var js_obj__1 = (function() { 
var G__14306__delegate = function (keyvals){
var G__14304 = goog.object.create;
var G__14305 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__14304,G__14305) : cljs.core.apply.call(null,G__14304,G__14305));
};
var G__14306 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__14307__i = 0, G__14307__a = new Array(arguments.length -  0);
while (G__14307__i < G__14307__a.length) {G__14307__a[G__14307__i] = arguments[G__14307__i + 0]; ++G__14307__i;}
  keyvals = new cljs.core.IndexedSeq(G__14307__a,0);
} 
return G__14306__delegate.call(this,keyvals);};
G__14306.cljs$lang$maxFixedArity = 0;
G__14306.cljs$lang$applyTo = (function (arglist__14308){
var keyvals = cljs.core.seq(arglist__14308);
return G__14306__delegate(keyvals);
});
G__14306.cljs$core$IFn$_invoke$arity$variadic = G__14306__delegate;
return G__14306;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__14309 = null;
if (arguments.length > 0) {
var G__14310__i = 0, G__14310__a = new Array(arguments.length -  0);
while (G__14310__i < G__14310__a.length) {G__14310__a[G__14310__i] = arguments[G__14310__i + 0]; ++G__14310__i;}
G__14309 = new cljs.core.IndexedSeq(G__14310__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__14309);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__14313_14315 = obj;
var G__14314_14316 = ((function (G__14313_14315,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__14313_14315,keys))
;
goog.object.forEach(G__14313_14315,G__14314_14316);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__14317 = (i__$1 + (1));
var G__14318 = (j__$1 + (1));
var G__14319 = (len__$1 - (1));
i__$1 = G__14317;
j__$1 = G__14318;
len__$1 = G__14319;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__14320 = (i__$1 - (1));
var G__14321 = (j__$1 - (1));
var G__14322 = (len__$1 - (1));
i__$1 = G__14320;
j__$1 = G__14321;
len__$1 = G__14322;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj14324 = {};
return obj14324;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__14326 = s;
if(G__14326){
var bit__6207__auto__ = (G__14326.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__6207__auto__) || (G__14326.cljs$core$ISeq$)){
return true;
} else {
if((!G__14326.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__14326);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__14326);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__14328 = s;
if(G__14328){
var bit__6207__auto__ = (G__14328.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__6207__auto__) || (G__14328.cljs$core$ISeqable$)){
return true;
} else {
if((!G__14328.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__14328);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__14328);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__5526__auto__ = cljs.core.fn_QMARK_(f);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var G__14332 = f;
if(G__14332){
var bit__6207__auto__ = (G__14332.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__6207__auto__) || (G__14332.cljs$core$IFn$)){
return true;
} else {
if((!G__14332.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__14332);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__14332);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__14345 = n;
return isNaN(G__14345);
})())) && (!((n === Infinity))) && (((function (){var G__14346 = n;
return parseFloat(G__14346);
})() === (function (){var G__14347 = n;
var G__14348 = (10);
return parseInt(G__14347,G__14348);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__14349__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__14350 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__14351 = etc;
s = G__14350;
xs = G__14351;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__14349 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14352__i = 0, G__14352__a = new Array(arguments.length -  2);
while (G__14352__i < G__14352__a.length) {G__14352__a[G__14352__i] = arguments[G__14352__i + 2]; ++G__14352__i;}
  more = new cljs.core.IndexedSeq(G__14352__a,0);
} 
return G__14349__delegate.call(this,x,y,more);};
G__14349.cljs$lang$maxFixedArity = 2;
G__14349.cljs$lang$applyTo = (function (arglist__14353){
var x = cljs.core.first(arglist__14353);
arglist__14353 = cljs.core.next(arglist__14353);
var y = cljs.core.first(arglist__14353);
var more = cljs.core.rest(arglist__14353);
return G__14349__delegate(x,y,more);
});
G__14349.cljs$core$IFn$_invoke$arity$variadic = G__14349__delegate;
return G__14349;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__14354 = null;
if (arguments.length > 2) {
var G__14355__i = 0, G__14355__a = new Array(arguments.length -  2);
while (G__14355__i < G__14355__a.length) {G__14355__a[G__14355__i] = arguments[G__14355__i + 2]; ++G__14355__i;}
G__14354 = new cljs.core.IndexedSeq(G__14355__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14354);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__14359 = x;
if(G__14359){
var bit__6200__auto__ = (G__14359.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__6200__auto__) || (G__14359.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__14360 = x;
var G__14361 = y;
return goog.array.defaultCompare(G__14360,G__14361);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__14366 = xs;
var G__14367 = ys;
var G__14368 = len;
var G__14369 = (n + (1));
xs = G__14366;
ys = G__14367;
len = G__14368;
n = G__14369;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__14374 = x;
var G__14375 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14374,G__14375) : f.call(null,G__14374,G__14375));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__14376 = y;
var G__14377 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14376,G__14377) : f.call(null,G__14376,G__14377));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__14383 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__14383) : cljs.core.to_array.call(null,G__14383));
})();
var G__14384_14386 = a;
var G__14385_14387 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__14384_14386,G__14385_14387);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__14393 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__14393) : keyfn.call(null,G__14393));
})(),(function (){var G__14394 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__14394) : keyfn.call(null,G__14394));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__14400 = f;
var G__14401 = cljs.core.first(s);
var G__14402 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__14400,G__14401,G__14402) : cljs.core.reduce.call(null,G__14400,G__14401,G__14402));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__14403 = val__$1;
var G__14404 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14403,G__14404) : f.call(null,G__14403,G__14404));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__14405 = nval;
var G__14406 = cljs.core.next(coll__$1);
val__$1 = G__14405;
coll__$1 = G__14406;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__14410 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__14410) : cljs.core.to_array.call(null,G__14410));
})();
var G__14411_14413 = a;
goog.array.shuffle(G__14411_14413);

var G__14412 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__14412) : cljs.core.vec.call(null,G__14412));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__14416 = coll;
if(G__14416){
var bit__6200__auto__ = (G__14416.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__6200__auto__) || (G__14416.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__14417 = coll;
if(G__14417){
var bit__6200__auto__ = (G__14417.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__6200__auto__) || (G__14417.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__14426 = null;
var G__14426__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__14426__1 = (function (x){
var G__14423 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__14423) : cf.call(null,G__14423));
});
var G__14426__2 = (function (x,y){
var G__14424 = x;
var G__14425 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14424,G__14425) : f.call(null,G__14424,G__14425));
});
G__14426 = function(x,y){
switch(arguments.length){
case 0:
return G__14426__0.call(this);
case 1:
return G__14426__1.call(this,x);
case 2:
return G__14426__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14426.cljs$core$IFn$_invoke$arity$0 = G__14426__0;
G__14426.cljs$core$IFn$_invoke$arity$1 = G__14426__1;
G__14426.cljs$core$IFn$_invoke$arity$2 = G__14426__2;
return G__14426;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__14433 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__14433) : xform.call(null,G__14433));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__14434 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__14434) : f__$1.call(null,G__14434));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__14435__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__14435 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14436__i = 0, G__14436__a = new Array(arguments.length -  2);
while (G__14436__i < G__14436__a.length) {G__14436__a[G__14436__i] = arguments[G__14436__i + 2]; ++G__14436__i;}
  more = new cljs.core.IndexedSeq(G__14436__a,0);
} 
return G__14435__delegate.call(this,x,y,more);};
G__14435.cljs$lang$maxFixedArity = 2;
G__14435.cljs$lang$applyTo = (function (arglist__14437){
var x = cljs.core.first(arglist__14437);
arglist__14437 = cljs.core.next(arglist__14437);
var y = cljs.core.first(arglist__14437);
var more = cljs.core.rest(arglist__14437);
return G__14435__delegate(x,y,more);
});
G__14435.cljs$core$IFn$_invoke$arity$variadic = G__14435__delegate;
return G__14435;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__14438 = null;
if (arguments.length > 2) {
var G__14439__i = 0, G__14439__a = new Array(arguments.length -  2);
while (G__14439__i < G__14439__a.length) {G__14439__a[G__14439__i] = arguments[G__14439__i + 2]; ++G__14439__i;}
G__14438 = new cljs.core.IndexedSeq(G__14439__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14438);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__14440__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__14440 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14441__i = 0, G__14441__a = new Array(arguments.length -  2);
while (G__14441__i < G__14441__a.length) {G__14441__a[G__14441__i] = arguments[G__14441__i + 2]; ++G__14441__i;}
  more = new cljs.core.IndexedSeq(G__14441__a,0);
} 
return G__14440__delegate.call(this,x,y,more);};
G__14440.cljs$lang$maxFixedArity = 2;
G__14440.cljs$lang$applyTo = (function (arglist__14442){
var x = cljs.core.first(arglist__14442);
arglist__14442 = cljs.core.next(arglist__14442);
var y = cljs.core.first(arglist__14442);
var more = cljs.core.rest(arglist__14442);
return G__14440__delegate(x,y,more);
});
G__14440.cljs$core$IFn$_invoke$arity$variadic = G__14440__delegate;
return G__14440;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__14443 = null;
if (arguments.length > 2) {
var G__14444__i = 0, G__14444__a = new Array(arguments.length -  2);
while (G__14444__i < G__14444__a.length) {G__14444__a[G__14444__i] = arguments[G__14444__i + 2]; ++G__14444__i;}
G__14443 = new cljs.core.IndexedSeq(G__14444__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14443);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__14445__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__14445 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14446__i = 0, G__14446__a = new Array(arguments.length -  2);
while (G__14446__i < G__14446__a.length) {G__14446__a[G__14446__i] = arguments[G__14446__i + 2]; ++G__14446__i;}
  more = new cljs.core.IndexedSeq(G__14446__a,0);
} 
return G__14445__delegate.call(this,x,y,more);};
G__14445.cljs$lang$maxFixedArity = 2;
G__14445.cljs$lang$applyTo = (function (arglist__14447){
var x = cljs.core.first(arglist__14447);
arglist__14447 = cljs.core.next(arglist__14447);
var y = cljs.core.first(arglist__14447);
var more = cljs.core.rest(arglist__14447);
return G__14445__delegate(x,y,more);
});
G__14445.cljs$core$IFn$_invoke$arity$variadic = G__14445__delegate;
return G__14445;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__14448 = null;
if (arguments.length > 2) {
var G__14449__i = 0, G__14449__a = new Array(arguments.length -  2);
while (G__14449__i < G__14449__a.length) {G__14449__a[G__14449__i] = arguments[G__14449__i + 2]; ++G__14449__i;}
G__14448 = new cljs.core.IndexedSeq(G__14449__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14448);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__14454__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__14454 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14455__i = 0, G__14455__a = new Array(arguments.length -  2);
while (G__14455__i < G__14455__a.length) {G__14455__a[G__14455__i] = arguments[G__14455__i + 2]; ++G__14455__i;}
  more = new cljs.core.IndexedSeq(G__14455__a,0);
} 
return G__14454__delegate.call(this,x,y,more);};
G__14454.cljs$lang$maxFixedArity = 2;
G__14454.cljs$lang$applyTo = (function (arglist__14456){
var x = cljs.core.first(arglist__14456);
arglist__14456 = cljs.core.next(arglist__14456);
var y = cljs.core.first(arglist__14456);
var more = cljs.core.rest(arglist__14456);
return G__14454__delegate(x,y,more);
});
G__14454.cljs$core$IFn$_invoke$arity$variadic = G__14454__delegate;
return G__14454;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__14457 = null;
if (arguments.length > 2) {
var G__14458__i = 0, G__14458__a = new Array(arguments.length -  2);
while (G__14458__i < G__14458__a.length) {G__14458__a[G__14458__i] = arguments[G__14458__i + 2]; ++G__14458__i;}
G__14457 = new cljs.core.IndexedSeq(G__14458__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14457);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__14459__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__14460 = y;
var G__14461 = cljs.core.first(more);
var G__14462 = cljs.core.next(more);
x = G__14460;
y = G__14461;
more = G__14462;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__14459 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14463__i = 0, G__14463__a = new Array(arguments.length -  2);
while (G__14463__i < G__14463__a.length) {G__14463__a[G__14463__i] = arguments[G__14463__i + 2]; ++G__14463__i;}
  more = new cljs.core.IndexedSeq(G__14463__a,0);
} 
return G__14459__delegate.call(this,x,y,more);};
G__14459.cljs$lang$maxFixedArity = 2;
G__14459.cljs$lang$applyTo = (function (arglist__14464){
var x = cljs.core.first(arglist__14464);
arglist__14464 = cljs.core.next(arglist__14464);
var y = cljs.core.first(arglist__14464);
var more = cljs.core.rest(arglist__14464);
return G__14459__delegate(x,y,more);
});
G__14459.cljs$core$IFn$_invoke$arity$variadic = G__14459__delegate;
return G__14459;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__14465 = null;
if (arguments.length > 2) {
var G__14466__i = 0, G__14466__a = new Array(arguments.length -  2);
while (G__14466__i < G__14466__a.length) {G__14466__a[G__14466__i] = arguments[G__14466__i + 2]; ++G__14466__i;}
G__14465 = new cljs.core.IndexedSeq(G__14466__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14465);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__14467__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__14468 = y;
var G__14469 = cljs.core.first(more);
var G__14470 = cljs.core.next(more);
x = G__14468;
y = G__14469;
more = G__14470;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__14467 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14471__i = 0, G__14471__a = new Array(arguments.length -  2);
while (G__14471__i < G__14471__a.length) {G__14471__a[G__14471__i] = arguments[G__14471__i + 2]; ++G__14471__i;}
  more = new cljs.core.IndexedSeq(G__14471__a,0);
} 
return G__14467__delegate.call(this,x,y,more);};
G__14467.cljs$lang$maxFixedArity = 2;
G__14467.cljs$lang$applyTo = (function (arglist__14472){
var x = cljs.core.first(arglist__14472);
arglist__14472 = cljs.core.next(arglist__14472);
var y = cljs.core.first(arglist__14472);
var more = cljs.core.rest(arglist__14472);
return G__14467__delegate(x,y,more);
});
G__14467.cljs$core$IFn$_invoke$arity$variadic = G__14467__delegate;
return G__14467;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__14473 = null;
if (arguments.length > 2) {
var G__14474__i = 0, G__14474__a = new Array(arguments.length -  2);
while (G__14474__i < G__14474__a.length) {G__14474__a[G__14474__i] = arguments[G__14474__i + 2]; ++G__14474__i;}
G__14473 = new cljs.core.IndexedSeq(G__14474__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14473);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__14475__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__14476 = y;
var G__14477 = cljs.core.first(more);
var G__14478 = cljs.core.next(more);
x = G__14476;
y = G__14477;
more = G__14478;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__14475 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14479__i = 0, G__14479__a = new Array(arguments.length -  2);
while (G__14479__i < G__14479__a.length) {G__14479__a[G__14479__i] = arguments[G__14479__i + 2]; ++G__14479__i;}
  more = new cljs.core.IndexedSeq(G__14479__a,0);
} 
return G__14475__delegate.call(this,x,y,more);};
G__14475.cljs$lang$maxFixedArity = 2;
G__14475.cljs$lang$applyTo = (function (arglist__14480){
var x = cljs.core.first(arglist__14480);
arglist__14480 = cljs.core.next(arglist__14480);
var y = cljs.core.first(arglist__14480);
var more = cljs.core.rest(arglist__14480);
return G__14475__delegate(x,y,more);
});
G__14475.cljs$core$IFn$_invoke$arity$variadic = G__14475__delegate;
return G__14475;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__14481 = null;
if (arguments.length > 2) {
var G__14482__i = 0, G__14482__a = new Array(arguments.length -  2);
while (G__14482__i < G__14482__a.length) {G__14482__a[G__14482__i] = arguments[G__14482__i + 2]; ++G__14482__i;}
G__14481 = new cljs.core.IndexedSeq(G__14482__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14481);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__14483__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__14484 = y;
var G__14485 = cljs.core.first(more);
var G__14486 = cljs.core.next(more);
x = G__14484;
y = G__14485;
more = G__14486;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__14483 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14487__i = 0, G__14487__a = new Array(arguments.length -  2);
while (G__14487__i < G__14487__a.length) {G__14487__a[G__14487__i] = arguments[G__14487__i + 2]; ++G__14487__i;}
  more = new cljs.core.IndexedSeq(G__14487__a,0);
} 
return G__14483__delegate.call(this,x,y,more);};
G__14483.cljs$lang$maxFixedArity = 2;
G__14483.cljs$lang$applyTo = (function (arglist__14488){
var x = cljs.core.first(arglist__14488);
arglist__14488 = cljs.core.next(arglist__14488);
var y = cljs.core.first(arglist__14488);
var more = cljs.core.rest(arglist__14488);
return G__14483__delegate(x,y,more);
});
G__14483.cljs$core$IFn$_invoke$arity$variadic = G__14483__delegate;
return G__14483;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__14489 = null;
if (arguments.length > 2) {
var G__14490__i = 0, G__14490__a = new Array(arguments.length -  2);
while (G__14490__i < G__14490__a.length) {G__14490__a[G__14490__i] = arguments[G__14490__i + 2]; ++G__14490__i;}
G__14489 = new cljs.core.IndexedSeq(G__14490__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14489);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__5843__auto__ = x;
var y__5844__auto__ = y;
return ((x__5843__auto__ > y__5844__auto__) ? x__5843__auto__ : y__5844__auto__);
});
var max__3 = (function() { 
var G__14491__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__5843__auto__ = x;
var y__5844__auto__ = y;
return ((x__5843__auto__ > y__5844__auto__) ? x__5843__auto__ : y__5844__auto__);
})(),more);
};
var G__14491 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14492__i = 0, G__14492__a = new Array(arguments.length -  2);
while (G__14492__i < G__14492__a.length) {G__14492__a[G__14492__i] = arguments[G__14492__i + 2]; ++G__14492__i;}
  more = new cljs.core.IndexedSeq(G__14492__a,0);
} 
return G__14491__delegate.call(this,x,y,more);};
G__14491.cljs$lang$maxFixedArity = 2;
G__14491.cljs$lang$applyTo = (function (arglist__14493){
var x = cljs.core.first(arglist__14493);
arglist__14493 = cljs.core.next(arglist__14493);
var y = cljs.core.first(arglist__14493);
var more = cljs.core.rest(arglist__14493);
return G__14491__delegate(x,y,more);
});
G__14491.cljs$core$IFn$_invoke$arity$variadic = G__14491__delegate;
return G__14491;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__14494 = null;
if (arguments.length > 2) {
var G__14495__i = 0, G__14495__a = new Array(arguments.length -  2);
while (G__14495__i < G__14495__a.length) {G__14495__a[G__14495__i] = arguments[G__14495__i + 2]; ++G__14495__i;}
G__14494 = new cljs.core.IndexedSeq(G__14495__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14494);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__5850__auto__ = x;
var y__5851__auto__ = y;
return ((x__5850__auto__ < y__5851__auto__) ? x__5850__auto__ : y__5851__auto__);
});
var min__3 = (function() { 
var G__14496__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__5850__auto__ = x;
var y__5851__auto__ = y;
return ((x__5850__auto__ < y__5851__auto__) ? x__5850__auto__ : y__5851__auto__);
})(),more);
};
var G__14496 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14497__i = 0, G__14497__a = new Array(arguments.length -  2);
while (G__14497__i < G__14497__a.length) {G__14497__a[G__14497__i] = arguments[G__14497__i + 2]; ++G__14497__i;}
  more = new cljs.core.IndexedSeq(G__14497__a,0);
} 
return G__14496__delegate.call(this,x,y,more);};
G__14496.cljs$lang$maxFixedArity = 2;
G__14496.cljs$lang$applyTo = (function (arglist__14498){
var x = cljs.core.first(arglist__14498);
arglist__14498 = cljs.core.next(arglist__14498);
var y = cljs.core.first(arglist__14498);
var more = cljs.core.rest(arglist__14498);
return G__14496__delegate(x,y,more);
});
G__14496.cljs$core$IFn$_invoke$arity$variadic = G__14496__delegate;
return G__14496;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__14499 = null;
if (arguments.length > 2) {
var G__14500__i = 0, G__14500__a = new Array(arguments.length -  2);
while (G__14500__i < G__14500__a.length) {G__14500__a[G__14500__i] = arguments[G__14500__i + 2]; ++G__14500__i;}
G__14499 = new cljs.core.IndexedSeq(G__14500__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14499);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__14501__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__14501 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14502__i = 0, G__14502__a = new Array(arguments.length -  2);
while (G__14502__i < G__14502__a.length) {G__14502__a[G__14502__i] = arguments[G__14502__i + 2]; ++G__14502__i;}
  more = new cljs.core.IndexedSeq(G__14502__a,0);
} 
return G__14501__delegate.call(this,x,y,more);};
G__14501.cljs$lang$maxFixedArity = 2;
G__14501.cljs$lang$applyTo = (function (arglist__14503){
var x = cljs.core.first(arglist__14503);
arglist__14503 = cljs.core.next(arglist__14503);
var y = cljs.core.first(arglist__14503);
var more = cljs.core.rest(arglist__14503);
return G__14501__delegate(x,y,more);
});
G__14501.cljs$core$IFn$_invoke$arity$variadic = G__14501__delegate;
return G__14501;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__14504 = null;
if (arguments.length > 2) {
var G__14505__i = 0, G__14505__a = new Array(arguments.length -  2);
while (G__14505__i < G__14505__a.length) {G__14505__a[G__14505__i] = arguments[G__14505__i + 2]; ++G__14505__i;}
G__14504 = new cljs.core.IndexedSeq(G__14505__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14504);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__14506__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__14506 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14507__i = 0, G__14507__a = new Array(arguments.length -  2);
while (G__14507__i < G__14507__a.length) {G__14507__a[G__14507__i] = arguments[G__14507__i + 2]; ++G__14507__i;}
  more = new cljs.core.IndexedSeq(G__14507__a,0);
} 
return G__14506__delegate.call(this,x,y,more);};
G__14506.cljs$lang$maxFixedArity = 2;
G__14506.cljs$lang$applyTo = (function (arglist__14508){
var x = cljs.core.first(arglist__14508);
arglist__14508 = cljs.core.next(arglist__14508);
var y = cljs.core.first(arglist__14508);
var more = cljs.core.rest(arglist__14508);
return G__14506__delegate(x,y,more);
});
G__14506.cljs$core$IFn$_invoke$arity$variadic = G__14506__delegate;
return G__14506;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__14509 = null;
if (arguments.length > 2) {
var G__14510__i = 0, G__14510__a = new Array(arguments.length -  2);
while (G__14510__i < G__14510__a.length) {G__14510__a[G__14510__i] = arguments[G__14510__i + 2]; ++G__14510__i;}
G__14509 = new cljs.core.IndexedSeq(G__14510__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14509);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__14515__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__14515 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14516__i = 0, G__14516__a = new Array(arguments.length -  2);
while (G__14516__i < G__14516__a.length) {G__14516__a[G__14516__i] = arguments[G__14516__i + 2]; ++G__14516__i;}
  more = new cljs.core.IndexedSeq(G__14516__a,0);
} 
return G__14515__delegate.call(this,x,y,more);};
G__14515.cljs$lang$maxFixedArity = 2;
G__14515.cljs$lang$applyTo = (function (arglist__14517){
var x = cljs.core.first(arglist__14517);
arglist__14517 = cljs.core.next(arglist__14517);
var y = cljs.core.first(arglist__14517);
var more = cljs.core.rest(arglist__14517);
return G__14515__delegate(x,y,more);
});
G__14515.cljs$core$IFn$_invoke$arity$variadic = G__14515__delegate;
return G__14515;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__14518 = null;
if (arguments.length > 2) {
var G__14519__i = 0, G__14519__a = new Array(arguments.length -  2);
while (G__14519__i < G__14519__a.length) {G__14519__a[G__14519__i] = arguments[G__14519__i + 2]; ++G__14519__i;}
G__14518 = new cljs.core.IndexedSeq(G__14519__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14518);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__14520__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__14520 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14521__i = 0, G__14521__a = new Array(arguments.length -  2);
while (G__14521__i < G__14521__a.length) {G__14521__a[G__14521__i] = arguments[G__14521__i + 2]; ++G__14521__i;}
  more = new cljs.core.IndexedSeq(G__14521__a,0);
} 
return G__14520__delegate.call(this,x,y,more);};
G__14520.cljs$lang$maxFixedArity = 2;
G__14520.cljs$lang$applyTo = (function (arglist__14522){
var x = cljs.core.first(arglist__14522);
arglist__14522 = cljs.core.next(arglist__14522);
var y = cljs.core.first(arglist__14522);
var more = cljs.core.rest(arglist__14522);
return G__14520__delegate(x,y,more);
});
G__14520.cljs$core$IFn$_invoke$arity$variadic = G__14520__delegate;
return G__14520;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__14523 = null;
if (arguments.length > 2) {
var G__14524__i = 0, G__14524__a = new Array(arguments.length -  2);
while (G__14524__i < G__14524__a.length) {G__14524__a[G__14524__i] = arguments[G__14524__i + 2]; ++G__14524__i;}
G__14523 = new cljs.core.IndexedSeq(G__14524__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14523);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__14525__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__14525 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14526__i = 0, G__14526__a = new Array(arguments.length -  2);
while (G__14526__i < G__14526__a.length) {G__14526__a[G__14526__i] = arguments[G__14526__i + 2]; ++G__14526__i;}
  more = new cljs.core.IndexedSeq(G__14526__a,0);
} 
return G__14525__delegate.call(this,x,y,more);};
G__14525.cljs$lang$maxFixedArity = 2;
G__14525.cljs$lang$applyTo = (function (arglist__14527){
var x = cljs.core.first(arglist__14527);
arglist__14527 = cljs.core.next(arglist__14527);
var y = cljs.core.first(arglist__14527);
var more = cljs.core.rest(arglist__14527);
return G__14525__delegate(x,y,more);
});
G__14525.cljs$core$IFn$_invoke$arity$variadic = G__14525__delegate;
return G__14525;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__14528 = null;
if (arguments.length > 2) {
var G__14529__i = 0, G__14529__a = new Array(arguments.length -  2);
while (G__14529__i < G__14529__a.length) {G__14529__a[G__14529__i] = arguments[G__14529__i + 2]; ++G__14529__i;}
G__14528 = new cljs.core.IndexedSeq(G__14529__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14528);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__14532 = x;
var G__14533 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__14532,G__14533) : cljs.core.mod.call(null,G__14532,G__14533));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__14534__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__14534 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14535__i = 0, G__14535__a = new Array(arguments.length -  2);
while (G__14535__i < G__14535__a.length) {G__14535__a[G__14535__i] = arguments[G__14535__i + 2]; ++G__14535__i;}
  more = new cljs.core.IndexedSeq(G__14535__a,0);
} 
return G__14534__delegate.call(this,x,y,more);};
G__14534.cljs$lang$maxFixedArity = 2;
G__14534.cljs$lang$applyTo = (function (arglist__14536){
var x = cljs.core.first(arglist__14536);
arglist__14536 = cljs.core.next(arglist__14536);
var y = cljs.core.first(arglist__14536);
var more = cljs.core.rest(arglist__14536);
return G__14534__delegate(x,y,more);
});
G__14534.cljs$core$IFn$_invoke$arity$variadic = G__14534__delegate;
return G__14534;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__14537 = null;
if (arguments.length > 2) {
var G__14538__i = 0, G__14538__a = new Array(arguments.length -  2);
while (G__14538__i < G__14538__a.length) {G__14538__a[G__14538__i] = arguments[G__14538__i + 2]; ++G__14538__i;}
G__14537 = new cljs.core.IndexedSeq(G__14538__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14537);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__14539__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__14539 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14540__i = 0, G__14540__a = new Array(arguments.length -  2);
while (G__14540__i < G__14540__a.length) {G__14540__a[G__14540__i] = arguments[G__14540__i + 2]; ++G__14540__i;}
  more = new cljs.core.IndexedSeq(G__14540__a,0);
} 
return G__14539__delegate.call(this,x,y,more);};
G__14539.cljs$lang$maxFixedArity = 2;
G__14539.cljs$lang$applyTo = (function (arglist__14541){
var x = cljs.core.first(arglist__14541);
arglist__14541 = cljs.core.next(arglist__14541);
var y = cljs.core.first(arglist__14541);
var more = cljs.core.rest(arglist__14541);
return G__14539__delegate(x,y,more);
});
G__14539.cljs$core$IFn$_invoke$arity$variadic = G__14539__delegate;
return G__14539;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__14542 = null;
if (arguments.length > 2) {
var G__14543__i = 0, G__14543__a = new Array(arguments.length -  2);
while (G__14543__i < G__14543__a.length) {G__14543__a[G__14543__i] = arguments[G__14543__i + 2]; ++G__14543__i;}
G__14542 = new cljs.core.IndexedSeq(G__14543__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14542);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__14546 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__14546) : Math.floor.call(null,G__14546));
} else {
var G__14547 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__14547) : Math.ceil.call(null,G__14547));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__14548__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__14548 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14549__i = 0, G__14549__a = new Array(arguments.length -  2);
while (G__14549__i < G__14549__a.length) {G__14549__a[G__14549__i] = arguments[G__14549__i + 2]; ++G__14549__i;}
  more = new cljs.core.IndexedSeq(G__14549__a,0);
} 
return G__14548__delegate.call(this,x,y,more);};
G__14548.cljs$lang$maxFixedArity = 2;
G__14548.cljs$lang$applyTo = (function (arglist__14550){
var x = cljs.core.first(arglist__14550);
arglist__14550 = cljs.core.next(arglist__14550);
var y = cljs.core.first(arglist__14550);
var more = cljs.core.rest(arglist__14550);
return G__14548__delegate(x,y,more);
});
G__14548.cljs$core$IFn$_invoke$arity$variadic = G__14548__delegate;
return G__14548;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__14551 = null;
if (arguments.length > 2) {
var G__14552__i = 0, G__14552__a = new Array(arguments.length -  2);
while (G__14552__i < G__14552__a.length) {G__14552__a[G__14552__i] = arguments[G__14552__i + 2]; ++G__14552__i;}
G__14551 = new cljs.core.IndexedSeq(G__14552__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14551);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__14553__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__14553 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14554__i = 0, G__14554__a = new Array(arguments.length -  2);
while (G__14554__i < G__14554__a.length) {G__14554__a[G__14554__i] = arguments[G__14554__i + 2]; ++G__14554__i;}
  more = new cljs.core.IndexedSeq(G__14554__a,0);
} 
return G__14553__delegate.call(this,x,y,more);};
G__14553.cljs$lang$maxFixedArity = 2;
G__14553.cljs$lang$applyTo = (function (arglist__14555){
var x = cljs.core.first(arglist__14555);
arglist__14555 = cljs.core.next(arglist__14555);
var y = cljs.core.first(arglist__14555);
var more = cljs.core.rest(arglist__14555);
return G__14553__delegate(x,y,more);
});
G__14553.cljs$core$IFn$_invoke$arity$variadic = G__14553__delegate;
return G__14553;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__14556 = null;
if (arguments.length > 2) {
var G__14557__i = 0, G__14557__a = new Array(arguments.length -  2);
while (G__14557__i < G__14557__a.length) {G__14557__a[G__14557__i] = arguments[G__14557__i + 2]; ++G__14557__i;}
G__14556 = new cljs.core.IndexedSeq(G__14557__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14556);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__14558__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__14558 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14559__i = 0, G__14559__a = new Array(arguments.length -  2);
while (G__14559__i < G__14559__a.length) {G__14559__a[G__14559__i] = arguments[G__14559__i + 2]; ++G__14559__i;}
  more = new cljs.core.IndexedSeq(G__14559__a,0);
} 
return G__14558__delegate.call(this,x,y,more);};
G__14558.cljs$lang$maxFixedArity = 2;
G__14558.cljs$lang$applyTo = (function (arglist__14560){
var x = cljs.core.first(arglist__14560);
arglist__14560 = cljs.core.next(arglist__14560);
var y = cljs.core.first(arglist__14560);
var more = cljs.core.rest(arglist__14560);
return G__14558__delegate(x,y,more);
});
G__14558.cljs$core$IFn$_invoke$arity$variadic = G__14558__delegate;
return G__14558;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__14561 = null;
if (arguments.length > 2) {
var G__14562__i = 0, G__14562__a = new Array(arguments.length -  2);
while (G__14562__i < G__14562__a.length) {G__14562__a[G__14562__i] = arguments[G__14562__i + 2]; ++G__14562__i;}
G__14561 = new cljs.core.IndexedSeq(G__14562__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14561);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__14563__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__14563 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14564__i = 0, G__14564__a = new Array(arguments.length -  2);
while (G__14564__i < G__14564__a.length) {G__14564__a[G__14564__i] = arguments[G__14564__i + 2]; ++G__14564__i;}
  more = new cljs.core.IndexedSeq(G__14564__a,0);
} 
return G__14563__delegate.call(this,x,y,more);};
G__14563.cljs$lang$maxFixedArity = 2;
G__14563.cljs$lang$applyTo = (function (arglist__14565){
var x = cljs.core.first(arglist__14565);
arglist__14565 = cljs.core.next(arglist__14565);
var y = cljs.core.first(arglist__14565);
var more = cljs.core.rest(arglist__14565);
return G__14563__delegate(x,y,more);
});
G__14563.cljs$core$IFn$_invoke$arity$variadic = G__14563__delegate;
return G__14563;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__14566 = null;
if (arguments.length > 2) {
var G__14567__i = 0, G__14567__a = new Array(arguments.length -  2);
while (G__14567__i < G__14567__a.length) {G__14567__a[G__14567__i] = arguments[G__14567__i + 2]; ++G__14567__i;}
G__14566 = new cljs.core.IndexedSeq(G__14567__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14566);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__14572__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__14573 = y;
var G__14574 = cljs.core.first(more);
var G__14575 = cljs.core.next(more);
x = G__14573;
y = G__14574;
more = G__14575;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__14572 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14576__i = 0, G__14576__a = new Array(arguments.length -  2);
while (G__14576__i < G__14576__a.length) {G__14576__a[G__14576__i] = arguments[G__14576__i + 2]; ++G__14576__i;}
  more = new cljs.core.IndexedSeq(G__14576__a,0);
} 
return G__14572__delegate.call(this,x,y,more);};
G__14572.cljs$lang$maxFixedArity = 2;
G__14572.cljs$lang$applyTo = (function (arglist__14577){
var x = cljs.core.first(arglist__14577);
arglist__14577 = cljs.core.next(arglist__14577);
var y = cljs.core.first(arglist__14577);
var more = cljs.core.rest(arglist__14577);
return G__14572__delegate(x,y,more);
});
G__14572.cljs$core$IFn$_invoke$arity$variadic = G__14572__delegate;
return G__14572;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__14578 = null;
if (arguments.length > 2) {
var G__14579__i = 0, G__14579__a = new Array(arguments.length -  2);
while (G__14579__i < G__14579__a.length) {G__14579__a[G__14579__i] = arguments[G__14579__i + 2]; ++G__14579__i;}
G__14578 = new cljs.core.IndexedSeq(G__14579__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14578);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__14580 = (n__$1 - (1));
var G__14581 = cljs.core.next(xs);
n__$1 = G__14580;
xs = G__14581;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__14585 = x;
return goog.string.buildString(G__14585);
}
});
var str__2 = (function() { 
var G__14586__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__14587 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__14588 = cljs.core.next(more);
sb = G__14587;
more = G__14588;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__14586 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__14589__i = 0, G__14589__a = new Array(arguments.length -  1);
while (G__14589__i < G__14589__a.length) {G__14589__a[G__14589__i] = arguments[G__14589__i + 1]; ++G__14589__i;}
  ys = new cljs.core.IndexedSeq(G__14589__a,0);
} 
return G__14586__delegate.call(this,x,ys);};
G__14586.cljs$lang$maxFixedArity = 1;
G__14586.cljs$lang$applyTo = (function (arglist__14590){
var x = cljs.core.first(arglist__14590);
var ys = cljs.core.rest(arglist__14590);
return G__14586__delegate(x,ys);
});
G__14586.cljs$core$IFn$_invoke$arity$variadic = G__14586__delegate;
return G__14586;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__14591 = null;
if (arguments.length > 1) {
var G__14592__i = 0, G__14592__a = new Array(arguments.length -  1);
while (G__14592__i < G__14592__a.length) {G__14592__a[G__14592__i] = arguments[G__14592__i + 1]; ++G__14592__i;}
G__14591 = new cljs.core.IndexedSeq(G__14592__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__14591);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__14593 = cljs.core.next(xs);
var G__14594 = cljs.core.next(ys);
xs = G__14593;
ys = G__14594;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__14595 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__14596 = cljs.core.next(s);
res = G__14595;
s = G__14596;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__14601 = ((h + (cljs.core.hash((function (){var G__14599 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__14599) : cljs.core.key.call(null,G__14599));
})()) ^ cljs.core.hash((function (){var G__14600 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__14600) : cljs.core.val.call(null,G__14600));
})()))) % (4503599627370496));
var G__14602 = cljs.core.next(s);
h = G__14601;
s = G__14602;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__14603 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__14604 = cljs.core.next(s__$1);
h = G__14603;
s__$1 = G__14604;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__14615_14625 = cljs.core.seq(fn_map);
var chunk__14616_14626 = null;
var count__14617_14627 = (0);
var i__14618_14628 = (0);
while(true){
if((i__14618_14628 < count__14617_14627)){
var vec__14619_14629 = chunk__14616_14626.cljs$core$IIndexed$_nth$arity$2(null,i__14618_14628);
var key_name_14630 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14619_14629,(0),null);
var f_14631 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14619_14629,(1),null);
var str_name_14632 = (function (){var G__14620 = key_name_14630;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__14620) : cljs.core.name.call(null,G__14620));
})();
(obj[str_name_14632] = f_14631);

var G__14633 = seq__14615_14625;
var G__14634 = chunk__14616_14626;
var G__14635 = count__14617_14627;
var G__14636 = (i__14618_14628 + (1));
seq__14615_14625 = G__14633;
chunk__14616_14626 = G__14634;
count__14617_14627 = G__14635;
i__14618_14628 = G__14636;
continue;
} else {
var temp__4126__auto___14637 = cljs.core.seq(seq__14615_14625);
if(temp__4126__auto___14637){
var seq__14615_14638__$1 = temp__4126__auto___14637;
if(cljs.core.chunked_seq_QMARK_(seq__14615_14638__$1)){
var c__6313__auto___14639 = (function (){var G__14621 = seq__14615_14638__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__14621) : cljs.core.chunk_first.call(null,G__14621));
})();
var G__14640 = (function (){var G__14622 = seq__14615_14638__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__14622) : cljs.core.chunk_rest.call(null,G__14622));
})();
var G__14641 = c__6313__auto___14639;
var G__14642 = cljs.core.count(c__6313__auto___14639);
var G__14643 = (0);
seq__14615_14625 = G__14640;
chunk__14616_14626 = G__14641;
count__14617_14627 = G__14642;
i__14618_14628 = G__14643;
continue;
} else {
var vec__14623_14644 = cljs.core.first(seq__14615_14638__$1);
var key_name_14645 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14623_14644,(0),null);
var f_14646 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14623_14644,(1),null);
var str_name_14647 = (function (){var G__14624 = key_name_14645;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__14624) : cljs.core.name.call(null,G__14624));
})();
(obj[str_name_14647] = f_14646);

var G__14648 = cljs.core.next(seq__14615_14638__$1);
var G__14649 = null;
var G__14650 = (0);
var G__14651 = (0);
seq__14615_14625 = G__14648;
chunk__14616_14626 = G__14649;
count__14617_14627 = G__14650;
i__14618_14628 = G__14651;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5947__auto__ = self__.__hash;
if(!((h__5947__auto__ == null))){
return h__5947__auto__;
} else {
var h__5947__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5947__auto____$1;

return h__5947__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6504__auto__ = this;
return cljs.core.es6_iterator(this__6504__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6504__auto__ = this;
return cljs.core.es6_iterator(this__6504__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__14653 = coll;
if(G__14653){
var bit__6207__auto__ = (G__14653.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__6207__auto__) || (G__14653.cljs$core$IReversible$)){
return true;
} else {
if((!G__14653.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__14653);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__14653);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__14654 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__14654;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__14655 = (i - (1));
var G__14656 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__14655;
r = G__14656;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__14657__i = 0, G__14657__a = new Array(arguments.length -  0);
while (G__14657__i < G__14657__a.length) {G__14657__a[G__14657__i] = arguments[G__14657__i + 0]; ++G__14657__i;}
  xs = new cljs.core.IndexedSeq(G__14657__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__14658){
var xs = cljs.core.seq(arglist__14658);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5947__auto__ = self__.__hash;
if(!((h__5947__auto__ == null))){
return h__5947__auto__;
} else {
var h__5947__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5947__auto____$1;

return h__5947__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6504__auto__ = this;
return cljs.core.es6_iterator(this__6504__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__5526__auto__ = (coll == null);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var G__14662 = coll;
if(G__14662){
var bit__6200__auto__ = (G__14662.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__6200__auto__) || (G__14662.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__14664 = x;
if(G__14664){
var bit__6207__auto__ = (G__14664.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__6207__auto__) || (G__14664.cljs$core$IList$)){
return true;
} else {
if((!G__14664.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__14664);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__14664);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__5514__auto__ = cljs.core.not(a.ns);
if(and__5514__auto__){
return b.ns;
} else {
return and__5514__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__14671 = a.ns;
var G__14672 = b.ns;
return goog.array.defaultCompare(G__14671,G__14672);
})();
if(((0) === nsc)){
var G__14673 = a.name;
var G__14674 = b.name;
return goog.array.defaultCompare(G__14673,G__14674);
} else {
return nsc;
}
}
} else {
var G__14675 = a.name;
var G__14676 = b.name;
return goog.array.defaultCompare(G__14675,G__14676);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__5947__auto__ = self__._hash;
if(!((h__5947__auto__ == null))){
return h__5947__auto__;
} else {
var h__5947__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__5947__auto____$1;

return h__5947__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__14678 = null;
var G__14678__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__14678__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__14678 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__14678__2.call(this,self__,coll);
case 3:
return G__14678__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14678.cljs$core$IFn$_invoke$arity$2 = G__14678__2;
G__14678.cljs$core$IFn$_invoke$arity$3 = G__14678__3;
return G__14678;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args14677){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14677)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__14680 = x;
if(G__14680){
var bit__6200__auto__ = (G__14680.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__6200__auto__) || (G__14680.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__14682 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__14682) : cljs.core.name.call(null,G__14682));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5947__auto__ = self__.__hash;
if(!((h__5947__auto__ == null))){
return h__5947__auto__;
} else {
var h__5947__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5947__auto____$1;

return h__5947__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__14683 = ls.sval();
ls = G__14683;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6504__auto__ = this;
return cljs.core.es6_iterator(this__6504__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5947__auto__ = self__.__hash;
if(!((h__5947__auto__ == null))){
return h__5947__auto__;
} else {
var h__5947__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5947__auto____$1;

return h__5947__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6504__auto__ = this;
return cljs.core.es6_iterator(this__6504__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__14685 = s;
if(G__14685){
var bit__6200__auto__ = (G__14685.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__6200__auto__) || (G__14685.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__14686 = cljs.core.next(s__$1);
s__$1 = G__14686;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_14687 = (0);
var xs_14688 = cljs.core.seq(coll);
while(true){
if(xs_14688){
(ret[i_14687] = cljs.core.to_array(cljs.core.first(xs_14688)));

var G__14689 = (i_14687 + (1));
var G__14690 = cljs.core.next(xs_14688);
i_14687 = G__14689;
xs_14688 = G__14690;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__14693 = (i + (1));
var G__14694 = cljs.core.next(s__$1);
i = G__14693;
s__$1 = G__14694;
continue;
} else {
return a;
}
break;
}
} else {
var n__6413__auto___14695 = size;
var i_14696 = (0);
while(true){
if((i_14696 < n__6413__auto___14695)){
(a[i_14696] = init_val_or_seq);

var G__14697 = (i_14696 + (1));
i_14696 = G__14697;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__14700 = (i + (1));
var G__14701 = cljs.core.next(s__$1);
i = G__14700;
s__$1 = G__14701;
continue;
} else {
return a;
}
break;
}
} else {
var n__6413__auto___14702 = size;
var i_14703 = (0);
while(true){
if((i_14703 < n__6413__auto___14702)){
(a[i_14703] = init_val_or_seq);

var G__14704 = (i_14703 + (1));
i_14703 = G__14704;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__14707 = (i + (1));
var G__14708 = cljs.core.next(s__$1);
i = G__14707;
s__$1 = G__14708;
continue;
} else {
return a;
}
break;
}
} else {
var n__6413__auto___14709 = size;
var i_14710 = (0);
while(true){
if((i_14710 < n__6413__auto___14709)){
(a[i_14710] = init_val_or_seq);

var G__14711 = (i_14710 + (1));
i_14710 = G__14711;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__14714 = (i + (1));
var G__14715 = cljs.core.next(s__$1);
i = G__14714;
s__$1 = G__14715;
continue;
} else {
return a;
}
break;
}
} else {
var n__6413__auto___14716 = size;
var i_14717 = (0);
while(true){
if((i_14717 < n__6413__auto___14716)){
(a[i_14717] = init_val_or_seq);

var G__14718 = (i_14717 + (1));
i_14717 = G__14718;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__14719 = cljs.core.next(s__$1);
var G__14720 = (i - (1));
var G__14721 = (sum + (1));
s__$1 = G__14719;
i = G__14720;
sum = G__14721;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__14741__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__14741 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__14742__i = 0, G__14742__a = new Array(arguments.length -  2);
while (G__14742__i < G__14742__a.length) {G__14742__a[G__14742__i] = arguments[G__14742__i + 2]; ++G__14742__i;}
  zs = new cljs.core.IndexedSeq(G__14742__a,0);
} 
return G__14741__delegate.call(this,x,y,zs);};
G__14741.cljs$lang$maxFixedArity = 2;
G__14741.cljs$lang$applyTo = (function (arglist__14743){
var x = cljs.core.first(arglist__14743);
arglist__14743 = cljs.core.next(arglist__14743);
var y = cljs.core.first(arglist__14743);
var zs = cljs.core.rest(arglist__14743);
return G__14741__delegate(x,y,zs);
});
G__14741.cljs$core$IFn$_invoke$arity$variadic = G__14741__delegate;
return G__14741;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__14744 = null;
if (arguments.length > 2) {
var G__14745__i = 0, G__14745__a = new Array(arguments.length -  2);
while (G__14745__i < G__14745__a.length) {G__14745__a[G__14745__i] = arguments[G__14745__i + 2]; ++G__14745__i;}
G__14744 = new cljs.core.IndexedSeq(G__14745__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14744);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__14746__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__14746 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__14747__i = 0, G__14747__a = new Array(arguments.length -  4);
while (G__14747__i < G__14747__a.length) {G__14747__a[G__14747__i] = arguments[G__14747__i + 4]; ++G__14747__i;}
  more = new cljs.core.IndexedSeq(G__14747__a,0);
} 
return G__14746__delegate.call(this,a,b,c,d,more);};
G__14746.cljs$lang$maxFixedArity = 4;
G__14746.cljs$lang$applyTo = (function (arglist__14748){
var a = cljs.core.first(arglist__14748);
arglist__14748 = cljs.core.next(arglist__14748);
var b = cljs.core.first(arglist__14748);
arglist__14748 = cljs.core.next(arglist__14748);
var c = cljs.core.first(arglist__14748);
arglist__14748 = cljs.core.next(arglist__14748);
var d = cljs.core.first(arglist__14748);
var more = cljs.core.rest(arglist__14748);
return G__14746__delegate(a,b,c,d,more);
});
G__14746.cljs$core$IFn$_invoke$arity$variadic = G__14746__delegate;
return G__14746;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__14749 = null;
if (arguments.length > 4) {
var G__14750__i = 0, G__14750__a = new Array(arguments.length -  4);
while (G__14750__i < G__14750__a.length) {G__14750__a[G__14750__i] = arguments[G__14750__i + 4]; ++G__14750__i;}
G__14749 = new cljs.core.IndexedSeq(G__14750__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__14749);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__14751__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__14752 = ntcoll;
var G__14753 = cljs.core.first(vals);
var G__14754 = cljs.core.next(vals);
tcoll = G__14752;
val = G__14753;
vals = G__14754;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__14751 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__14755__i = 0, G__14755__a = new Array(arguments.length -  2);
while (G__14755__i < G__14755__a.length) {G__14755__a[G__14755__i] = arguments[G__14755__i + 2]; ++G__14755__i;}
  vals = new cljs.core.IndexedSeq(G__14755__a,0);
} 
return G__14751__delegate.call(this,tcoll,val,vals);};
G__14751.cljs$lang$maxFixedArity = 2;
G__14751.cljs$lang$applyTo = (function (arglist__14756){
var tcoll = cljs.core.first(arglist__14756);
arglist__14756 = cljs.core.next(arglist__14756);
var val = cljs.core.first(arglist__14756);
var vals = cljs.core.rest(arglist__14756);
return G__14751__delegate(tcoll,val,vals);
});
G__14751.cljs$core$IFn$_invoke$arity$variadic = G__14751__delegate;
return G__14751;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__14757 = null;
if (arguments.length > 2) {
var G__14758__i = 0, G__14758__a = new Array(arguments.length -  2);
while (G__14758__i < G__14758__a.length) {G__14758__a[G__14758__i] = arguments[G__14758__i + 2]; ++G__14758__i;}
G__14757 = new cljs.core.IndexedSeq(G__14758__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__14757);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__14759__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__14760 = ntcoll;
var G__14761 = cljs.core.first(kvs);
var G__14762 = cljs.core.second(kvs);
var G__14763 = cljs.core.nnext(kvs);
tcoll = G__14760;
key = G__14761;
val = G__14762;
kvs = G__14763;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__14759 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__14764__i = 0, G__14764__a = new Array(arguments.length -  3);
while (G__14764__i < G__14764__a.length) {G__14764__a[G__14764__i] = arguments[G__14764__i + 3]; ++G__14764__i;}
  kvs = new cljs.core.IndexedSeq(G__14764__a,0);
} 
return G__14759__delegate.call(this,tcoll,key,val,kvs);};
G__14759.cljs$lang$maxFixedArity = 3;
G__14759.cljs$lang$applyTo = (function (arglist__14765){
var tcoll = cljs.core.first(arglist__14765);
arglist__14765 = cljs.core.next(arglist__14765);
var key = cljs.core.first(arglist__14765);
arglist__14765 = cljs.core.next(arglist__14765);
var val = cljs.core.first(arglist__14765);
var kvs = cljs.core.rest(arglist__14765);
return G__14759__delegate(tcoll,key,val,kvs);
});
G__14759.cljs$core$IFn$_invoke$arity$variadic = G__14759__delegate;
return G__14759;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__14766 = null;
if (arguments.length > 3) {
var G__14767__i = 0, G__14767__a = new Array(arguments.length -  3);
while (G__14767__i < G__14767__a.length) {G__14767__a[G__14767__i] = arguments[G__14767__i + 3]; ++G__14767__i;}
G__14766 = new cljs.core.IndexedSeq(G__14767__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__14766);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__14768__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__14769 = ntcoll;
var G__14770 = cljs.core.first(ks);
var G__14771 = cljs.core.next(ks);
tcoll = G__14769;
key = G__14770;
ks = G__14771;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__14768 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__14772__i = 0, G__14772__a = new Array(arguments.length -  2);
while (G__14772__i < G__14772__a.length) {G__14772__a[G__14772__i] = arguments[G__14772__i + 2]; ++G__14772__i;}
  ks = new cljs.core.IndexedSeq(G__14772__a,0);
} 
return G__14768__delegate.call(this,tcoll,key,ks);};
G__14768.cljs$lang$maxFixedArity = 2;
G__14768.cljs$lang$applyTo = (function (arglist__14773){
var tcoll = cljs.core.first(arglist__14773);
arglist__14773 = cljs.core.next(arglist__14773);
var key = cljs.core.first(arglist__14773);
var ks = cljs.core.rest(arglist__14773);
return G__14768__delegate(tcoll,key,ks);
});
G__14768.cljs$core$IFn$_invoke$arity$variadic = G__14768__delegate;
return G__14768;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__14774 = null;
if (arguments.length > 2) {
var G__14775__i = 0, G__14775__a = new Array(arguments.length -  2);
while (G__14775__i < G__14775__a.length) {G__14775__a[G__14775__i] = arguments[G__14775__i + 2]; ++G__14775__i;}
G__14774 = new cljs.core.IndexedSeq(G__14775__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__14774);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__14776__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__14777 = ntcoll;
var G__14778 = cljs.core.first(vals);
var G__14779 = cljs.core.next(vals);
tcoll = G__14777;
val = G__14778;
vals = G__14779;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__14776 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__14780__i = 0, G__14780__a = new Array(arguments.length -  2);
while (G__14780__i < G__14780__a.length) {G__14780__a[G__14780__i] = arguments[G__14780__i + 2]; ++G__14780__i;}
  vals = new cljs.core.IndexedSeq(G__14780__a,0);
} 
return G__14776__delegate.call(this,tcoll,val,vals);};
G__14776.cljs$lang$maxFixedArity = 2;
G__14776.cljs$lang$applyTo = (function (arglist__14781){
var tcoll = cljs.core.first(arglist__14781);
arglist__14781 = cljs.core.next(arglist__14781);
var val = cljs.core.first(arglist__14781);
var vals = cljs.core.rest(arglist__14781);
return G__14776__delegate(tcoll,val,vals);
});
G__14776.cljs$core$IFn$_invoke$arity$variadic = G__14776__delegate;
return G__14776;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__14782 = null;
if (arguments.length > 2) {
var G__14783__i = 0, G__14783__a = new Array(arguments.length -  2);
while (G__14783__i < G__14783__a.length) {G__14783__a[G__14783__i] = arguments[G__14783__i + 2]; ++G__14783__i;}
G__14782 = new cljs.core.IndexedSeq(G__14783__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__14782);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a6457 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a6457);
} else {
var G__14994 = a6457;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14994) : f.call(null,G__14994));
}
} else {
var b6458 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a6457,b6458);
} else {
var G__14995 = a6457;
var G__14996 = b6458;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14995,G__14996) : f.call(null,G__14995,G__14996));
}
} else {
var c6459 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a6457,b6458,c6459);
} else {
var G__14997 = a6457;
var G__14998 = b6458;
var G__14999 = c6459;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14997,G__14998,G__14999) : f.call(null,G__14997,G__14998,G__14999));
}
} else {
var d6460 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a6457,b6458,c6459,d6460);
} else {
var G__15000 = a6457;
var G__15001 = b6458;
var G__15002 = c6459;
var G__15003 = d6460;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15000,G__15001,G__15002,G__15003) : f.call(null,G__15000,G__15001,G__15002,G__15003));
}
} else {
var e6461 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a6457,b6458,c6459,d6460,e6461);
} else {
var G__15004 = a6457;
var G__15005 = b6458;
var G__15006 = c6459;
var G__15007 = d6460;
var G__15008 = e6461;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__15004,G__15005,G__15006,G__15007,G__15008) : f.call(null,G__15004,G__15005,G__15006,G__15007,G__15008));
}
} else {
var f6462 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a6457,b6458,c6459,d6460,e6461,f6462);
} else {
var G__15009 = a6457;
var G__15010 = b6458;
var G__15011 = c6459;
var G__15012 = d6460;
var G__15013 = e6461;
var G__15014 = f6462;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__15009,G__15010,G__15011,G__15012,G__15013,G__15014) : f.call(null,G__15009,G__15010,G__15011,G__15012,G__15013,G__15014));
}
} else {
var g6463 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a6457,b6458,c6459,d6460,e6461,f6462,g6463);
} else {
var G__15015 = a6457;
var G__15016 = b6458;
var G__15017 = c6459;
var G__15018 = d6460;
var G__15019 = e6461;
var G__15020 = f6462;
var G__15021 = g6463;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__15015,G__15016,G__15017,G__15018,G__15019,G__15020,G__15021) : f.call(null,G__15015,G__15016,G__15017,G__15018,G__15019,G__15020,G__15021));
}
} else {
var h6464 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a6457,b6458,c6459,d6460,e6461,f6462,g6463,h6464);
} else {
var G__15022 = a6457;
var G__15023 = b6458;
var G__15024 = c6459;
var G__15025 = d6460;
var G__15026 = e6461;
var G__15027 = f6462;
var G__15028 = g6463;
var G__15029 = h6464;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__15022,G__15023,G__15024,G__15025,G__15026,G__15027,G__15028,G__15029) : f.call(null,G__15022,G__15023,G__15024,G__15025,G__15026,G__15027,G__15028,G__15029));
}
} else {
var i6465 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a6457,b6458,c6459,d6460,e6461,f6462,g6463,h6464,i6465);
} else {
var G__15030 = a6457;
var G__15031 = b6458;
var G__15032 = c6459;
var G__15033 = d6460;
var G__15034 = e6461;
var G__15035 = f6462;
var G__15036 = g6463;
var G__15037 = h6464;
var G__15038 = i6465;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__15030,G__15031,G__15032,G__15033,G__15034,G__15035,G__15036,G__15037,G__15038) : f.call(null,G__15030,G__15031,G__15032,G__15033,G__15034,G__15035,G__15036,G__15037,G__15038));
}
} else {
var j6466 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a6457,b6458,c6459,d6460,e6461,f6462,g6463,h6464,i6465,j6466);
} else {
var G__15039 = a6457;
var G__15040 = b6458;
var G__15041 = c6459;
var G__15042 = d6460;
var G__15043 = e6461;
var G__15044 = f6462;
var G__15045 = g6463;
var G__15046 = h6464;
var G__15047 = i6465;
var G__15048 = j6466;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__15039,G__15040,G__15041,G__15042,G__15043,G__15044,G__15045,G__15046,G__15047,G__15048) : f.call(null,G__15039,G__15040,G__15041,G__15042,G__15043,G__15044,G__15045,G__15046,G__15047,G__15048));
}
} else {
var k6467 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a6457,b6458,c6459,d6460,e6461,f6462,g6463,h6464,i6465,j6466,k6467);
} else {
var G__15049 = a6457;
var G__15050 = b6458;
var G__15051 = c6459;
var G__15052 = d6460;
var G__15053 = e6461;
var G__15054 = f6462;
var G__15055 = g6463;
var G__15056 = h6464;
var G__15057 = i6465;
var G__15058 = j6466;
var G__15059 = k6467;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__15049,G__15050,G__15051,G__15052,G__15053,G__15054,G__15055,G__15056,G__15057,G__15058,G__15059) : f.call(null,G__15049,G__15050,G__15051,G__15052,G__15053,G__15054,G__15055,G__15056,G__15057,G__15058,G__15059));
}
} else {
var l6468 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a6457,b6458,c6459,d6460,e6461,f6462,g6463,h6464,i6465,j6466,k6467,l6468);
} else {
var G__15060 = a6457;
var G__15061 = b6458;
var G__15062 = c6459;
var G__15063 = d6460;
var G__15064 = e6461;
var G__15065 = f6462;
var G__15066 = g6463;
var G__15067 = h6464;
var G__15068 = i6465;
var G__15069 = j6466;
var G__15070 = k6467;
var G__15071 = l6468;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__15060,G__15061,G__15062,G__15063,G__15064,G__15065,G__15066,G__15067,G__15068,G__15069,G__15070,G__15071) : f.call(null,G__15060,G__15061,G__15062,G__15063,G__15064,G__15065,G__15066,G__15067,G__15068,G__15069,G__15070,G__15071));
}
} else {
var m6469 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a6457,b6458,c6459,d6460,e6461,f6462,g6463,h6464,i6465,j6466,k6467,l6468,m6469);
} else {
var G__15072 = a6457;
var G__15073 = b6458;
var G__15074 = c6459;
var G__15075 = d6460;
var G__15076 = e6461;
var G__15077 = f6462;
var G__15078 = g6463;
var G__15079 = h6464;
var G__15080 = i6465;
var G__15081 = j6466;
var G__15082 = k6467;
var G__15083 = l6468;
var G__15084 = m6469;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__15072,G__15073,G__15074,G__15075,G__15076,G__15077,G__15078,G__15079,G__15080,G__15081,G__15082,G__15083,G__15084) : f.call(null,G__15072,G__15073,G__15074,G__15075,G__15076,G__15077,G__15078,G__15079,G__15080,G__15081,G__15082,G__15083,G__15084));
}
} else {
var n6470 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a6457,b6458,c6459,d6460,e6461,f6462,g6463,h6464,i6465,j6466,k6467,l6468,m6469,n6470);
} else {
var G__15085 = a6457;
var G__15086 = b6458;
var G__15087 = c6459;
var G__15088 = d6460;
var G__15089 = e6461;
var G__15090 = f6462;
var G__15091 = g6463;
var G__15092 = h6464;
var G__15093 = i6465;
var G__15094 = j6466;
var G__15095 = k6467;
var G__15096 = l6468;
var G__15097 = m6469;
var G__15098 = n6470;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__15085,G__15086,G__15087,G__15088,G__15089,G__15090,G__15091,G__15092,G__15093,G__15094,G__15095,G__15096,G__15097,G__15098) : f.call(null,G__15085,G__15086,G__15087,G__15088,G__15089,G__15090,G__15091,G__15092,G__15093,G__15094,G__15095,G__15096,G__15097,G__15098));
}
} else {
var o6471 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a6457,b6458,c6459,d6460,e6461,f6462,g6463,h6464,i6465,j6466,k6467,l6468,m6469,n6470,o6471);
} else {
var G__15099 = a6457;
var G__15100 = b6458;
var G__15101 = c6459;
var G__15102 = d6460;
var G__15103 = e6461;
var G__15104 = f6462;
var G__15105 = g6463;
var G__15106 = h6464;
var G__15107 = i6465;
var G__15108 = j6466;
var G__15109 = k6467;
var G__15110 = l6468;
var G__15111 = m6469;
var G__15112 = n6470;
var G__15113 = o6471;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__15099,G__15100,G__15101,G__15102,G__15103,G__15104,G__15105,G__15106,G__15107,G__15108,G__15109,G__15110,G__15111,G__15112,G__15113) : f.call(null,G__15099,G__15100,G__15101,G__15102,G__15103,G__15104,G__15105,G__15106,G__15107,G__15108,G__15109,G__15110,G__15111,G__15112,G__15113));
}
} else {
var p6472 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a6457,b6458,c6459,d6460,e6461,f6462,g6463,h6464,i6465,j6466,k6467,l6468,m6469,n6470,o6471,p6472);
} else {
var G__15114 = a6457;
var G__15115 = b6458;
var G__15116 = c6459;
var G__15117 = d6460;
var G__15118 = e6461;
var G__15119 = f6462;
var G__15120 = g6463;
var G__15121 = h6464;
var G__15122 = i6465;
var G__15123 = j6466;
var G__15124 = k6467;
var G__15125 = l6468;
var G__15126 = m6469;
var G__15127 = n6470;
var G__15128 = o6471;
var G__15129 = p6472;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__15114,G__15115,G__15116,G__15117,G__15118,G__15119,G__15120,G__15121,G__15122,G__15123,G__15124,G__15125,G__15126,G__15127,G__15128,G__15129) : f.call(null,G__15114,G__15115,G__15116,G__15117,G__15118,G__15119,G__15120,G__15121,G__15122,G__15123,G__15124,G__15125,G__15126,G__15127,G__15128,G__15129));
}
} else {
var q6473 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a6457,b6458,c6459,d6460,e6461,f6462,g6463,h6464,i6465,j6466,k6467,l6468,m6469,n6470,o6471,p6472,q6473);
} else {
var G__15130 = a6457;
var G__15131 = b6458;
var G__15132 = c6459;
var G__15133 = d6460;
var G__15134 = e6461;
var G__15135 = f6462;
var G__15136 = g6463;
var G__15137 = h6464;
var G__15138 = i6465;
var G__15139 = j6466;
var G__15140 = k6467;
var G__15141 = l6468;
var G__15142 = m6469;
var G__15143 = n6470;
var G__15144 = o6471;
var G__15145 = p6472;
var G__15146 = q6473;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__15130,G__15131,G__15132,G__15133,G__15134,G__15135,G__15136,G__15137,G__15138,G__15139,G__15140,G__15141,G__15142,G__15143,G__15144,G__15145,G__15146) : f.call(null,G__15130,G__15131,G__15132,G__15133,G__15134,G__15135,G__15136,G__15137,G__15138,G__15139,G__15140,G__15141,G__15142,G__15143,G__15144,G__15145,G__15146));
}
} else {
var r6474 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a6457,b6458,c6459,d6460,e6461,f6462,g6463,h6464,i6465,j6466,k6467,l6468,m6469,n6470,o6471,p6472,q6473,r6474);
} else {
var G__15147 = a6457;
var G__15148 = b6458;
var G__15149 = c6459;
var G__15150 = d6460;
var G__15151 = e6461;
var G__15152 = f6462;
var G__15153 = g6463;
var G__15154 = h6464;
var G__15155 = i6465;
var G__15156 = j6466;
var G__15157 = k6467;
var G__15158 = l6468;
var G__15159 = m6469;
var G__15160 = n6470;
var G__15161 = o6471;
var G__15162 = p6472;
var G__15163 = q6473;
var G__15164 = r6474;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__15147,G__15148,G__15149,G__15150,G__15151,G__15152,G__15153,G__15154,G__15155,G__15156,G__15157,G__15158,G__15159,G__15160,G__15161,G__15162,G__15163,G__15164) : f.call(null,G__15147,G__15148,G__15149,G__15150,G__15151,G__15152,G__15153,G__15154,G__15155,G__15156,G__15157,G__15158,G__15159,G__15160,G__15161,G__15162,G__15163,G__15164));
}
} else {
var s6475 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a6457,b6458,c6459,d6460,e6461,f6462,g6463,h6464,i6465,j6466,k6467,l6468,m6469,n6470,o6471,p6472,q6473,r6474,s6475);
} else {
var G__15165 = a6457;
var G__15166 = b6458;
var G__15167 = c6459;
var G__15168 = d6460;
var G__15169 = e6461;
var G__15170 = f6462;
var G__15171 = g6463;
var G__15172 = h6464;
var G__15173 = i6465;
var G__15174 = j6466;
var G__15175 = k6467;
var G__15176 = l6468;
var G__15177 = m6469;
var G__15178 = n6470;
var G__15179 = o6471;
var G__15180 = p6472;
var G__15181 = q6473;
var G__15182 = r6474;
var G__15183 = s6475;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__15165,G__15166,G__15167,G__15168,G__15169,G__15170,G__15171,G__15172,G__15173,G__15174,G__15175,G__15176,G__15177,G__15178,G__15179,G__15180,G__15181,G__15182,G__15183) : f.call(null,G__15165,G__15166,G__15167,G__15168,G__15169,G__15170,G__15171,G__15172,G__15173,G__15174,G__15175,G__15176,G__15177,G__15178,G__15179,G__15180,G__15181,G__15182,G__15183));
}
} else {
var t6476 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a6457,b6458,c6459,d6460,e6461,f6462,g6463,h6464,i6465,j6466,k6467,l6468,m6469,n6470,o6471,p6472,q6473,r6474,s6475,t6476);
} else {
var G__15184 = a6457;
var G__15185 = b6458;
var G__15186 = c6459;
var G__15187 = d6460;
var G__15188 = e6461;
var G__15189 = f6462;
var G__15190 = g6463;
var G__15191 = h6464;
var G__15192 = i6465;
var G__15193 = j6466;
var G__15194 = k6467;
var G__15195 = l6468;
var G__15196 = m6469;
var G__15197 = n6470;
var G__15198 = o6471;
var G__15199 = p6472;
var G__15200 = q6473;
var G__15201 = r6474;
var G__15202 = s6475;
var G__15203 = t6476;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__15184,G__15185,G__15186,G__15187,G__15188,G__15189,G__15190,G__15191,G__15192,G__15193,G__15194,G__15195,G__15196,G__15197,G__15198,G__15199,G__15200,G__15201,G__15202,G__15203) : f.call(null,G__15184,G__15185,G__15186,G__15187,G__15188,G__15189,G__15190,G__15191,G__15192,G__15193,G__15194,G__15195,G__15196,G__15197,G__15198,G__15199,G__15200,G__15201,G__15202,G__15203));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__15204__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__15204 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__15205__i = 0, G__15205__a = new Array(arguments.length -  5);
while (G__15205__i < G__15205__a.length) {G__15205__a[G__15205__i] = arguments[G__15205__i + 5]; ++G__15205__i;}
  args = new cljs.core.IndexedSeq(G__15205__a,0);
} 
return G__15204__delegate.call(this,f,a,b,c,d,args);};
G__15204.cljs$lang$maxFixedArity = 5;
G__15204.cljs$lang$applyTo = (function (arglist__15206){
var f = cljs.core.first(arglist__15206);
arglist__15206 = cljs.core.next(arglist__15206);
var a = cljs.core.first(arglist__15206);
arglist__15206 = cljs.core.next(arglist__15206);
var b = cljs.core.first(arglist__15206);
arglist__15206 = cljs.core.next(arglist__15206);
var c = cljs.core.first(arglist__15206);
arglist__15206 = cljs.core.next(arglist__15206);
var d = cljs.core.first(arglist__15206);
var args = cljs.core.rest(arglist__15206);
return G__15204__delegate(f,a,b,c,d,args);
});
G__15204.cljs$core$IFn$_invoke$arity$variadic = G__15204__delegate;
return G__15204;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__15207 = null;
if (arguments.length > 5) {
var G__15208__i = 0, G__15208__a = new Array(arguments.length -  5);
while (G__15208__i < G__15208__a.length) {G__15208__a[G__15208__i] = arguments[G__15208__i + 5]; ++G__15208__i;}
G__15207 = new cljs.core.IndexedSeq(G__15208__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__15207);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__15224 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15224) : f.call(null,G__15224));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__15225 = cljs.core.meta(obj);
var G__15226 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15225,G__15226) : f.call(null,G__15225,G__15226));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__15227 = cljs.core.meta(obj);
var G__15228 = a;
var G__15229 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15227,G__15228,G__15229) : f.call(null,G__15227,G__15228,G__15229));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__15230 = cljs.core.meta(obj);
var G__15231 = a;
var G__15232 = b;
var G__15233 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15230,G__15231,G__15232,G__15233) : f.call(null,G__15230,G__15231,G__15232,G__15233));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__15234 = cljs.core.meta(obj);
var G__15235 = a;
var G__15236 = b;
var G__15237 = c;
var G__15238 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__15234,G__15235,G__15236,G__15237,G__15238) : f.call(null,G__15234,G__15235,G__15236,G__15237,G__15238));
})());
});
var vary_meta__7 = (function() { 
var G__15239__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__15239 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__15240__i = 0, G__15240__a = new Array(arguments.length -  6);
while (G__15240__i < G__15240__a.length) {G__15240__a[G__15240__i] = arguments[G__15240__i + 6]; ++G__15240__i;}
  args = new cljs.core.IndexedSeq(G__15240__a,0);
} 
return G__15239__delegate.call(this,obj,f,a,b,c,d,args);};
G__15239.cljs$lang$maxFixedArity = 6;
G__15239.cljs$lang$applyTo = (function (arglist__15241){
var obj = cljs.core.first(arglist__15241);
arglist__15241 = cljs.core.next(arglist__15241);
var f = cljs.core.first(arglist__15241);
arglist__15241 = cljs.core.next(arglist__15241);
var a = cljs.core.first(arglist__15241);
arglist__15241 = cljs.core.next(arglist__15241);
var b = cljs.core.first(arglist__15241);
arglist__15241 = cljs.core.next(arglist__15241);
var c = cljs.core.first(arglist__15241);
arglist__15241 = cljs.core.next(arglist__15241);
var d = cljs.core.first(arglist__15241);
var args = cljs.core.rest(arglist__15241);
return G__15239__delegate(obj,f,a,b,c,d,args);
});
G__15239.cljs$core$IFn$_invoke$arity$variadic = G__15239__delegate;
return G__15239;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__15242 = null;
if (arguments.length > 6) {
var G__15243__i = 0, G__15243__a = new Array(arguments.length -  6);
while (G__15243__i < G__15243__a.length) {G__15243__a[G__15243__i] = arguments[G__15243__i + 6]; ++G__15243__i;}
G__15242 = new cljs.core.IndexedSeq(G__15243__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__15242);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__15244__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__15244 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__15245__i = 0, G__15245__a = new Array(arguments.length -  2);
while (G__15245__i < G__15245__a.length) {G__15245__a[G__15245__i] = arguments[G__15245__i + 2]; ++G__15245__i;}
  more = new cljs.core.IndexedSeq(G__15245__a,0);
} 
return G__15244__delegate.call(this,x,y,more);};
G__15244.cljs$lang$maxFixedArity = 2;
G__15244.cljs$lang$applyTo = (function (arglist__15246){
var x = cljs.core.first(arglist__15246);
arglist__15246 = cljs.core.next(arglist__15246);
var y = cljs.core.first(arglist__15246);
var more = cljs.core.rest(arglist__15246);
return G__15244__delegate(x,y,more);
});
G__15244.cljs$core$IFn$_invoke$arity$variadic = G__15244__delegate;
return G__15244;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__15247 = null;
if (arguments.length > 2) {
var G__15248__i = 0, G__15248__a = new Array(arguments.length -  2);
while (G__15248__i < G__15248__a.length) {G__15248__a[G__15248__i] = arguments[G__15248__i + 2]; ++G__15248__i;}
G__15247 = new cljs.core.IndexedSeq(G__15248__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__15247);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t15252 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t15252 = (function (nil_iter,meta15253){
this.nil_iter = nil_iter;
this.meta15253 = meta15253;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t15252.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t15252.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t15252.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t15252.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_15254){
var self__ = this;
var _15254__$1 = this;
return self__.meta15253;
});

cljs.core.t15252.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_15254,meta15253__$1){
var self__ = this;
var _15254__$1 = this;
return (new cljs.core.t15252(self__.nil_iter,meta15253__$1));
});

cljs.core.t15252.cljs$lang$type = true;

cljs.core.t15252.cljs$lang$ctorStr = "cljs.core/t15252";

cljs.core.t15252.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/t15252");
});

cljs.core.__GT_t15252 = (function __GT_t15252(nil_iter__$1,meta15253){
return (new cljs.core.t15252(nil_iter__$1,meta15253));
});

}

return (new cljs.core.t15252(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),3067,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),3063,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/boethius/orgpad/.repl/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__5514__auto__ = !((lt.stepper == null));
if(and__5514__auto__){
return self__.iter.hasNext();
} else {
return and__5514__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__15255 = lt;
var G__15256 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__15255,G__15256) : self__.xform.call(null,G__15255,G__15256));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__15257 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__15257) : self__.xform.call(null,G__15257));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__15259 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__15259) : xform.call(null,G__15259));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__15261 = cljs.core.next(iters__$1);
iters__$1 = G__15261;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__6413__auto___15262 = self__.iters.length;
var i_15263 = (0);
while(true){
if((i_15263 < n__6413__auto___15262)){
(self__.nexts[i_15263] = (self__.iters[i_15263]).next());

var G__15264 = (i_15263 + (1));
i_15263 = G__15264;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__5514__auto__ = !((lt.stepper == null));
if(and__5514__auto__){
return this$.hasNext();
} else {
return and__5514__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__15260 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__15260) : self__.xform.call(null,G__15260));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__15269 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__15269) : xform.call(null,G__15269));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6504__auto__ = this;
return cljs.core.es6_iterator(this__6504__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__15270_15274 = cljs.core.seq(colls);
var chunk__15271_15275 = null;
var count__15272_15276 = (0);
var i__15273_15277 = (0);
while(true){
if((i__15273_15277 < count__15272_15276)){
var coll_15278 = chunk__15271_15275.cljs$core$IIndexed$_nth$arity$2(null,i__15273_15277);
iters.push(cljs.core.iter(coll_15278));

var G__15279 = seq__15270_15274;
var G__15280 = chunk__15271_15275;
var G__15281 = count__15272_15276;
var G__15282 = (i__15273_15277 + (1));
seq__15270_15274 = G__15279;
chunk__15271_15275 = G__15280;
count__15272_15276 = G__15281;
i__15273_15277 = G__15282;
continue;
} else {
var temp__4126__auto___15283 = cljs.core.seq(seq__15270_15274);
if(temp__4126__auto___15283){
var seq__15270_15284__$1 = temp__4126__auto___15283;
if(cljs.core.chunked_seq_QMARK_(seq__15270_15284__$1)){
var c__6313__auto___15285 = cljs.core.chunk_first(seq__15270_15284__$1);
var G__15286 = cljs.core.chunk_rest(seq__15270_15284__$1);
var G__15287 = c__6313__auto___15285;
var G__15288 = cljs.core.count(c__6313__auto___15285);
var G__15289 = (0);
seq__15270_15274 = G__15286;
chunk__15271_15275 = G__15287;
count__15272_15276 = G__15288;
i__15273_15277 = G__15289;
continue;
} else {
var coll_15290 = cljs.core.first(seq__15270_15284__$1);
iters.push(cljs.core.iter(coll_15290));

var G__15291 = cljs.core.next(seq__15270_15284__$1);
var G__15292 = null;
var G__15293 = (0);
var G__15294 = (0);
seq__15270_15274 = G__15291;
chunk__15271_15275 = G__15292;
count__15272_15276 = G__15293;
i__15273_15277 = G__15294;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__5526__auto__ = cljs.core.seq(coll);
if(or__5526__auto__){
return or__5526__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__15295__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__15295 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__15296__i = 0, G__15296__a = new Array(arguments.length -  2);
while (G__15296__i < G__15296__a.length) {G__15296__a[G__15296__i] = arguments[G__15296__i + 2]; ++G__15296__i;}
  colls = new cljs.core.IndexedSeq(G__15296__a,0);
} 
return G__15295__delegate.call(this,xform,coll,colls);};
G__15295.cljs$lang$maxFixedArity = 2;
G__15295.cljs$lang$applyTo = (function (arglist__15297){
var xform = cljs.core.first(arglist__15297);
arglist__15297 = cljs.core.next(arglist__15297);
var coll = cljs.core.first(arglist__15297);
var colls = cljs.core.rest(arglist__15297);
return G__15295__delegate(xform,coll,colls);
});
G__15295.cljs$core$IFn$_invoke$arity$variadic = G__15295__delegate;
return G__15295;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__15298 = null;
if (arguments.length > 2) {
var G__15299__i = 0, G__15299__a = new Array(arguments.length -  2);
while (G__15299__i < G__15299__a.length) {G__15299__a[G__15299__i] = arguments[G__15299__i + 2]; ++G__15299__i;}
G__15298 = new cljs.core.IndexedSeq(G__15299__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__15298);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__15301 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15301) : pred.call(null,G__15301));
})())){
var G__15302 = pred;
var G__15303 = cljs.core.next(coll);
pred = G__15302;
coll = G__15303;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__5526__auto__ = (function (){var G__15307 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15307) : pred.call(null,G__15307));
})();
if(cljs.core.truth_(or__5526__auto__)){
return or__5526__auto__;
} else {
var G__15308 = pred;
var G__15309 = cljs.core.next(coll);
pred = G__15308;
coll = G__15309;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__15316 = null;
var G__15316__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__15316__1 = (function (x){
return cljs.core.not((function (){var G__15313 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15313) : f.call(null,G__15313));
})());
});
var G__15316__2 = (function (x,y){
return cljs.core.not((function (){var G__15314 = x;
var G__15315 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15314,G__15315) : f.call(null,G__15314,G__15315));
})());
});
var G__15316__3 = (function() { 
var G__15317__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__15317 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__15318__i = 0, G__15318__a = new Array(arguments.length -  2);
while (G__15318__i < G__15318__a.length) {G__15318__a[G__15318__i] = arguments[G__15318__i + 2]; ++G__15318__i;}
  zs = new cljs.core.IndexedSeq(G__15318__a,0);
} 
return G__15317__delegate.call(this,x,y,zs);};
G__15317.cljs$lang$maxFixedArity = 2;
G__15317.cljs$lang$applyTo = (function (arglist__15319){
var x = cljs.core.first(arglist__15319);
arglist__15319 = cljs.core.next(arglist__15319);
var y = cljs.core.first(arglist__15319);
var zs = cljs.core.rest(arglist__15319);
return G__15317__delegate(x,y,zs);
});
G__15317.cljs$core$IFn$_invoke$arity$variadic = G__15317__delegate;
return G__15317;
})()
;
G__15316 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__15316__0.call(this);
case 1:
return G__15316__1.call(this,x);
case 2:
return G__15316__2.call(this,x,y);
default:
var G__15320 = null;
if (arguments.length > 2) {
var G__15321__i = 0, G__15321__a = new Array(arguments.length -  2);
while (G__15321__i < G__15321__a.length) {G__15321__a[G__15321__i] = arguments[G__15321__i + 2]; ++G__15321__i;}
G__15320 = new cljs.core.IndexedSeq(G__15321__a,0);
}
return G__15316__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__15320);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15316.cljs$lang$maxFixedArity = 2;
G__15316.cljs$lang$applyTo = G__15316__3.cljs$lang$applyTo;
G__15316.cljs$core$IFn$_invoke$arity$0 = G__15316__0;
G__15316.cljs$core$IFn$_invoke$arity$1 = G__15316__1;
G__15316.cljs$core$IFn$_invoke$arity$2 = G__15316__2;
G__15316.cljs$core$IFn$_invoke$arity$variadic = G__15316__3.cljs$core$IFn$_invoke$arity$variadic;
return G__15316;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__15322__delegate = function (args){
return x;
};
var G__15322 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__15323__i = 0, G__15323__a = new Array(arguments.length -  0);
while (G__15323__i < G__15323__a.length) {G__15323__a[G__15323__i] = arguments[G__15323__i + 0]; ++G__15323__i;}
  args = new cljs.core.IndexedSeq(G__15323__a,0);
} 
return G__15322__delegate.call(this,args);};
G__15322.cljs$lang$maxFixedArity = 0;
G__15322.cljs$lang$applyTo = (function (arglist__15324){
var args = cljs.core.seq(arglist__15324);
return G__15322__delegate(args);
});
G__15322.cljs$core$IFn$_invoke$arity$variadic = G__15322__delegate;
return G__15322;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__15379 = null;
var G__15379__0 = (function (){
var G__15352 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15352) : f.call(null,G__15352));
});
var G__15379__1 = (function (x){
var G__15353 = (function (){var G__15354 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15354) : g.call(null,G__15354));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15353) : f.call(null,G__15353));
});
var G__15379__2 = (function (x,y){
var G__15355 = (function (){var G__15356 = x;
var G__15357 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__15356,G__15357) : g.call(null,G__15356,G__15357));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15355) : f.call(null,G__15355));
});
var G__15379__3 = (function (x,y,z){
var G__15358 = (function (){var G__15359 = x;
var G__15360 = y;
var G__15361 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__15359,G__15360,G__15361) : g.call(null,G__15359,G__15360,G__15361));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15358) : f.call(null,G__15358));
});
var G__15379__4 = (function() { 
var G__15380__delegate = function (x,y,z,args){
var G__15362 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15362) : f.call(null,G__15362));
};
var G__15380 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15381__i = 0, G__15381__a = new Array(arguments.length -  3);
while (G__15381__i < G__15381__a.length) {G__15381__a[G__15381__i] = arguments[G__15381__i + 3]; ++G__15381__i;}
  args = new cljs.core.IndexedSeq(G__15381__a,0);
} 
return G__15380__delegate.call(this,x,y,z,args);};
G__15380.cljs$lang$maxFixedArity = 3;
G__15380.cljs$lang$applyTo = (function (arglist__15382){
var x = cljs.core.first(arglist__15382);
arglist__15382 = cljs.core.next(arglist__15382);
var y = cljs.core.first(arglist__15382);
arglist__15382 = cljs.core.next(arglist__15382);
var z = cljs.core.first(arglist__15382);
var args = cljs.core.rest(arglist__15382);
return G__15380__delegate(x,y,z,args);
});
G__15380.cljs$core$IFn$_invoke$arity$variadic = G__15380__delegate;
return G__15380;
})()
;
G__15379 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15379__0.call(this);
case 1:
return G__15379__1.call(this,x);
case 2:
return G__15379__2.call(this,x,y);
case 3:
return G__15379__3.call(this,x,y,z);
default:
var G__15383 = null;
if (arguments.length > 3) {
var G__15384__i = 0, G__15384__a = new Array(arguments.length -  3);
while (G__15384__i < G__15384__a.length) {G__15384__a[G__15384__i] = arguments[G__15384__i + 3]; ++G__15384__i;}
G__15383 = new cljs.core.IndexedSeq(G__15384__a,0);
}
return G__15379__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15383);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15379.cljs$lang$maxFixedArity = 3;
G__15379.cljs$lang$applyTo = G__15379__4.cljs$lang$applyTo;
G__15379.cljs$core$IFn$_invoke$arity$0 = G__15379__0;
G__15379.cljs$core$IFn$_invoke$arity$1 = G__15379__1;
G__15379.cljs$core$IFn$_invoke$arity$2 = G__15379__2;
G__15379.cljs$core$IFn$_invoke$arity$3 = G__15379__3;
G__15379.cljs$core$IFn$_invoke$arity$variadic = G__15379__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15379;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__15385 = null;
var G__15385__0 = (function (){
var G__15363 = (function (){var G__15364 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15364) : g.call(null,G__15364));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15363) : f.call(null,G__15363));
});
var G__15385__1 = (function (x){
var G__15365 = (function (){var G__15366 = (function (){var G__15367 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__15367) : h.call(null,G__15367));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15366) : g.call(null,G__15366));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15365) : f.call(null,G__15365));
});
var G__15385__2 = (function (x,y){
var G__15368 = (function (){var G__15369 = (function (){var G__15370 = x;
var G__15371 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__15370,G__15371) : h.call(null,G__15370,G__15371));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15369) : g.call(null,G__15369));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15368) : f.call(null,G__15368));
});
var G__15385__3 = (function (x,y,z){
var G__15372 = (function (){var G__15373 = (function (){var G__15374 = x;
var G__15375 = y;
var G__15376 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__15374,G__15375,G__15376) : h.call(null,G__15374,G__15375,G__15376));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15373) : g.call(null,G__15373));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15372) : f.call(null,G__15372));
});
var G__15385__4 = (function() { 
var G__15386__delegate = function (x,y,z,args){
var G__15377 = (function (){var G__15378 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15378) : g.call(null,G__15378));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15377) : f.call(null,G__15377));
};
var G__15386 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15387__i = 0, G__15387__a = new Array(arguments.length -  3);
while (G__15387__i < G__15387__a.length) {G__15387__a[G__15387__i] = arguments[G__15387__i + 3]; ++G__15387__i;}
  args = new cljs.core.IndexedSeq(G__15387__a,0);
} 
return G__15386__delegate.call(this,x,y,z,args);};
G__15386.cljs$lang$maxFixedArity = 3;
G__15386.cljs$lang$applyTo = (function (arglist__15388){
var x = cljs.core.first(arglist__15388);
arglist__15388 = cljs.core.next(arglist__15388);
var y = cljs.core.first(arglist__15388);
arglist__15388 = cljs.core.next(arglist__15388);
var z = cljs.core.first(arglist__15388);
var args = cljs.core.rest(arglist__15388);
return G__15386__delegate(x,y,z,args);
});
G__15386.cljs$core$IFn$_invoke$arity$variadic = G__15386__delegate;
return G__15386;
})()
;
G__15385 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15385__0.call(this);
case 1:
return G__15385__1.call(this,x);
case 2:
return G__15385__2.call(this,x,y);
case 3:
return G__15385__3.call(this,x,y,z);
default:
var G__15389 = null;
if (arguments.length > 3) {
var G__15390__i = 0, G__15390__a = new Array(arguments.length -  3);
while (G__15390__i < G__15390__a.length) {G__15390__a[G__15390__i] = arguments[G__15390__i + 3]; ++G__15390__i;}
G__15389 = new cljs.core.IndexedSeq(G__15390__a,0);
}
return G__15385__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15389);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15385.cljs$lang$maxFixedArity = 3;
G__15385.cljs$lang$applyTo = G__15385__4.cljs$lang$applyTo;
G__15385.cljs$core$IFn$_invoke$arity$0 = G__15385__0;
G__15385.cljs$core$IFn$_invoke$arity$1 = G__15385__1;
G__15385.cljs$core$IFn$_invoke$arity$2 = G__15385__2;
G__15385.cljs$core$IFn$_invoke$arity$3 = G__15385__3;
G__15385.cljs$core$IFn$_invoke$arity$variadic = G__15385__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15385;
})()
});
var comp__4 = (function() { 
var G__15391__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__15392__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__15393 = cljs.core.first(fs__$2).call(null,ret);
var G__15394 = cljs.core.next(fs__$2);
ret = G__15393;
fs__$2 = G__15394;
continue;
} else {
return ret;
}
break;
}
};
var G__15392 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__15395__i = 0, G__15395__a = new Array(arguments.length -  0);
while (G__15395__i < G__15395__a.length) {G__15395__a[G__15395__i] = arguments[G__15395__i + 0]; ++G__15395__i;}
  args = new cljs.core.IndexedSeq(G__15395__a,0);
} 
return G__15392__delegate.call(this,args);};
G__15392.cljs$lang$maxFixedArity = 0;
G__15392.cljs$lang$applyTo = (function (arglist__15396){
var args = cljs.core.seq(arglist__15396);
return G__15392__delegate(args);
});
G__15392.cljs$core$IFn$_invoke$arity$variadic = G__15392__delegate;
return G__15392;
})()
;
;})(fs__$1))
};
var G__15391 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__15397__i = 0, G__15397__a = new Array(arguments.length -  3);
while (G__15397__i < G__15397__a.length) {G__15397__a[G__15397__i] = arguments[G__15397__i + 3]; ++G__15397__i;}
  fs = new cljs.core.IndexedSeq(G__15397__a,0);
} 
return G__15391__delegate.call(this,f1,f2,f3,fs);};
G__15391.cljs$lang$maxFixedArity = 3;
G__15391.cljs$lang$applyTo = (function (arglist__15398){
var f1 = cljs.core.first(arglist__15398);
arglist__15398 = cljs.core.next(arglist__15398);
var f2 = cljs.core.first(arglist__15398);
arglist__15398 = cljs.core.next(arglist__15398);
var f3 = cljs.core.first(arglist__15398);
var fs = cljs.core.rest(arglist__15398);
return G__15391__delegate(f1,f2,f3,fs);
});
G__15391.cljs$core$IFn$_invoke$arity$variadic = G__15391__delegate;
return G__15391;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__15399 = null;
if (arguments.length > 3) {
var G__15400__i = 0, G__15400__a = new Array(arguments.length -  3);
while (G__15400__i < G__15400__a.length) {G__15400__a[G__15400__i] = arguments[G__15400__i + 3]; ++G__15400__i;}
G__15399 = new cljs.core.IndexedSeq(G__15400__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__15399);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__15485 = null;
var G__15485__0 = (function (){
var G__15443 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15443) : f.call(null,G__15443));
});
var G__15485__1 = (function (x){
var G__15444 = arg1;
var G__15445 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15444,G__15445) : f.call(null,G__15444,G__15445));
});
var G__15485__2 = (function (x,y){
var G__15446 = arg1;
var G__15447 = x;
var G__15448 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15446,G__15447,G__15448) : f.call(null,G__15446,G__15447,G__15448));
});
var G__15485__3 = (function (x,y,z){
var G__15449 = arg1;
var G__15450 = x;
var G__15451 = y;
var G__15452 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15449,G__15450,G__15451,G__15452) : f.call(null,G__15449,G__15450,G__15451,G__15452));
});
var G__15485__4 = (function() { 
var G__15486__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__15486 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15487__i = 0, G__15487__a = new Array(arguments.length -  3);
while (G__15487__i < G__15487__a.length) {G__15487__a[G__15487__i] = arguments[G__15487__i + 3]; ++G__15487__i;}
  args = new cljs.core.IndexedSeq(G__15487__a,0);
} 
return G__15486__delegate.call(this,x,y,z,args);};
G__15486.cljs$lang$maxFixedArity = 3;
G__15486.cljs$lang$applyTo = (function (arglist__15488){
var x = cljs.core.first(arglist__15488);
arglist__15488 = cljs.core.next(arglist__15488);
var y = cljs.core.first(arglist__15488);
arglist__15488 = cljs.core.next(arglist__15488);
var z = cljs.core.first(arglist__15488);
var args = cljs.core.rest(arglist__15488);
return G__15486__delegate(x,y,z,args);
});
G__15486.cljs$core$IFn$_invoke$arity$variadic = G__15486__delegate;
return G__15486;
})()
;
G__15485 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15485__0.call(this);
case 1:
return G__15485__1.call(this,x);
case 2:
return G__15485__2.call(this,x,y);
case 3:
return G__15485__3.call(this,x,y,z);
default:
var G__15489 = null;
if (arguments.length > 3) {
var G__15490__i = 0, G__15490__a = new Array(arguments.length -  3);
while (G__15490__i < G__15490__a.length) {G__15490__a[G__15490__i] = arguments[G__15490__i + 3]; ++G__15490__i;}
G__15489 = new cljs.core.IndexedSeq(G__15490__a,0);
}
return G__15485__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15489);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15485.cljs$lang$maxFixedArity = 3;
G__15485.cljs$lang$applyTo = G__15485__4.cljs$lang$applyTo;
G__15485.cljs$core$IFn$_invoke$arity$0 = G__15485__0;
G__15485.cljs$core$IFn$_invoke$arity$1 = G__15485__1;
G__15485.cljs$core$IFn$_invoke$arity$2 = G__15485__2;
G__15485.cljs$core$IFn$_invoke$arity$3 = G__15485__3;
G__15485.cljs$core$IFn$_invoke$arity$variadic = G__15485__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15485;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__15491 = null;
var G__15491__0 = (function (){
var G__15453 = arg1;
var G__15454 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15453,G__15454) : f.call(null,G__15453,G__15454));
});
var G__15491__1 = (function (x){
var G__15455 = arg1;
var G__15456 = arg2;
var G__15457 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15455,G__15456,G__15457) : f.call(null,G__15455,G__15456,G__15457));
});
var G__15491__2 = (function (x,y){
var G__15458 = arg1;
var G__15459 = arg2;
var G__15460 = x;
var G__15461 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15458,G__15459,G__15460,G__15461) : f.call(null,G__15458,G__15459,G__15460,G__15461));
});
var G__15491__3 = (function (x,y,z){
var G__15462 = arg1;
var G__15463 = arg2;
var G__15464 = x;
var G__15465 = y;
var G__15466 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__15462,G__15463,G__15464,G__15465,G__15466) : f.call(null,G__15462,G__15463,G__15464,G__15465,G__15466));
});
var G__15491__4 = (function() { 
var G__15492__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__15492 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15493__i = 0, G__15493__a = new Array(arguments.length -  3);
while (G__15493__i < G__15493__a.length) {G__15493__a[G__15493__i] = arguments[G__15493__i + 3]; ++G__15493__i;}
  args = new cljs.core.IndexedSeq(G__15493__a,0);
} 
return G__15492__delegate.call(this,x,y,z,args);};
G__15492.cljs$lang$maxFixedArity = 3;
G__15492.cljs$lang$applyTo = (function (arglist__15494){
var x = cljs.core.first(arglist__15494);
arglist__15494 = cljs.core.next(arglist__15494);
var y = cljs.core.first(arglist__15494);
arglist__15494 = cljs.core.next(arglist__15494);
var z = cljs.core.first(arglist__15494);
var args = cljs.core.rest(arglist__15494);
return G__15492__delegate(x,y,z,args);
});
G__15492.cljs$core$IFn$_invoke$arity$variadic = G__15492__delegate;
return G__15492;
})()
;
G__15491 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15491__0.call(this);
case 1:
return G__15491__1.call(this,x);
case 2:
return G__15491__2.call(this,x,y);
case 3:
return G__15491__3.call(this,x,y,z);
default:
var G__15495 = null;
if (arguments.length > 3) {
var G__15496__i = 0, G__15496__a = new Array(arguments.length -  3);
while (G__15496__i < G__15496__a.length) {G__15496__a[G__15496__i] = arguments[G__15496__i + 3]; ++G__15496__i;}
G__15495 = new cljs.core.IndexedSeq(G__15496__a,0);
}
return G__15491__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15495);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15491.cljs$lang$maxFixedArity = 3;
G__15491.cljs$lang$applyTo = G__15491__4.cljs$lang$applyTo;
G__15491.cljs$core$IFn$_invoke$arity$0 = G__15491__0;
G__15491.cljs$core$IFn$_invoke$arity$1 = G__15491__1;
G__15491.cljs$core$IFn$_invoke$arity$2 = G__15491__2;
G__15491.cljs$core$IFn$_invoke$arity$3 = G__15491__3;
G__15491.cljs$core$IFn$_invoke$arity$variadic = G__15491__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15491;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__15497 = null;
var G__15497__0 = (function (){
var G__15467 = arg1;
var G__15468 = arg2;
var G__15469 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15467,G__15468,G__15469) : f.call(null,G__15467,G__15468,G__15469));
});
var G__15497__1 = (function (x){
var G__15470 = arg1;
var G__15471 = arg2;
var G__15472 = arg3;
var G__15473 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15470,G__15471,G__15472,G__15473) : f.call(null,G__15470,G__15471,G__15472,G__15473));
});
var G__15497__2 = (function (x,y){
var G__15474 = arg1;
var G__15475 = arg2;
var G__15476 = arg3;
var G__15477 = x;
var G__15478 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__15474,G__15475,G__15476,G__15477,G__15478) : f.call(null,G__15474,G__15475,G__15476,G__15477,G__15478));
});
var G__15497__3 = (function (x,y,z){
var G__15479 = arg1;
var G__15480 = arg2;
var G__15481 = arg3;
var G__15482 = x;
var G__15483 = y;
var G__15484 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__15479,G__15480,G__15481,G__15482,G__15483,G__15484) : f.call(null,G__15479,G__15480,G__15481,G__15482,G__15483,G__15484));
});
var G__15497__4 = (function() { 
var G__15498__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__15498 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15499__i = 0, G__15499__a = new Array(arguments.length -  3);
while (G__15499__i < G__15499__a.length) {G__15499__a[G__15499__i] = arguments[G__15499__i + 3]; ++G__15499__i;}
  args = new cljs.core.IndexedSeq(G__15499__a,0);
} 
return G__15498__delegate.call(this,x,y,z,args);};
G__15498.cljs$lang$maxFixedArity = 3;
G__15498.cljs$lang$applyTo = (function (arglist__15500){
var x = cljs.core.first(arglist__15500);
arglist__15500 = cljs.core.next(arglist__15500);
var y = cljs.core.first(arglist__15500);
arglist__15500 = cljs.core.next(arglist__15500);
var z = cljs.core.first(arglist__15500);
var args = cljs.core.rest(arglist__15500);
return G__15498__delegate(x,y,z,args);
});
G__15498.cljs$core$IFn$_invoke$arity$variadic = G__15498__delegate;
return G__15498;
})()
;
G__15497 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__15497__0.call(this);
case 1:
return G__15497__1.call(this,x);
case 2:
return G__15497__2.call(this,x,y);
case 3:
return G__15497__3.call(this,x,y,z);
default:
var G__15501 = null;
if (arguments.length > 3) {
var G__15502__i = 0, G__15502__a = new Array(arguments.length -  3);
while (G__15502__i < G__15502__a.length) {G__15502__a[G__15502__i] = arguments[G__15502__i + 3]; ++G__15502__i;}
G__15501 = new cljs.core.IndexedSeq(G__15502__a,0);
}
return G__15497__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15501);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15497.cljs$lang$maxFixedArity = 3;
G__15497.cljs$lang$applyTo = G__15497__4.cljs$lang$applyTo;
G__15497.cljs$core$IFn$_invoke$arity$0 = G__15497__0;
G__15497.cljs$core$IFn$_invoke$arity$1 = G__15497__1;
G__15497.cljs$core$IFn$_invoke$arity$2 = G__15497__2;
G__15497.cljs$core$IFn$_invoke$arity$3 = G__15497__3;
G__15497.cljs$core$IFn$_invoke$arity$variadic = G__15497__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15497;
})()
});
var partial__5 = (function() { 
var G__15503__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__15504__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__15504 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__15505__i = 0, G__15505__a = new Array(arguments.length -  0);
while (G__15505__i < G__15505__a.length) {G__15505__a[G__15505__i] = arguments[G__15505__i + 0]; ++G__15505__i;}
  args = new cljs.core.IndexedSeq(G__15505__a,0);
} 
return G__15504__delegate.call(this,args);};
G__15504.cljs$lang$maxFixedArity = 0;
G__15504.cljs$lang$applyTo = (function (arglist__15506){
var args = cljs.core.seq(arglist__15506);
return G__15504__delegate(args);
});
G__15504.cljs$core$IFn$_invoke$arity$variadic = G__15504__delegate;
return G__15504;
})()
;
};
var G__15503 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__15507__i = 0, G__15507__a = new Array(arguments.length -  4);
while (G__15507__i < G__15507__a.length) {G__15507__a[G__15507__i] = arguments[G__15507__i + 4]; ++G__15507__i;}
  more = new cljs.core.IndexedSeq(G__15507__a,0);
} 
return G__15503__delegate.call(this,f,arg1,arg2,arg3,more);};
G__15503.cljs$lang$maxFixedArity = 4;
G__15503.cljs$lang$applyTo = (function (arglist__15508){
var f = cljs.core.first(arglist__15508);
arglist__15508 = cljs.core.next(arglist__15508);
var arg1 = cljs.core.first(arglist__15508);
arglist__15508 = cljs.core.next(arglist__15508);
var arg2 = cljs.core.first(arglist__15508);
arglist__15508 = cljs.core.next(arglist__15508);
var arg3 = cljs.core.first(arglist__15508);
var more = cljs.core.rest(arglist__15508);
return G__15503__delegate(f,arg1,arg2,arg3,more);
});
G__15503.cljs$core$IFn$_invoke$arity$variadic = G__15503__delegate;
return G__15503;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__15509 = null;
if (arguments.length > 4) {
var G__15510__i = 0, G__15510__a = new Array(arguments.length -  4);
while (G__15510__i < G__15510__a.length) {G__15510__a[G__15510__i] = arguments[G__15510__i + 4]; ++G__15510__i;}
G__15509 = new cljs.core.IndexedSeq(G__15510__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__15509);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__15543 = null;
var G__15543__1 = (function (a){
var G__15527 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15527) : f.call(null,G__15527));
});
var G__15543__2 = (function (a,b){
var G__15528 = (((a == null))?x:a);
var G__15529 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15528,G__15529) : f.call(null,G__15528,G__15529));
});
var G__15543__3 = (function (a,b,c){
var G__15530 = (((a == null))?x:a);
var G__15531 = b;
var G__15532 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15530,G__15531,G__15532) : f.call(null,G__15530,G__15531,G__15532));
});
var G__15543__4 = (function() { 
var G__15544__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__15544 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__15545__i = 0, G__15545__a = new Array(arguments.length -  3);
while (G__15545__i < G__15545__a.length) {G__15545__a[G__15545__i] = arguments[G__15545__i + 3]; ++G__15545__i;}
  ds = new cljs.core.IndexedSeq(G__15545__a,0);
} 
return G__15544__delegate.call(this,a,b,c,ds);};
G__15544.cljs$lang$maxFixedArity = 3;
G__15544.cljs$lang$applyTo = (function (arglist__15546){
var a = cljs.core.first(arglist__15546);
arglist__15546 = cljs.core.next(arglist__15546);
var b = cljs.core.first(arglist__15546);
arglist__15546 = cljs.core.next(arglist__15546);
var c = cljs.core.first(arglist__15546);
var ds = cljs.core.rest(arglist__15546);
return G__15544__delegate(a,b,c,ds);
});
G__15544.cljs$core$IFn$_invoke$arity$variadic = G__15544__delegate;
return G__15544;
})()
;
G__15543 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__15543__1.call(this,a);
case 2:
return G__15543__2.call(this,a,b);
case 3:
return G__15543__3.call(this,a,b,c);
default:
var G__15547 = null;
if (arguments.length > 3) {
var G__15548__i = 0, G__15548__a = new Array(arguments.length -  3);
while (G__15548__i < G__15548__a.length) {G__15548__a[G__15548__i] = arguments[G__15548__i + 3]; ++G__15548__i;}
G__15547 = new cljs.core.IndexedSeq(G__15548__a,0);
}
return G__15543__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__15547);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15543.cljs$lang$maxFixedArity = 3;
G__15543.cljs$lang$applyTo = G__15543__4.cljs$lang$applyTo;
G__15543.cljs$core$IFn$_invoke$arity$1 = G__15543__1;
G__15543.cljs$core$IFn$_invoke$arity$2 = G__15543__2;
G__15543.cljs$core$IFn$_invoke$arity$3 = G__15543__3;
G__15543.cljs$core$IFn$_invoke$arity$variadic = G__15543__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15543;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__15549 = null;
var G__15549__2 = (function (a,b){
var G__15533 = (((a == null))?x:a);
var G__15534 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15533,G__15534) : f.call(null,G__15533,G__15534));
});
var G__15549__3 = (function (a,b,c){
var G__15535 = (((a == null))?x:a);
var G__15536 = (((b == null))?y:b);
var G__15537 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15535,G__15536,G__15537) : f.call(null,G__15535,G__15536,G__15537));
});
var G__15549__4 = (function() { 
var G__15550__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__15550 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__15551__i = 0, G__15551__a = new Array(arguments.length -  3);
while (G__15551__i < G__15551__a.length) {G__15551__a[G__15551__i] = arguments[G__15551__i + 3]; ++G__15551__i;}
  ds = new cljs.core.IndexedSeq(G__15551__a,0);
} 
return G__15550__delegate.call(this,a,b,c,ds);};
G__15550.cljs$lang$maxFixedArity = 3;
G__15550.cljs$lang$applyTo = (function (arglist__15552){
var a = cljs.core.first(arglist__15552);
arglist__15552 = cljs.core.next(arglist__15552);
var b = cljs.core.first(arglist__15552);
arglist__15552 = cljs.core.next(arglist__15552);
var c = cljs.core.first(arglist__15552);
var ds = cljs.core.rest(arglist__15552);
return G__15550__delegate(a,b,c,ds);
});
G__15550.cljs$core$IFn$_invoke$arity$variadic = G__15550__delegate;
return G__15550;
})()
;
G__15549 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__15549__2.call(this,a,b);
case 3:
return G__15549__3.call(this,a,b,c);
default:
var G__15553 = null;
if (arguments.length > 3) {
var G__15554__i = 0, G__15554__a = new Array(arguments.length -  3);
while (G__15554__i < G__15554__a.length) {G__15554__a[G__15554__i] = arguments[G__15554__i + 3]; ++G__15554__i;}
G__15553 = new cljs.core.IndexedSeq(G__15554__a,0);
}
return G__15549__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__15553);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15549.cljs$lang$maxFixedArity = 3;
G__15549.cljs$lang$applyTo = G__15549__4.cljs$lang$applyTo;
G__15549.cljs$core$IFn$_invoke$arity$2 = G__15549__2;
G__15549.cljs$core$IFn$_invoke$arity$3 = G__15549__3;
G__15549.cljs$core$IFn$_invoke$arity$variadic = G__15549__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15549;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__15555 = null;
var G__15555__2 = (function (a,b){
var G__15538 = (((a == null))?x:a);
var G__15539 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15538,G__15539) : f.call(null,G__15538,G__15539));
});
var G__15555__3 = (function (a,b,c){
var G__15540 = (((a == null))?x:a);
var G__15541 = (((b == null))?y:b);
var G__15542 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15540,G__15541,G__15542) : f.call(null,G__15540,G__15541,G__15542));
});
var G__15555__4 = (function() { 
var G__15556__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__15556 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__15557__i = 0, G__15557__a = new Array(arguments.length -  3);
while (G__15557__i < G__15557__a.length) {G__15557__a[G__15557__i] = arguments[G__15557__i + 3]; ++G__15557__i;}
  ds = new cljs.core.IndexedSeq(G__15557__a,0);
} 
return G__15556__delegate.call(this,a,b,c,ds);};
G__15556.cljs$lang$maxFixedArity = 3;
G__15556.cljs$lang$applyTo = (function (arglist__15558){
var a = cljs.core.first(arglist__15558);
arglist__15558 = cljs.core.next(arglist__15558);
var b = cljs.core.first(arglist__15558);
arglist__15558 = cljs.core.next(arglist__15558);
var c = cljs.core.first(arglist__15558);
var ds = cljs.core.rest(arglist__15558);
return G__15556__delegate(a,b,c,ds);
});
G__15556.cljs$core$IFn$_invoke$arity$variadic = G__15556__delegate;
return G__15556;
})()
;
G__15555 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__15555__2.call(this,a,b);
case 3:
return G__15555__3.call(this,a,b,c);
default:
var G__15559 = null;
if (arguments.length > 3) {
var G__15560__i = 0, G__15560__a = new Array(arguments.length -  3);
while (G__15560__i < G__15560__a.length) {G__15560__a[G__15560__i] = arguments[G__15560__i + 3]; ++G__15560__i;}
G__15559 = new cljs.core.IndexedSeq(G__15560__a,0);
}
return G__15555__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__15559);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15555.cljs$lang$maxFixedArity = 3;
G__15555.cljs$lang$applyTo = G__15555__4.cljs$lang$applyTo;
G__15555.cljs$core$IFn$_invoke$arity$2 = G__15555__2;
G__15555.cljs$core$IFn$_invoke$arity$3 = G__15555__3;
G__15555.cljs$core$IFn$_invoke$arity$variadic = G__15555__4.cljs$core$IFn$_invoke$arity$variadic;
return G__15555;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__15591 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__15591) : cljs.core.volatile_BANG_.call(null,G__15591));
})();
return ((function (i){
return (function() {
var G__15621 = null;
var G__15621__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15621__1 = (function (result){
var G__15592 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15592) : rf.call(null,G__15592));
});
var G__15621__2 = (function (result,input){
var G__15593 = result;
var G__15594 = (function (){var G__15595 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__15596 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15595,G__15596) : f.call(null,G__15595,G__15596));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15593,G__15594) : rf.call(null,G__15593,G__15594));
});
G__15621 = function(result,input){
switch(arguments.length){
case 0:
return G__15621__0.call(this);
case 1:
return G__15621__1.call(this,result);
case 2:
return G__15621__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15621.cljs$core$IFn$_invoke$arity$0 = G__15621__0;
G__15621.cljs$core$IFn$_invoke$arity$1 = G__15621__1;
G__15621.cljs$core$IFn$_invoke$arity$2 = G__15621__2;
return G__15621;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__6413__auto___15622 = size;
var i_15623 = (0);
while(true){
if((i_15623 < n__6413__auto___15622)){
cljs.core.chunk_append(b,(function (){var G__15617 = (idx + i_15623);
var G__15618 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_15623);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15617,G__15618) : f.call(null,G__15617,G__15618));
})());

var G__15624 = (i_15623 + (1));
i_15623 = G__15624;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__15619 = idx;
var G__15620 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15619,G__15620) : f.call(null,G__15619,G__15620));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__15643 = null;
var G__15643__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15643__1 = (function (result){
var G__15637 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15637) : rf.call(null,G__15637));
});
var G__15643__2 = (function (result,input){
var v = (function (){var G__15638 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15638) : f.call(null,G__15638));
})();
if((v == null)){
return result;
} else {
var G__15639 = result;
var G__15640 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15639,G__15640) : rf.call(null,G__15639,G__15640));
}
});
G__15643 = function(result,input){
switch(arguments.length){
case 0:
return G__15643__0.call(this);
case 1:
return G__15643__1.call(this,result);
case 2:
return G__15643__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15643.cljs$core$IFn$_invoke$arity$0 = G__15643__0;
G__15643.cljs$core$IFn$_invoke$arity$1 = G__15643__1;
G__15643.cljs$core$IFn$_invoke$arity$2 = G__15643__2;
return G__15643;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__6413__auto___15644 = size;
var i_15645 = (0);
while(true){
if((i_15645 < n__6413__auto___15644)){
var x_15646 = (function (){var G__15641 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_15645);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15641) : f.call(null,G__15641));
})();
if((x_15646 == null)){
} else {
cljs.core.chunk_append(b,x_15646);
}

var G__15647 = (i_15645 + (1));
i_15645 = G__15647;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__15642 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15642) : f.call(null,G__15642));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__15648 = this$__$1;
return goog.getUid(G__15648);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__15649 = cljs.core.seq(self__.watches);
var chunk__15650 = null;
var count__15651 = (0);
var i__15652 = (0);
while(true){
if((i__15652 < count__15651)){
var vec__15653 = chunk__15650.cljs$core$IIndexed$_nth$arity$2(null,i__15652);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15653,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15653,(1),null);
var G__15654_15663 = key;
var G__15655_15664 = this$__$1;
var G__15656_15665 = oldval;
var G__15657_15666 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15654_15663,G__15655_15664,G__15656_15665,G__15657_15666) : f.call(null,G__15654_15663,G__15655_15664,G__15656_15665,G__15657_15666));

var G__15667 = seq__15649;
var G__15668 = chunk__15650;
var G__15669 = count__15651;
var G__15670 = (i__15652 + (1));
seq__15649 = G__15667;
chunk__15650 = G__15668;
count__15651 = G__15669;
i__15652 = G__15670;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15649);
if(temp__4126__auto__){
var seq__15649__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15649__$1)){
var c__6313__auto__ = cljs.core.chunk_first(seq__15649__$1);
var G__15671 = cljs.core.chunk_rest(seq__15649__$1);
var G__15672 = c__6313__auto__;
var G__15673 = cljs.core.count(c__6313__auto__);
var G__15674 = (0);
seq__15649 = G__15671;
chunk__15650 = G__15672;
count__15651 = G__15673;
i__15652 = G__15674;
continue;
} else {
var vec__15658 = cljs.core.first(seq__15649__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15658,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15658,(1),null);
var G__15659_15675 = key;
var G__15660_15676 = this$__$1;
var G__15661_15677 = oldval;
var G__15662_15678 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15659_15675,G__15660_15676,G__15661_15677,G__15662_15678) : f.call(null,G__15659_15675,G__15660_15676,G__15661_15677,G__15662_15678));

var G__15679 = cljs.core.next(seq__15649__$1);
var G__15680 = null;
var G__15681 = (0);
var G__15682 = (0);
seq__15649 = G__15679;
chunk__15650 = G__15680;
count__15651 = G__15681;
i__15652 = G__15682;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__15686__delegate = function (x,p__15683){
var map__15685 = p__15683;
var map__15685__$1 = ((cljs.core.seq_QMARK_(map__15685))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__15685):map__15685);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15685__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15685__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__15686 = function (x,var_args){
var p__15683 = null;
if (arguments.length > 1) {
var G__15687__i = 0, G__15687__a = new Array(arguments.length -  1);
while (G__15687__i < G__15687__a.length) {G__15687__a[G__15687__i] = arguments[G__15687__i + 1]; ++G__15687__i;}
  p__15683 = new cljs.core.IndexedSeq(G__15687__a,0);
} 
return G__15686__delegate.call(this,x,p__15683);};
G__15686.cljs$lang$maxFixedArity = 1;
G__15686.cljs$lang$applyTo = (function (arglist__15688){
var x = cljs.core.first(arglist__15688);
var p__15683 = cljs.core.rest(arglist__15688);
return G__15686__delegate(x,p__15683);
});
G__15686.cljs$core$IFn$_invoke$arity$variadic = G__15686__delegate;
return G__15686;
})()
;
atom = function(x,var_args){
var p__15683 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__15689 = null;
if (arguments.length > 1) {
var G__15690__i = 0, G__15690__a = new Array(arguments.length -  1);
while (G__15690__i < G__15690__a.length) {G__15690__a[G__15690__i] = arguments[G__15690__i + 1]; ++G__15690__i;}
G__15689 = new cljs.core.IndexedSeq(G__15690__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__15689);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__15693 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__15693) : validate.call(null,G__15693));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__15694 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__15694) : cljs.core.pr_str.call(null,G__15694));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__15701 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15701) : f.call(null,G__15701));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__15702 = a.state;
var G__15703 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15702,G__15703) : f.call(null,G__15702,G__15703));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__15704 = a.state;
var G__15705 = x;
var G__15706 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15704,G__15705,G__15706) : f.call(null,G__15704,G__15705,G__15706));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__15707__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__15707 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__15708__i = 0, G__15708__a = new Array(arguments.length -  4);
while (G__15708__i < G__15708__a.length) {G__15708__a[G__15708__i] = arguments[G__15708__i + 4]; ++G__15708__i;}
  more = new cljs.core.IndexedSeq(G__15708__a,0);
} 
return G__15707__delegate.call(this,a,f,x,y,more);};
G__15707.cljs$lang$maxFixedArity = 4;
G__15707.cljs$lang$applyTo = (function (arglist__15709){
var a = cljs.core.first(arglist__15709);
arglist__15709 = cljs.core.next(arglist__15709);
var f = cljs.core.first(arglist__15709);
arglist__15709 = cljs.core.next(arglist__15709);
var x = cljs.core.first(arglist__15709);
arglist__15709 = cljs.core.next(arglist__15709);
var y = cljs.core.first(arglist__15709);
var more = cljs.core.rest(arglist__15709);
return G__15707__delegate(a,f,x,y,more);
});
G__15707.cljs$core$IFn$_invoke$arity$variadic = G__15707__delegate;
return G__15707;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__15710 = null;
if (arguments.length > 4) {
var G__15711__i = 0, G__15711__a = new Array(arguments.length -  4);
while (G__15711__i < G__15711__a.length) {G__15711__a[G__15711__i] = arguments[G__15711__i + 4]; ++G__15711__i;}
G__15710 = new cljs.core.IndexedSeq(G__15711__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__15710);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__15778 = null;
var G__15778__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15778__1 = (function (result){
var G__15745 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15745) : rf.call(null,G__15745));
});
var G__15778__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__15746 = i;
var G__15747 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15746,G__15747) : f.call(null,G__15746,G__15747));
})();
if((v == null)){
return result;
} else {
var G__15748 = result;
var G__15749 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15748,G__15749) : rf.call(null,G__15748,G__15749));
}
});
G__15778 = function(result,input){
switch(arguments.length){
case 0:
return G__15778__0.call(this);
case 1:
return G__15778__1.call(this,result);
case 2:
return G__15778__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15778.cljs$core$IFn$_invoke$arity$0 = G__15778__0;
G__15778.cljs$core$IFn$_invoke$arity$1 = G__15778__1;
G__15778.cljs$core$IFn$_invoke$arity$2 = G__15778__2;
return G__15778;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__6413__auto___15779 = size;
var i_15780 = (0);
while(true){
if((i_15780 < n__6413__auto___15779)){
var x_15781 = (function (){var G__15774 = (idx + i_15780);
var G__15775 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_15780);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15774,G__15775) : f.call(null,G__15774,G__15775));
})();
if((x_15781 == null)){
} else {
cljs.core.chunk_append(b,x_15781);
}

var G__15782 = (i_15780 + (1));
i_15780 = G__15782;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__15776 = idx;
var G__15777 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15776,G__15777) : f.call(null,G__15776,G__15777));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__15996 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15996) : p.call(null,G__15996));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__5514__auto__ = (function (){var G__15998 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15998) : p.call(null,G__15998));
})();
if(cljs.core.truth_(and__5514__auto__)){
var G__15999 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15999) : p.call(null,G__15999));
} else {
return and__5514__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__5514__auto__ = (function (){var G__16001 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16001) : p.call(null,G__16001));
})();
if(cljs.core.truth_(and__5514__auto__)){
var and__5514__auto____$1 = (function (){var G__16003 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16003) : p.call(null,G__16003));
})();
if(cljs.core.truth_(and__5514__auto____$1)){
var G__16004 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16004) : p.call(null,G__16004));
} else {
return and__5514__auto____$1;
}
} else {
return and__5514__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__16173__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__16173 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16174__i = 0, G__16174__a = new Array(arguments.length -  3);
while (G__16174__i < G__16174__a.length) {G__16174__a[G__16174__i] = arguments[G__16174__i + 3]; ++G__16174__i;}
  args = new cljs.core.IndexedSeq(G__16174__a,0);
} 
return G__16173__delegate.call(this,x,y,z,args);};
G__16173.cljs$lang$maxFixedArity = 3;
G__16173.cljs$lang$applyTo = (function (arglist__16175){
var x = cljs.core.first(arglist__16175);
arglist__16175 = cljs.core.next(arglist__16175);
var y = cljs.core.first(arglist__16175);
arglist__16175 = cljs.core.next(arglist__16175);
var z = cljs.core.first(arglist__16175);
var args = cljs.core.rest(arglist__16175);
return G__16173__delegate(x,y,z,args);
});
G__16173.cljs$core$IFn$_invoke$arity$variadic = G__16173__delegate;
return G__16173;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__16176 = null;
if (arguments.length > 3) {
var G__16177__i = 0, G__16177__a = new Array(arguments.length -  3);
while (G__16177__i < G__16177__a.length) {G__16177__a[G__16177__i] = arguments[G__16177__i + 3]; ++G__16177__i;}
G__16176 = new cljs.core.IndexedSeq(G__16177__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16176);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__5514__auto__ = (function (){var G__16036 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16036) : p1.call(null,G__16036));
})();
if(cljs.core.truth_(and__5514__auto__)){
var G__16037 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16037) : p2.call(null,G__16037));
} else {
return and__5514__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__5514__auto__ = (function (){var G__16039 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16039) : p1.call(null,G__16039));
})();
if(cljs.core.truth_(and__5514__auto__)){
var and__5514__auto____$1 = (function (){var G__16041 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16041) : p1.call(null,G__16041));
})();
if(cljs.core.truth_(and__5514__auto____$1)){
var and__5514__auto____$2 = (function (){var G__16043 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16043) : p2.call(null,G__16043));
})();
if(cljs.core.truth_(and__5514__auto____$2)){
var G__16044 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16044) : p2.call(null,G__16044));
} else {
return and__5514__auto____$2;
}
} else {
return and__5514__auto____$1;
}
} else {
return and__5514__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__5514__auto__ = (function (){var G__16046 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16046) : p1.call(null,G__16046));
})();
if(cljs.core.truth_(and__5514__auto__)){
var and__5514__auto____$1 = (function (){var G__16048 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16048) : p1.call(null,G__16048));
})();
if(cljs.core.truth_(and__5514__auto____$1)){
var and__5514__auto____$2 = (function (){var G__16050 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16050) : p1.call(null,G__16050));
})();
if(cljs.core.truth_(and__5514__auto____$2)){
var and__5514__auto____$3 = (function (){var G__16052 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16052) : p2.call(null,G__16052));
})();
if(cljs.core.truth_(and__5514__auto____$3)){
var and__5514__auto____$4 = (function (){var G__16054 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16054) : p2.call(null,G__16054));
})();
if(cljs.core.truth_(and__5514__auto____$4)){
var G__16055 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16055) : p2.call(null,G__16055));
} else {
return and__5514__auto____$4;
}
} else {
return and__5514__auto____$3;
}
} else {
return and__5514__auto____$2;
}
} else {
return and__5514__auto____$1;
}
} else {
return and__5514__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__16178__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__15783_SHARP_){
var and__5514__auto__ = (function (){var G__16060 = p1__15783_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16060) : p1.call(null,G__16060));
})();
if(cljs.core.truth_(and__5514__auto__)){
var G__16061 = p1__15783_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16061) : p2.call(null,G__16061));
} else {
return and__5514__auto__;
}
}),args)));
};
var G__16178 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16179__i = 0, G__16179__a = new Array(arguments.length -  3);
while (G__16179__i < G__16179__a.length) {G__16179__a[G__16179__i] = arguments[G__16179__i + 3]; ++G__16179__i;}
  args = new cljs.core.IndexedSeq(G__16179__a,0);
} 
return G__16178__delegate.call(this,x,y,z,args);};
G__16178.cljs$lang$maxFixedArity = 3;
G__16178.cljs$lang$applyTo = (function (arglist__16180){
var x = cljs.core.first(arglist__16180);
arglist__16180 = cljs.core.next(arglist__16180);
var y = cljs.core.first(arglist__16180);
arglist__16180 = cljs.core.next(arglist__16180);
var z = cljs.core.first(arglist__16180);
var args = cljs.core.rest(arglist__16180);
return G__16178__delegate(x,y,z,args);
});
G__16178.cljs$core$IFn$_invoke$arity$variadic = G__16178__delegate;
return G__16178;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__16181 = null;
if (arguments.length > 3) {
var G__16182__i = 0, G__16182__a = new Array(arguments.length -  3);
while (G__16182__i < G__16182__a.length) {G__16182__a[G__16182__i] = arguments[G__16182__i + 3]; ++G__16182__i;}
G__16181 = new cljs.core.IndexedSeq(G__16182__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16181);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__5514__auto__ = (function (){var G__16107 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16107) : p1.call(null,G__16107));
})();
if(cljs.core.truth_(and__5514__auto__)){
var and__5514__auto____$1 = (function (){var G__16109 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16109) : p2.call(null,G__16109));
})();
if(cljs.core.truth_(and__5514__auto____$1)){
var G__16110 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16110) : p3.call(null,G__16110));
} else {
return and__5514__auto____$1;
}
} else {
return and__5514__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__5514__auto__ = (function (){var G__16112 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16112) : p1.call(null,G__16112));
})();
if(cljs.core.truth_(and__5514__auto__)){
var and__5514__auto____$1 = (function (){var G__16114 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16114) : p2.call(null,G__16114));
})();
if(cljs.core.truth_(and__5514__auto____$1)){
var and__5514__auto____$2 = (function (){var G__16116 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16116) : p3.call(null,G__16116));
})();
if(cljs.core.truth_(and__5514__auto____$2)){
var and__5514__auto____$3 = (function (){var G__16118 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16118) : p1.call(null,G__16118));
})();
if(cljs.core.truth_(and__5514__auto____$3)){
var and__5514__auto____$4 = (function (){var G__16120 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16120) : p2.call(null,G__16120));
})();
if(cljs.core.truth_(and__5514__auto____$4)){
var G__16121 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16121) : p3.call(null,G__16121));
} else {
return and__5514__auto____$4;
}
} else {
return and__5514__auto____$3;
}
} else {
return and__5514__auto____$2;
}
} else {
return and__5514__auto____$1;
}
} else {
return and__5514__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__5514__auto__ = (function (){var G__16123 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16123) : p1.call(null,G__16123));
})();
if(cljs.core.truth_(and__5514__auto__)){
var and__5514__auto____$1 = (function (){var G__16125 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16125) : p2.call(null,G__16125));
})();
if(cljs.core.truth_(and__5514__auto____$1)){
var and__5514__auto____$2 = (function (){var G__16127 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16127) : p3.call(null,G__16127));
})();
if(cljs.core.truth_(and__5514__auto____$2)){
var and__5514__auto____$3 = (function (){var G__16129 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16129) : p1.call(null,G__16129));
})();
if(cljs.core.truth_(and__5514__auto____$3)){
var and__5514__auto____$4 = (function (){var G__16131 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16131) : p2.call(null,G__16131));
})();
if(cljs.core.truth_(and__5514__auto____$4)){
var and__5514__auto____$5 = (function (){var G__16133 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16133) : p3.call(null,G__16133));
})();
if(cljs.core.truth_(and__5514__auto____$5)){
var and__5514__auto____$6 = (function (){var G__16135 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16135) : p1.call(null,G__16135));
})();
if(cljs.core.truth_(and__5514__auto____$6)){
var and__5514__auto____$7 = (function (){var G__16137 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16137) : p2.call(null,G__16137));
})();
if(cljs.core.truth_(and__5514__auto____$7)){
var G__16138 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16138) : p3.call(null,G__16138));
} else {
return and__5514__auto____$7;
}
} else {
return and__5514__auto____$6;
}
} else {
return and__5514__auto____$5;
}
} else {
return and__5514__auto____$4;
}
} else {
return and__5514__auto____$3;
}
} else {
return and__5514__auto____$2;
}
} else {
return and__5514__auto____$1;
}
} else {
return and__5514__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__16183__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__15784_SHARP_){
var and__5514__auto__ = (function (){var G__16145 = p1__15784_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16145) : p1.call(null,G__16145));
})();
if(cljs.core.truth_(and__5514__auto__)){
var and__5514__auto____$1 = (function (){var G__16147 = p1__15784_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16147) : p2.call(null,G__16147));
})();
if(cljs.core.truth_(and__5514__auto____$1)){
var G__16148 = p1__15784_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16148) : p3.call(null,G__16148));
} else {
return and__5514__auto____$1;
}
} else {
return and__5514__auto__;
}
}),args)));
};
var G__16183 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16184__i = 0, G__16184__a = new Array(arguments.length -  3);
while (G__16184__i < G__16184__a.length) {G__16184__a[G__16184__i] = arguments[G__16184__i + 3]; ++G__16184__i;}
  args = new cljs.core.IndexedSeq(G__16184__a,0);
} 
return G__16183__delegate.call(this,x,y,z,args);};
G__16183.cljs$lang$maxFixedArity = 3;
G__16183.cljs$lang$applyTo = (function (arglist__16185){
var x = cljs.core.first(arglist__16185);
arglist__16185 = cljs.core.next(arglist__16185);
var y = cljs.core.first(arglist__16185);
arglist__16185 = cljs.core.next(arglist__16185);
var z = cljs.core.first(arglist__16185);
var args = cljs.core.rest(arglist__16185);
return G__16183__delegate(x,y,z,args);
});
G__16183.cljs$core$IFn$_invoke$arity$variadic = G__16183__delegate;
return G__16183;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__16186 = null;
if (arguments.length > 3) {
var G__16187__i = 0, G__16187__a = new Array(arguments.length -  3);
while (G__16187__i < G__16187__a.length) {G__16187__a[G__16187__i] = arguments[G__16187__i + 3]; ++G__16187__i;}
G__16186 = new cljs.core.IndexedSeq(G__16187__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16186);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__16188__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__15785_SHARP_){
var G__16164 = x;
return (p1__15785_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15785_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16164) : p1__15785_SHARP_.call(null,G__16164));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__15786_SHARP_){
var and__5514__auto__ = (function (){var G__16166 = x;
return (p1__15786_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15786_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16166) : p1__15786_SHARP_.call(null,G__16166));
})();
if(cljs.core.truth_(and__5514__auto__)){
var G__16167 = y;
return (p1__15786_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15786_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16167) : p1__15786_SHARP_.call(null,G__16167));
} else {
return and__5514__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__15787_SHARP_){
var and__5514__auto__ = (function (){var G__16169 = x;
return (p1__15787_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15787_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16169) : p1__15787_SHARP_.call(null,G__16169));
})();
if(cljs.core.truth_(and__5514__auto__)){
var and__5514__auto____$1 = (function (){var G__16171 = y;
return (p1__15787_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15787_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16171) : p1__15787_SHARP_.call(null,G__16171));
})();
if(cljs.core.truth_(and__5514__auto____$1)){
var G__16172 = z;
return (p1__15787_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15787_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16172) : p1__15787_SHARP_.call(null,G__16172));
} else {
return and__5514__auto____$1;
}
} else {
return and__5514__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__16189__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__15788_SHARP_){
return cljs.core.every_QMARK_(p1__15788_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__16189 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16190__i = 0, G__16190__a = new Array(arguments.length -  3);
while (G__16190__i < G__16190__a.length) {G__16190__a[G__16190__i] = arguments[G__16190__i + 3]; ++G__16190__i;}
  args = new cljs.core.IndexedSeq(G__16190__a,0);
} 
return G__16189__delegate.call(this,x,y,z,args);};
G__16189.cljs$lang$maxFixedArity = 3;
G__16189.cljs$lang$applyTo = (function (arglist__16191){
var x = cljs.core.first(arglist__16191);
arglist__16191 = cljs.core.next(arglist__16191);
var y = cljs.core.first(arglist__16191);
arglist__16191 = cljs.core.next(arglist__16191);
var z = cljs.core.first(arglist__16191);
var args = cljs.core.rest(arglist__16191);
return G__16189__delegate(x,y,z,args);
});
G__16189.cljs$core$IFn$_invoke$arity$variadic = G__16189__delegate;
return G__16189;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__16192 = null;
if (arguments.length > 3) {
var G__16193__i = 0, G__16193__a = new Array(arguments.length -  3);
while (G__16193__i < G__16193__a.length) {G__16193__a[G__16193__i] = arguments[G__16193__i + 3]; ++G__16193__i;}
G__16192 = new cljs.core.IndexedSeq(G__16193__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16192);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__16188 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__16194__i = 0, G__16194__a = new Array(arguments.length -  3);
while (G__16194__i < G__16194__a.length) {G__16194__a[G__16194__i] = arguments[G__16194__i + 3]; ++G__16194__i;}
  ps = new cljs.core.IndexedSeq(G__16194__a,0);
} 
return G__16188__delegate.call(this,p1,p2,p3,ps);};
G__16188.cljs$lang$maxFixedArity = 3;
G__16188.cljs$lang$applyTo = (function (arglist__16195){
var p1 = cljs.core.first(arglist__16195);
arglist__16195 = cljs.core.next(arglist__16195);
var p2 = cljs.core.first(arglist__16195);
arglist__16195 = cljs.core.next(arglist__16195);
var p3 = cljs.core.first(arglist__16195);
var ps = cljs.core.rest(arglist__16195);
return G__16188__delegate(p1,p2,p3,ps);
});
G__16188.cljs$core$IFn$_invoke$arity$variadic = G__16188__delegate;
return G__16188;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__16196 = null;
if (arguments.length > 3) {
var G__16197__i = 0, G__16197__a = new Array(arguments.length -  3);
while (G__16197__i < G__16197__a.length) {G__16197__a[G__16197__i] = arguments[G__16197__i + 3]; ++G__16197__i;}
G__16196 = new cljs.core.IndexedSeq(G__16197__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__16196);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__16403 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16403) : p.call(null,G__16403));
});
var sp1__2 = (function (x,y){
var or__5526__auto__ = (function (){var G__16405 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16405) : p.call(null,G__16405));
})();
if(cljs.core.truth_(or__5526__auto__)){
return or__5526__auto__;
} else {
var G__16406 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16406) : p.call(null,G__16406));
}
});
var sp1__3 = (function (x,y,z){
var or__5526__auto__ = (function (){var G__16408 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16408) : p.call(null,G__16408));
})();
if(cljs.core.truth_(or__5526__auto__)){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (function (){var G__16410 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16410) : p.call(null,G__16410));
})();
if(cljs.core.truth_(or__5526__auto____$1)){
return or__5526__auto____$1;
} else {
var G__16411 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16411) : p.call(null,G__16411));
}
}
});
var sp1__4 = (function() { 
var G__16572__delegate = function (x,y,z,args){
var or__5526__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__5526__auto__)){
return or__5526__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__16572 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16573__i = 0, G__16573__a = new Array(arguments.length -  3);
while (G__16573__i < G__16573__a.length) {G__16573__a[G__16573__i] = arguments[G__16573__i + 3]; ++G__16573__i;}
  args = new cljs.core.IndexedSeq(G__16573__a,0);
} 
return G__16572__delegate.call(this,x,y,z,args);};
G__16572.cljs$lang$maxFixedArity = 3;
G__16572.cljs$lang$applyTo = (function (arglist__16574){
var x = cljs.core.first(arglist__16574);
arglist__16574 = cljs.core.next(arglist__16574);
var y = cljs.core.first(arglist__16574);
arglist__16574 = cljs.core.next(arglist__16574);
var z = cljs.core.first(arglist__16574);
var args = cljs.core.rest(arglist__16574);
return G__16572__delegate(x,y,z,args);
});
G__16572.cljs$core$IFn$_invoke$arity$variadic = G__16572__delegate;
return G__16572;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__16575 = null;
if (arguments.length > 3) {
var G__16576__i = 0, G__16576__a = new Array(arguments.length -  3);
while (G__16576__i < G__16576__a.length) {G__16576__a[G__16576__i] = arguments[G__16576__i + 3]; ++G__16576__i;}
G__16575 = new cljs.core.IndexedSeq(G__16576__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16575);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__5526__auto__ = (function (){var G__16443 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16443) : p1.call(null,G__16443));
})();
if(cljs.core.truth_(or__5526__auto__)){
return or__5526__auto__;
} else {
var G__16444 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16444) : p2.call(null,G__16444));
}
});
var sp2__2 = (function (x,y){
var or__5526__auto__ = (function (){var G__16446 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16446) : p1.call(null,G__16446));
})();
if(cljs.core.truth_(or__5526__auto__)){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (function (){var G__16448 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16448) : p1.call(null,G__16448));
})();
if(cljs.core.truth_(or__5526__auto____$1)){
return or__5526__auto____$1;
} else {
var or__5526__auto____$2 = (function (){var G__16450 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16450) : p2.call(null,G__16450));
})();
if(cljs.core.truth_(or__5526__auto____$2)){
return or__5526__auto____$2;
} else {
var G__16451 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16451) : p2.call(null,G__16451));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__5526__auto__ = (function (){var G__16453 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16453) : p1.call(null,G__16453));
})();
if(cljs.core.truth_(or__5526__auto__)){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (function (){var G__16455 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16455) : p1.call(null,G__16455));
})();
if(cljs.core.truth_(or__5526__auto____$1)){
return or__5526__auto____$1;
} else {
var or__5526__auto____$2 = (function (){var G__16457 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16457) : p1.call(null,G__16457));
})();
if(cljs.core.truth_(or__5526__auto____$2)){
return or__5526__auto____$2;
} else {
var or__5526__auto____$3 = (function (){var G__16459 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16459) : p2.call(null,G__16459));
})();
if(cljs.core.truth_(or__5526__auto____$3)){
return or__5526__auto____$3;
} else {
var or__5526__auto____$4 = (function (){var G__16461 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16461) : p2.call(null,G__16461));
})();
if(cljs.core.truth_(or__5526__auto____$4)){
return or__5526__auto____$4;
} else {
var G__16462 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16462) : p2.call(null,G__16462));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__16577__delegate = function (x,y,z,args){
var or__5526__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__5526__auto__)){
return or__5526__auto__;
} else {
return cljs.core.some(((function (or__5526__auto__){
return (function (p1__16198_SHARP_){
var or__5526__auto____$1 = (function (){var G__16464 = p1__16198_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16464) : p1.call(null,G__16464));
})();
if(cljs.core.truth_(or__5526__auto____$1)){
return or__5526__auto____$1;
} else {
var G__16465 = p1__16198_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16465) : p2.call(null,G__16465));
}
});})(or__5526__auto__))
,args);
}
};
var G__16577 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16578__i = 0, G__16578__a = new Array(arguments.length -  3);
while (G__16578__i < G__16578__a.length) {G__16578__a[G__16578__i] = arguments[G__16578__i + 3]; ++G__16578__i;}
  args = new cljs.core.IndexedSeq(G__16578__a,0);
} 
return G__16577__delegate.call(this,x,y,z,args);};
G__16577.cljs$lang$maxFixedArity = 3;
G__16577.cljs$lang$applyTo = (function (arglist__16579){
var x = cljs.core.first(arglist__16579);
arglist__16579 = cljs.core.next(arglist__16579);
var y = cljs.core.first(arglist__16579);
arglist__16579 = cljs.core.next(arglist__16579);
var z = cljs.core.first(arglist__16579);
var args = cljs.core.rest(arglist__16579);
return G__16577__delegate(x,y,z,args);
});
G__16577.cljs$core$IFn$_invoke$arity$variadic = G__16577__delegate;
return G__16577;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__16580 = null;
if (arguments.length > 3) {
var G__16581__i = 0, G__16581__a = new Array(arguments.length -  3);
while (G__16581__i < G__16581__a.length) {G__16581__a[G__16581__i] = arguments[G__16581__i + 3]; ++G__16581__i;}
G__16580 = new cljs.core.IndexedSeq(G__16581__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16580);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__5526__auto__ = (function (){var G__16511 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16511) : p1.call(null,G__16511));
})();
if(cljs.core.truth_(or__5526__auto__)){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (function (){var G__16513 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16513) : p2.call(null,G__16513));
})();
if(cljs.core.truth_(or__5526__auto____$1)){
return or__5526__auto____$1;
} else {
var G__16514 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16514) : p3.call(null,G__16514));
}
}
});
var sp3__2 = (function (x,y){
var or__5526__auto__ = (function (){var G__16516 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16516) : p1.call(null,G__16516));
})();
if(cljs.core.truth_(or__5526__auto__)){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (function (){var G__16518 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16518) : p2.call(null,G__16518));
})();
if(cljs.core.truth_(or__5526__auto____$1)){
return or__5526__auto____$1;
} else {
var or__5526__auto____$2 = (function (){var G__16520 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16520) : p3.call(null,G__16520));
})();
if(cljs.core.truth_(or__5526__auto____$2)){
return or__5526__auto____$2;
} else {
var or__5526__auto____$3 = (function (){var G__16522 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16522) : p1.call(null,G__16522));
})();
if(cljs.core.truth_(or__5526__auto____$3)){
return or__5526__auto____$3;
} else {
var or__5526__auto____$4 = (function (){var G__16524 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16524) : p2.call(null,G__16524));
})();
if(cljs.core.truth_(or__5526__auto____$4)){
return or__5526__auto____$4;
} else {
var G__16525 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16525) : p3.call(null,G__16525));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__5526__auto__ = (function (){var G__16527 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16527) : p1.call(null,G__16527));
})();
if(cljs.core.truth_(or__5526__auto__)){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (function (){var G__16529 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16529) : p2.call(null,G__16529));
})();
if(cljs.core.truth_(or__5526__auto____$1)){
return or__5526__auto____$1;
} else {
var or__5526__auto____$2 = (function (){var G__16531 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16531) : p3.call(null,G__16531));
})();
if(cljs.core.truth_(or__5526__auto____$2)){
return or__5526__auto____$2;
} else {
var or__5526__auto____$3 = (function (){var G__16533 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16533) : p1.call(null,G__16533));
})();
if(cljs.core.truth_(or__5526__auto____$3)){
return or__5526__auto____$3;
} else {
var or__5526__auto____$4 = (function (){var G__16535 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16535) : p2.call(null,G__16535));
})();
if(cljs.core.truth_(or__5526__auto____$4)){
return or__5526__auto____$4;
} else {
var or__5526__auto____$5 = (function (){var G__16537 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16537) : p3.call(null,G__16537));
})();
if(cljs.core.truth_(or__5526__auto____$5)){
return or__5526__auto____$5;
} else {
var or__5526__auto____$6 = (function (){var G__16539 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16539) : p1.call(null,G__16539));
})();
if(cljs.core.truth_(or__5526__auto____$6)){
return or__5526__auto____$6;
} else {
var or__5526__auto____$7 = (function (){var G__16541 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16541) : p2.call(null,G__16541));
})();
if(cljs.core.truth_(or__5526__auto____$7)){
return or__5526__auto____$7;
} else {
var G__16542 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16542) : p3.call(null,G__16542));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__16582__delegate = function (x,y,z,args){
var or__5526__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__5526__auto__)){
return or__5526__auto__;
} else {
return cljs.core.some(((function (or__5526__auto__){
return (function (p1__16199_SHARP_){
var or__5526__auto____$1 = (function (){var G__16544 = p1__16199_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16544) : p1.call(null,G__16544));
})();
if(cljs.core.truth_(or__5526__auto____$1)){
return or__5526__auto____$1;
} else {
var or__5526__auto____$2 = (function (){var G__16546 = p1__16199_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16546) : p2.call(null,G__16546));
})();
if(cljs.core.truth_(or__5526__auto____$2)){
return or__5526__auto____$2;
} else {
var G__16547 = p1__16199_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16547) : p3.call(null,G__16547));
}
}
});})(or__5526__auto__))
,args);
}
};
var G__16582 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16583__i = 0, G__16583__a = new Array(arguments.length -  3);
while (G__16583__i < G__16583__a.length) {G__16583__a[G__16583__i] = arguments[G__16583__i + 3]; ++G__16583__i;}
  args = new cljs.core.IndexedSeq(G__16583__a,0);
} 
return G__16582__delegate.call(this,x,y,z,args);};
G__16582.cljs$lang$maxFixedArity = 3;
G__16582.cljs$lang$applyTo = (function (arglist__16584){
var x = cljs.core.first(arglist__16584);
arglist__16584 = cljs.core.next(arglist__16584);
var y = cljs.core.first(arglist__16584);
arglist__16584 = cljs.core.next(arglist__16584);
var z = cljs.core.first(arglist__16584);
var args = cljs.core.rest(arglist__16584);
return G__16582__delegate(x,y,z,args);
});
G__16582.cljs$core$IFn$_invoke$arity$variadic = G__16582__delegate;
return G__16582;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__16585 = null;
if (arguments.length > 3) {
var G__16586__i = 0, G__16586__a = new Array(arguments.length -  3);
while (G__16586__i < G__16586__a.length) {G__16586__a[G__16586__i] = arguments[G__16586__i + 3]; ++G__16586__i;}
G__16585 = new cljs.core.IndexedSeq(G__16586__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16585);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__16587__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__16200_SHARP_){
var G__16563 = x;
return (p1__16200_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__16200_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16563) : p1__16200_SHARP_.call(null,G__16563));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__16201_SHARP_){
var or__5526__auto__ = (function (){var G__16565 = x;
return (p1__16201_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__16201_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16565) : p1__16201_SHARP_.call(null,G__16565));
})();
if(cljs.core.truth_(or__5526__auto__)){
return or__5526__auto__;
} else {
var G__16566 = y;
return (p1__16201_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__16201_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16566) : p1__16201_SHARP_.call(null,G__16566));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__16202_SHARP_){
var or__5526__auto__ = (function (){var G__16568 = x;
return (p1__16202_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__16202_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16568) : p1__16202_SHARP_.call(null,G__16568));
})();
if(cljs.core.truth_(or__5526__auto__)){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (function (){var G__16570 = y;
return (p1__16202_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__16202_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16570) : p1__16202_SHARP_.call(null,G__16570));
})();
if(cljs.core.truth_(or__5526__auto____$1)){
return or__5526__auto____$1;
} else {
var G__16571 = z;
return (p1__16202_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__16202_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16571) : p1__16202_SHARP_.call(null,G__16571));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__16588__delegate = function (x,y,z,args){
var or__5526__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__5526__auto__)){
return or__5526__auto__;
} else {
return cljs.core.some(((function (or__5526__auto__,ps__$1){
return (function (p1__16203_SHARP_){
return cljs.core.some(p1__16203_SHARP_,args);
});})(or__5526__auto__,ps__$1))
,ps__$1);
}
};
var G__16588 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16589__i = 0, G__16589__a = new Array(arguments.length -  3);
while (G__16589__i < G__16589__a.length) {G__16589__a[G__16589__i] = arguments[G__16589__i + 3]; ++G__16589__i;}
  args = new cljs.core.IndexedSeq(G__16589__a,0);
} 
return G__16588__delegate.call(this,x,y,z,args);};
G__16588.cljs$lang$maxFixedArity = 3;
G__16588.cljs$lang$applyTo = (function (arglist__16590){
var x = cljs.core.first(arglist__16590);
arglist__16590 = cljs.core.next(arglist__16590);
var y = cljs.core.first(arglist__16590);
arglist__16590 = cljs.core.next(arglist__16590);
var z = cljs.core.first(arglist__16590);
var args = cljs.core.rest(arglist__16590);
return G__16588__delegate(x,y,z,args);
});
G__16588.cljs$core$IFn$_invoke$arity$variadic = G__16588__delegate;
return G__16588;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__16591 = null;
if (arguments.length > 3) {
var G__16592__i = 0, G__16592__a = new Array(arguments.length -  3);
while (G__16592__i < G__16592__a.length) {G__16592__a[G__16592__i] = arguments[G__16592__i + 3]; ++G__16592__i;}
G__16591 = new cljs.core.IndexedSeq(G__16592__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16591);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__16587 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__16593__i = 0, G__16593__a = new Array(arguments.length -  3);
while (G__16593__i < G__16593__a.length) {G__16593__a[G__16593__i] = arguments[G__16593__i + 3]; ++G__16593__i;}
  ps = new cljs.core.IndexedSeq(G__16593__a,0);
} 
return G__16587__delegate.call(this,p1,p2,p3,ps);};
G__16587.cljs$lang$maxFixedArity = 3;
G__16587.cljs$lang$applyTo = (function (arglist__16594){
var p1 = cljs.core.first(arglist__16594);
arglist__16594 = cljs.core.next(arglist__16594);
var p2 = cljs.core.first(arglist__16594);
arglist__16594 = cljs.core.next(arglist__16594);
var p3 = cljs.core.first(arglist__16594);
var ps = cljs.core.rest(arglist__16594);
return G__16587__delegate(p1,p2,p3,ps);
});
G__16587.cljs$core$IFn$_invoke$arity$variadic = G__16587__delegate;
return G__16587;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__16595 = null;
if (arguments.length > 3) {
var G__16596__i = 0, G__16596__a = new Array(arguments.length -  3);
while (G__16596__i < G__16596__a.length) {G__16596__a[G__16596__i] = arguments[G__16596__i + 3]; ++G__16596__i;}
G__16595 = new cljs.core.IndexedSeq(G__16596__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__16595);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__16651 = null;
var G__16651__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16651__1 = (function (result){
var G__16637 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16637) : rf.call(null,G__16637));
});
var G__16651__2 = (function (result,input){
var G__16638 = result;
var G__16639 = (function (){var G__16640 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16640) : f.call(null,G__16640));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16638,G__16639) : rf.call(null,G__16638,G__16639));
});
var G__16651__3 = (function() { 
var G__16652__delegate = function (result,input,inputs){
var G__16641 = result;
var G__16642 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16641,G__16642) : rf.call(null,G__16641,G__16642));
};
var G__16652 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__16653__i = 0, G__16653__a = new Array(arguments.length -  2);
while (G__16653__i < G__16653__a.length) {G__16653__a[G__16653__i] = arguments[G__16653__i + 2]; ++G__16653__i;}
  inputs = new cljs.core.IndexedSeq(G__16653__a,0);
} 
return G__16652__delegate.call(this,result,input,inputs);};
G__16652.cljs$lang$maxFixedArity = 2;
G__16652.cljs$lang$applyTo = (function (arglist__16654){
var result = cljs.core.first(arglist__16654);
arglist__16654 = cljs.core.next(arglist__16654);
var input = cljs.core.first(arglist__16654);
var inputs = cljs.core.rest(arglist__16654);
return G__16652__delegate(result,input,inputs);
});
G__16652.cljs$core$IFn$_invoke$arity$variadic = G__16652__delegate;
return G__16652;
})()
;
G__16651 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__16651__0.call(this);
case 1:
return G__16651__1.call(this,result);
case 2:
return G__16651__2.call(this,result,input);
default:
var G__16655 = null;
if (arguments.length > 2) {
var G__16656__i = 0, G__16656__a = new Array(arguments.length -  2);
while (G__16656__i < G__16656__a.length) {G__16656__a[G__16656__i] = arguments[G__16656__i + 2]; ++G__16656__i;}
G__16655 = new cljs.core.IndexedSeq(G__16656__a,0);
}
return G__16651__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__16655);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16651.cljs$lang$maxFixedArity = 2;
G__16651.cljs$lang$applyTo = G__16651__3.cljs$lang$applyTo;
G__16651.cljs$core$IFn$_invoke$arity$0 = G__16651__0;
G__16651.cljs$core$IFn$_invoke$arity$1 = G__16651__1;
G__16651.cljs$core$IFn$_invoke$arity$2 = G__16651__2;
G__16651.cljs$core$IFn$_invoke$arity$variadic = G__16651__3.cljs$core$IFn$_invoke$arity$variadic;
return G__16651;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__6413__auto___16657 = size;
var i_16658 = (0);
while(true){
if((i_16658 < n__6413__auto___16657)){
cljs.core.chunk_append(b,(function (){var G__16643 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_16658);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16643) : f.call(null,G__16643));
})());

var G__16659 = (i_16658 + (1));
i_16658 = G__16659;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__16644 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16644) : f.call(null,G__16644));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__16645 = cljs.core.first(s1);
var G__16646 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16645,G__16646) : f.call(null,G__16645,G__16646));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__16647 = cljs.core.first(s1);
var G__16648 = cljs.core.first(s2);
var G__16649 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16647,G__16648,G__16649) : f.call(null,G__16647,G__16648,G__16649));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__16660__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__16597_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__16597_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__16660 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__16661__i = 0, G__16661__a = new Array(arguments.length -  4);
while (G__16661__i < G__16661__a.length) {G__16661__a[G__16661__i] = arguments[G__16661__i + 4]; ++G__16661__i;}
  colls = new cljs.core.IndexedSeq(G__16661__a,0);
} 
return G__16660__delegate.call(this,f,c1,c2,c3,colls);};
G__16660.cljs$lang$maxFixedArity = 4;
G__16660.cljs$lang$applyTo = (function (arglist__16662){
var f = cljs.core.first(arglist__16662);
arglist__16662 = cljs.core.next(arglist__16662);
var c1 = cljs.core.first(arglist__16662);
arglist__16662 = cljs.core.next(arglist__16662);
var c2 = cljs.core.first(arglist__16662);
arglist__16662 = cljs.core.next(arglist__16662);
var c3 = cljs.core.first(arglist__16662);
var colls = cljs.core.rest(arglist__16662);
return G__16660__delegate(f,c1,c2,c3,colls);
});
G__16660.cljs$core$IFn$_invoke$arity$variadic = G__16660__delegate;
return G__16660;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__16663 = null;
if (arguments.length > 4) {
var G__16664__i = 0, G__16664__a = new Array(arguments.length -  4);
while (G__16664__i < G__16664__a.length) {G__16664__a[G__16664__i] = arguments[G__16664__i + 4]; ++G__16664__i;}
G__16663 = new cljs.core.IndexedSeq(G__16664__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__16663);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__16673 = null;
var G__16673__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16673__1 = (function (result){
var G__16670 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16670) : rf.call(null,G__16670));
});
var G__16673__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__16671 = result;
var G__16672 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16671,G__16672) : rf.call(null,G__16671,G__16672));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__16673 = function(result,input){
switch(arguments.length){
case 0:
return G__16673__0.call(this);
case 1:
return G__16673__1.call(this,result);
case 2:
return G__16673__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16673.cljs$core$IFn$_invoke$arity$0 = G__16673__0;
G__16673.cljs$core$IFn$_invoke$arity$1 = G__16673__1;
G__16673.cljs$core$IFn$_invoke$arity$2 = G__16673__2;
return G__16673;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__16680 = null;
var G__16680__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16680__1 = (function (result){
var G__16677 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16677) : rf.call(null,G__16677));
});
var G__16680__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__16678 = result;
var G__16679 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16678,G__16679) : rf.call(null,G__16678,G__16679));
}
});
G__16680 = function(result,input){
switch(arguments.length){
case 0:
return G__16680__0.call(this);
case 1:
return G__16680__1.call(this,result);
case 2:
return G__16680__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16680.cljs$core$IFn$_invoke$arity$0 = G__16680__0;
G__16680.cljs$core$IFn$_invoke$arity$1 = G__16680__1;
G__16680.cljs$core$IFn$_invoke$arity$2 = G__16680__2;
return G__16680;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__16681 = (n__$1 - (1));
var G__16682 = cljs.core.rest(s);
n__$1 = G__16681;
coll__$1 = G__16682;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__16685 = cljs.core.next(s);
var G__16686 = cljs.core.next(lead);
s = G__16685;
lead = G__16686;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__16699 = null;
var G__16699__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16699__1 = (function (result){
var G__16693 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16693) : rf.call(null,G__16693));
});
var G__16699__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__5514__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__5514__auto__)){
var G__16694 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16694) : pred.call(null,G__16694));
} else {
return and__5514__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__16695 = result;
var G__16696 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16695,G__16696) : rf.call(null,G__16695,G__16696));
}
});
G__16699 = function(result,input){
switch(arguments.length){
case 0:
return G__16699__0.call(this);
case 1:
return G__16699__1.call(this,result);
case 2:
return G__16699__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16699.cljs$core$IFn$_invoke$arity$0 = G__16699__0;
G__16699.cljs$core$IFn$_invoke$arity$1 = G__16699__1;
G__16699.cljs$core$IFn$_invoke$arity$2 = G__16699__2;
return G__16699;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__5514__auto__ = s;
if(and__5514__auto__){
var G__16698 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__16698) : pred__$1.call(null,G__16698));
} else {
return and__5514__auto__;
}
})())){
var G__16700 = pred__$1;
var G__16701 = cljs.core.rest(s);
pred__$1 = G__16700;
coll__$1 = G__16701;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__16710 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16710) : f.call(null,G__16710));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__16713__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__16713 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__16714__i = 0, G__16714__a = new Array(arguments.length -  2);
while (G__16714__i < G__16714__a.length) {G__16714__a[G__16714__i] = arguments[G__16714__i + 2]; ++G__16714__i;}
  colls = new cljs.core.IndexedSeq(G__16714__a,0);
} 
return G__16713__delegate.call(this,c1,c2,colls);};
G__16713.cljs$lang$maxFixedArity = 2;
G__16713.cljs$lang$applyTo = (function (arglist__16715){
var c1 = cljs.core.first(arglist__16715);
arglist__16715 = cljs.core.next(arglist__16715);
var c2 = cljs.core.first(arglist__16715);
var colls = cljs.core.rest(arglist__16715);
return G__16713__delegate(c1,c2,colls);
});
G__16713.cljs$core$IFn$_invoke$arity$variadic = G__16713__delegate;
return G__16713;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__16716 = null;
if (arguments.length > 2) {
var G__16717__i = 0, G__16717__a = new Array(arguments.length -  2);
while (G__16717__i < G__16717__a.length) {G__16717__a[G__16717__i] = arguments[G__16717__i + 2]; ++G__16717__i;}
G__16716 = new cljs.core.IndexedSeq(G__16717__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__16716);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__16732 = null;
var G__16732__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16732__1 = (function (result){
var G__16725 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16725) : rf.call(null,G__16725));
});
var G__16732__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__16726 = result;
var G__16727 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16726,G__16727) : rf.call(null,G__16726,G__16727));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__16728 = sepr;
var G__16729 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16728,G__16729) : rf.call(null,G__16728,G__16729));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__16730 = result;
var G__16731 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16730,G__16731) : rf.call(null,G__16730,G__16731));
}
});
G__16732 = function(result,input){
switch(arguments.length){
case 0:
return G__16732__0.call(this);
case 1:
return G__16732__1.call(this,result);
case 2:
return G__16732__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16732.cljs$core$IFn$_invoke$arity$0 = G__16732__0;
G__16732.cljs$core$IFn$_invoke$arity$1 = G__16732__1;
G__16732.cljs$core$IFn$_invoke$arity$2 = G__16732__2;
return G__16732;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__16741__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__16741 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__16742__i = 0, G__16742__a = new Array(arguments.length -  1);
while (G__16742__i < G__16742__a.length) {G__16742__a[G__16742__i] = arguments[G__16742__i + 1]; ++G__16742__i;}
  colls = new cljs.core.IndexedSeq(G__16742__a,0);
} 
return G__16741__delegate.call(this,f,colls);};
G__16741.cljs$lang$maxFixedArity = 1;
G__16741.cljs$lang$applyTo = (function (arglist__16743){
var f = cljs.core.first(arglist__16743);
var colls = cljs.core.rest(arglist__16743);
return G__16741__delegate(f,colls);
});
G__16741.cljs$core$IFn$_invoke$arity$variadic = G__16741__delegate;
return G__16741;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__16744 = null;
if (arguments.length > 1) {
var G__16745__i = 0, G__16745__a = new Array(arguments.length -  1);
while (G__16745__i < G__16745__a.length) {G__16745__a[G__16745__i] = arguments[G__16745__i + 1]; ++G__16745__i;}
G__16744 = new cljs.core.IndexedSeq(G__16745__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__16744);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__16764 = null;
var G__16764__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16764__1 = (function (result){
var G__16758 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16758) : rf.call(null,G__16758));
});
var G__16764__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__16759 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16759) : pred.call(null,G__16759));
})())){
var G__16760 = result;
var G__16761 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16760,G__16761) : rf.call(null,G__16760,G__16761));
} else {
return result;
}
});
G__16764 = function(result,input){
switch(arguments.length){
case 0:
return G__16764__0.call(this);
case 1:
return G__16764__1.call(this,result);
case 2:
return G__16764__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16764.cljs$core$IFn$_invoke$arity$0 = G__16764__0;
G__16764.cljs$core$IFn$_invoke$arity$1 = G__16764__1;
G__16764.cljs$core$IFn$_invoke$arity$2 = G__16764__2;
return G__16764;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__6413__auto___16765 = size;
var i_16766 = (0);
while(true){
if((i_16766 < n__6413__auto___16765)){
if(cljs.core.truth_((function (){var G__16762 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_16766);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16762) : pred.call(null,G__16762));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_16766));
} else {
}

var G__16767 = (i_16766 + (1));
i_16766 = G__16767;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__16763 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16763) : pred.call(null,G__16763));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__16774 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__16774) : branch_QMARK_.call(null,G__16774));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__16775 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__16775) : children.call(null,G__16775));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__16776_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__16776_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__16779 = to;
if(G__16779){
var bit__6200__auto__ = (G__16779.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__6200__auto__) || (G__16779.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__16780 = to;
if(G__16780){
var bit__6200__auto__ = (G__16780.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__6200__auto__) || (G__16780.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__16782 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16782) : f.call(null,G__16782));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__16783__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__16783 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__16784__i = 0, G__16784__a = new Array(arguments.length -  4);
while (G__16784__i < G__16784__a.length) {G__16784__a[G__16784__i] = arguments[G__16784__i + 4]; ++G__16784__i;}
  colls = new cljs.core.IndexedSeq(G__16784__a,0);
} 
return G__16783__delegate.call(this,f,c1,c2,c3,colls);};
G__16783.cljs$lang$maxFixedArity = 4;
G__16783.cljs$lang$applyTo = (function (arglist__16785){
var f = cljs.core.first(arglist__16785);
arglist__16785 = cljs.core.next(arglist__16785);
var c1 = cljs.core.first(arglist__16785);
arglist__16785 = cljs.core.next(arglist__16785);
var c2 = cljs.core.first(arglist__16785);
arglist__16785 = cljs.core.next(arglist__16785);
var c3 = cljs.core.first(arglist__16785);
var colls = cljs.core.rest(arglist__16785);
return G__16783__delegate(f,c1,c2,c3,colls);
});
G__16783.cljs$core$IFn$_invoke$arity$variadic = G__16783__delegate;
return G__16783;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__16786 = null;
if (arguments.length > 4) {
var G__16787__i = 0, G__16787__a = new Array(arguments.length -  4);
while (G__16787__i < G__16787__a.length) {G__16787__a[G__16787__i] = arguments[G__16787__i + 4]; ++G__16787__i;}
G__16786 = new cljs.core.IndexedSeq(G__16787__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__16786);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__16789 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16789) : pred.call(null,G__16789));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__16804 = m__$1;
if(G__16804){
var bit__6207__auto__ = (G__16804.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__6207__auto__) || (G__16804.cljs$core$ILookup$)){
return true;
} else {
if((!G__16804.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__16804);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__16804);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__16805 = sentinel;
var G__16806 = m__$2;
var G__16807 = cljs.core.next(ks__$1);
sentinel = G__16805;
m__$1 = G__16806;
ks__$1 = G__16807;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__16808,v){
var vec__16813 = p__16808;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16813,(0),null);
var ks = cljs.core.nthnext(vec__16813,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__16814,f){
var vec__16852 = p__16814;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16852,(0),null);
var ks = cljs.core.nthnext(vec__16852,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16853 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16853) : f.call(null,G__16853));
})());
}
});
var update_in__4 = (function (m,p__16815,f,a){
var vec__16854 = p__16815;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16854,(0),null);
var ks = cljs.core.nthnext(vec__16854,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16855 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__16856 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16855,G__16856) : f.call(null,G__16855,G__16856));
})());
}
});
var update_in__5 = (function (m,p__16816,f,a,b){
var vec__16857 = p__16816;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16857,(0),null);
var ks = cljs.core.nthnext(vec__16857,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16858 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__16859 = a;
var G__16860 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16858,G__16859,G__16860) : f.call(null,G__16858,G__16859,G__16860));
})());
}
});
var update_in__6 = (function (m,p__16817,f,a,b,c){
var vec__16861 = p__16817;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16861,(0),null);
var ks = cljs.core.nthnext(vec__16861,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16862 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__16863 = a;
var G__16864 = b;
var G__16865 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__16862,G__16863,G__16864,G__16865) : f.call(null,G__16862,G__16863,G__16864,G__16865));
})());
}
});
var update_in__7 = (function() { 
var G__16867__delegate = function (m,p__16818,f,a,b,c,args){
var vec__16866 = p__16818;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16866,(0),null);
var ks = cljs.core.nthnext(vec__16866,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__16867 = function (m,p__16818,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__16868__i = 0, G__16868__a = new Array(arguments.length -  6);
while (G__16868__i < G__16868__a.length) {G__16868__a[G__16868__i] = arguments[G__16868__i + 6]; ++G__16868__i;}
  args = new cljs.core.IndexedSeq(G__16868__a,0);
} 
return G__16867__delegate.call(this,m,p__16818,f,a,b,c,args);};
G__16867.cljs$lang$maxFixedArity = 6;
G__16867.cljs$lang$applyTo = (function (arglist__16869){
var m = cljs.core.first(arglist__16869);
arglist__16869 = cljs.core.next(arglist__16869);
var p__16818 = cljs.core.first(arglist__16869);
arglist__16869 = cljs.core.next(arglist__16869);
var f = cljs.core.first(arglist__16869);
arglist__16869 = cljs.core.next(arglist__16869);
var a = cljs.core.first(arglist__16869);
arglist__16869 = cljs.core.next(arglist__16869);
var b = cljs.core.first(arglist__16869);
arglist__16869 = cljs.core.next(arglist__16869);
var c = cljs.core.first(arglist__16869);
var args = cljs.core.rest(arglist__16869);
return G__16867__delegate(m,p__16818,f,a,b,c,args);
});
G__16867.cljs$core$IFn$_invoke$arity$variadic = G__16867__delegate;
return G__16867;
})()
;
update_in = function(m,p__16818,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__16818,f);
case 4:
return update_in__4.call(this,m,p__16818,f,a);
case 5:
return update_in__5.call(this,m,p__16818,f,a,b);
case 6:
return update_in__6.call(this,m,p__16818,f,a,b,c);
default:
var G__16870 = null;
if (arguments.length > 6) {
var G__16871__i = 0, G__16871__a = new Array(arguments.length -  6);
while (G__16871__i < G__16871__a.length) {G__16871__a[G__16871__i] = arguments[G__16871__i + 6]; ++G__16871__i;}
G__16870 = new cljs.core.IndexedSeq(G__16871__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__16818,f,a,b,c, G__16870);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16882 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16882) : f.call(null,G__16882));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16883 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__16884 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16883,G__16884) : f.call(null,G__16883,G__16884));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16885 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__16886 = x;
var G__16887 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16885,G__16886,G__16887) : f.call(null,G__16885,G__16886,G__16887));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16888 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__16889 = x;
var G__16890 = y;
var G__16891 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__16888,G__16889,G__16890,G__16891) : f.call(null,G__16888,G__16889,G__16890,G__16891));
})());
});
var update__7 = (function() { 
var G__16892__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__16892 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__16893__i = 0, G__16893__a = new Array(arguments.length -  6);
while (G__16893__i < G__16893__a.length) {G__16893__a[G__16893__i] = arguments[G__16893__i + 6]; ++G__16893__i;}
  more = new cljs.core.IndexedSeq(G__16893__a,0);
} 
return G__16892__delegate.call(this,m,k,f,x,y,z,more);};
G__16892.cljs$lang$maxFixedArity = 6;
G__16892.cljs$lang$applyTo = (function (arglist__16894){
var m = cljs.core.first(arglist__16894);
arglist__16894 = cljs.core.next(arglist__16894);
var k = cljs.core.first(arglist__16894);
arglist__16894 = cljs.core.next(arglist__16894);
var f = cljs.core.first(arglist__16894);
arglist__16894 = cljs.core.next(arglist__16894);
var x = cljs.core.first(arglist__16894);
arglist__16894 = cljs.core.next(arglist__16894);
var y = cljs.core.first(arglist__16894);
arglist__16894 = cljs.core.next(arglist__16894);
var z = cljs.core.first(arglist__16894);
var more = cljs.core.rest(arglist__16894);
return G__16892__delegate(m,k,f,x,y,z,more);
});
G__16892.cljs$core$IFn$_invoke$arity$variadic = G__16892__delegate;
return G__16892;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__16895 = null;
if (arguments.length > 6) {
var G__16896__i = 0, G__16896__a = new Array(arguments.length -  6);
while (G__16896__i < G__16896__a.length) {G__16896__a[G__16896__i] = arguments[G__16896__i + 6]; ++G__16896__i;}
G__16895 = new cljs.core.IndexedSeq(G__16896__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__16895);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__16897 = (ll - (5));
var G__16898 = r;
ll = G__16897;
ret = G__16898;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__16903 = cljs.core.pv_aget(node,(0));
var G__16904 = (level - (5));
node = G__16903;
level = G__16904;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__16905 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__16906 = (level - (5));
node = G__16905;
level = G__16906;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__16916 = init__$2;
var G__16917 = (j + i);
var G__16918 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16916,G__16917,G__16918) : f.call(null,G__16916,G__16917,G__16918));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__16929 = (j + (1));
var G__16930 = init__$3;
j = G__16929;
init__$2 = G__16930;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__16919 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16919) : cljs.core.deref.call(null,G__16919));
} else {
var G__16931 = (i + len);
var G__16932 = init__$2;
i = G__16931;
init__$1 = G__16932;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5947__auto__ = self__.__hash;
if(!((h__5947__auto__ == null))){
return h__5947__auto__;
} else {
var h__5947__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5947__auto____$1;

return h__5947__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__16920 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__16920) : cljs.core.tv_editable_root.call(null,G__16920));
})(),(function (){var G__16921 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__16921) : cljs.core.tv_editable_tail.call(null,G__16921));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__16922 = init__$2;
var G__16923 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16922,G__16923) : f.call(null,G__16922,G__16923));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__16933 = (j + (1));
var G__16934 = init__$3;
j = G__16933;
init__$2 = G__16934;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__16924 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16924) : cljs.core.deref.call(null,G__16924));
} else {
var G__16935 = (i + len);
var G__16936 = init__$2;
i = G__16935;
init__$1 = G__16936;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__16925 = coll__$1;
var G__16926 = cljs.core.first_array_for_longvec(coll__$1);
var G__16927 = (0);
var G__16928 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16925,G__16926,G__16927,G__16928) : cljs.core.chunked_seq.call(null,G__16925,G__16926,G__16927,G__16928));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__6413__auto___16937 = len;
var i_16938 = (0);
while(true){
if((i_16938 < n__6413__auto___16937)){
(new_tail[i_16938] = (self__.tail[i_16938]));

var G__16939 = (i_16938 + (1));
i_16938 = G__16939;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__16940 = null;
var G__16940__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__16940__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__16940 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16940__2.call(this,self__,k);
case 3:
return G__16940__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16940.cljs$core$IFn$_invoke$arity$2 = G__16940__2;
G__16940.cljs$core$IFn$_invoke$arity$3 = G__16940__3;
return G__16940;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args16915){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16915)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__16941 = (i + (1));
var G__16942 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__16941;
out = G__16942;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6504__auto__ = this;
return cljs.core.es6_iterator(this__6504__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__16943__i = 0, G__16943__a = new Array(arguments.length -  0);
while (G__16943__i < G__16943__a.length) {G__16943__a[G__16943__i] = arguments[G__16943__i + 0]; ++G__16943__i;}
  args = new cljs.core.IndexedSeq(G__16943__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__16944){
var args = cljs.core.seq(arglist__16944);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__16945 = self__.vec;
var G__16946 = self__.node;
var G__16947 = self__.i;
var G__16948 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16945,G__16946,G__16947,G__16948) : cljs.core.chunked_seq.call(null,G__16945,G__16946,G__16947,G__16948));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5947__auto__ = self__.__hash;
if(!((h__5947__auto__ == null))){
return h__5947__auto__;
} else {
var h__5947__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5947__auto____$1;

return h__5947__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__16949 = self__.vec;
var G__16950 = (self__.i + self__.off);
var G__16951 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__16949,G__16950,G__16951) : cljs.core.subvec.call(null,G__16949,G__16950,G__16951));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__16952 = self__.vec;
var G__16953 = (self__.i + self__.off);
var G__16954 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__16952,G__16953,G__16954) : cljs.core.subvec.call(null,G__16952,G__16953,G__16954));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__16955 = self__.vec;
var G__16956 = self__.node;
var G__16957 = self__.i;
var G__16958 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16955,G__16956,G__16957,G__16958) : cljs.core.chunked_seq.call(null,G__16955,G__16956,G__16957,G__16958));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__16959 = self__.vec;
var G__16960 = cljs.core.unchecked_array_for(self__.vec,end);
var G__16961 = end;
var G__16962 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16959,G__16960,G__16961,G__16962) : cljs.core.chunked_seq.call(null,G__16959,G__16960,G__16961,G__16962));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__16963 = self__.vec;
var G__16964 = self__.node;
var G__16965 = self__.i;
var G__16966 = self__.off;
var G__16967 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__16963,G__16964,G__16965,G__16966,G__16967) : cljs.core.chunked_seq.call(null,G__16963,G__16964,G__16965,G__16966,G__16967));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__16968 = self__.vec;
var G__16969 = cljs.core.unchecked_array_for(self__.vec,end);
var G__16970 = end;
var G__16971 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16968,G__16969,G__16970,G__16971) : cljs.core.chunked_seq.call(null,G__16968,G__16969,G__16970,G__16971));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6504__auto__ = this;
return cljs.core.es6_iterator(this__6504__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__16973 = self__.meta;
var G__16974 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__16975 = self__.start;
var G__16976 = (function (){var x__5843__auto__ = self__.end;
var y__5844__auto__ = (v_pos + (1));
return ((x__5843__auto__ > y__5844__auto__) ? x__5843__auto__ : y__5844__auto__);
})();
var G__16977 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__16973,G__16974,G__16975,G__16976,G__16977) : cljs.core.build_subvec.call(null,G__16973,G__16974,G__16975,G__16976,G__16977));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__16978 = self__.meta;
var G__16979 = self__.v;
var G__16980 = self__.start;
var G__16981 = (self__.end - (1));
var G__16982 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__16978,G__16979,G__16980,G__16981,G__16982) : cljs.core.build_subvec.call(null,G__16978,G__16979,G__16980,G__16981,G__16982));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5947__auto__ = self__.__hash;
if(!((h__5947__auto__ == null))){
return h__5947__auto__;
} else {
var h__5947__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5947__auto____$1;

return h__5947__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__16984 = meta__$1;
var G__16985 = self__.v;
var G__16986 = self__.start;
var G__16987 = self__.end;
var G__16988 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__16984,G__16985,G__16986,G__16987,G__16988) : cljs.core.build_subvec.call(null,G__16984,G__16985,G__16986,G__16987,G__16988));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__16989 = self__.meta;
var G__16990 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__16991 = self__.start;
var G__16992 = (self__.end + (1));
var G__16993 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__16989,G__16990,G__16991,G__16992,G__16993) : cljs.core.build_subvec.call(null,G__16989,G__16990,G__16991,G__16992,G__16993));
});

cljs.core.Subvec.prototype.call = (function() {
var G__16994 = null;
var G__16994__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__16994__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__16994 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16994__2.call(this,self__,k);
case 3:
return G__16994__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16994.cljs$core$IFn$_invoke$arity$2 = G__16994__2;
G__16994.cljs$core$IFn$_invoke$arity$3 = G__16994__3;
return G__16994;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args16972){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16972)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6504__auto__ = this;
return cljs.core.es6_iterator(this__6504__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__16995 = meta;
var G__16996 = v.v;
var G__16997 = (v.start + start);
var G__16998 = (v.start + end);
var G__16999 = __hash;
meta = G__16995;
v = G__16996;
start = G__16997;
end = G__16998;
__hash = G__16999;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj17006 = {};
return obj17006;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__17014 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__17015 = (level - (5));
node = G__17014;
level = G__17015;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__17019 = null;
var G__17019__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__17019__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__17019 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__17019__2.call(this,self__,k);
case 3:
return G__17019__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17019.cljs$core$IFn$_invoke$arity$2 = G__17019__2;
G__17019.cljs$core$IFn$_invoke$arity$3 = G__17019__3;
return G__17019;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args17016){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17016)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5947__auto__ = self__.__hash;
if(!((h__5947__auto__ == null))){
return h__5947__auto__;
} else {
var h__5947__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5947__auto____$1;

return h__5947__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6504__auto__ = this;
return cljs.core.es6_iterator(this__6504__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5947__auto__ = self__.__hash;
if(!((h__5947__auto__ == null))){
return h__5947__auto__;
} else {
var h__5947__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5947__auto____$1;

return h__5947__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__5526__auto__ = self__.front;
if(cljs.core.truth_(or__5526__auto__)){
return or__5526__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__5526__auto__ = self__.rear;
if(cljs.core.truth_(or__5526__auto__)){
return or__5526__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6504__auto__ = this;
return cljs.core.es6_iterator(this__6504__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__17020 = (i + incr);
i = G__17020;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__17021 = (i + (1));
var G__17022 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__17021;
out = G__17022;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj17026 = {};
return obj17026;
})();
var l = ks.length;
var i_17027 = (0);
while(true){
if((i_17027 < l)){
var k_17028 = (ks[i_17027]);
(new_obj[k_17028] = (obj[k_17028]));

var G__17029 = (i_17027 + (1));
i_17027 = G__17029;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__5514__auto__ = (function (){var G__17033 = k;
return goog.isString(G__17033);
})();
if(cljs.core.truth_(and__5514__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__5514__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__17034 = init__$1;
var G__17035 = k;
var G__17036 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17034,G__17035,G__17036) : f.call(null,G__17034,G__17035,G__17036));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__17037 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17037) : cljs.core.deref.call(null,G__17037));
} else {
var G__17043 = cljs.core.rest(keys__$1);
var G__17044 = init__$2;
keys__$1 = G__17043;
init__$1 = G__17044;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5947__auto__ = self__.__hash;
if(!((h__5947__auto__ == null))){
return h__5947__auto__;
} else {
var h__5947__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__5947__auto____$1;

return h__5947__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__5514__auto__ = (function (){var G__17039 = k;
return goog.isString(G__17039);
})();
if(cljs.core.truth_(and__5514__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__5514__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__17040 = k;
return goog.isString(G__17040);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__5514__auto__ = (function (){var G__17042 = k;
return goog.isString(G__17042);
})();
if(cljs.core.truth_(and__5514__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__5514__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__17030_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__17030_SHARP_,(self__.strobj[p1__17030_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__17045 = null;
var G__17045__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__17045__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__17045 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__17045__2.call(this,self__,k);
case 3:
return G__17045__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17045.cljs$core$IFn$_invoke$arity$2 = G__17045__2;
G__17045.cljs$core$IFn$_invoke$arity$3 = G__17045__3;
return G__17045;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args17031){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17031)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj17047 = {};
return obj17047;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__17048 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17048,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17048,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__17049 = (i + (2));
i = G__17049;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__17050 = (i + (2));
i = G__17050;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__17051 = (i + (2));
i = G__17051;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__17052 = (i + (2));
i = G__17052;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__17053 = (i + (2));
i = G__17053;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__5526__auto__ = (function (){var G__17057 = k;
return goog.isString(G__17057);
})();
if(cljs.core.truth_(or__5526__auto__)){
return or__5526__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_17058 = (0);
while(true){
if((i_17058 < l)){
(narr[i_17058] = (arr[i_17058]));

var G__17059 = (i_17058 + (1));
i_17058 = G__17059;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6504__auto__ = this;
return cljs.core.es6_iterator(this__6504__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__17061 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__17061) : cljs.core.keys.call(null,G__17061));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__17062 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__17062) : cljs.core.vals.call(null,G__17062));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__17063 = cljs.core.seq(coll);
var chunk__17064 = null;
var count__17065 = (0);
var i__17066 = (0);
while(true){
if((i__17066 < count__17065)){
var vec__17067 = chunk__17064.cljs$core$IIndexed$_nth$arity$2(null,i__17066);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17067,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17067,(1),null);
var G__17068_17081 = v;
var G__17069_17082 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17068_17081,G__17069_17082) : f.call(null,G__17068_17081,G__17069_17082));

var G__17083 = seq__17063;
var G__17084 = chunk__17064;
var G__17085 = count__17065;
var G__17086 = (i__17066 + (1));
seq__17063 = G__17083;
chunk__17064 = G__17084;
count__17065 = G__17085;
i__17066 = G__17086;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__17063);
if(temp__4126__auto__){
var seq__17063__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__17063__$1)){
var c__6313__auto__ = cljs.core.chunk_first(seq__17063__$1);
var G__17087 = cljs.core.chunk_rest(seq__17063__$1);
var G__17088 = c__6313__auto__;
var G__17089 = cljs.core.count(c__6313__auto__);
var G__17090 = (0);
seq__17063 = G__17087;
chunk__17064 = G__17088;
count__17065 = G__17089;
i__17066 = G__17090;
continue;
} else {
var vec__17070 = cljs.core.first(seq__17063__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17070,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17070,(1),null);
var G__17071_17091 = v;
var G__17072_17092 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17071_17091,G__17072_17092) : f.call(null,G__17071_17091,G__17072_17092));

var G__17093 = cljs.core.next(seq__17063__$1);
var G__17094 = null;
var G__17095 = (0);
var G__17096 = (0);
seq__17063 = G__17093;
chunk__17064 = G__17094;
count__17065 = G__17095;
i__17066 = G__17096;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__17073 = init__$1;
var G__17074 = (self__.arr[i]);
var G__17075 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17073,G__17074,G__17075) : f.call(null,G__17073,G__17074,G__17075));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__17076 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17076) : cljs.core.deref.call(null,G__17076));
} else {
var G__17097 = (i + (2));
var G__17098 = init__$2;
i = G__17097;
init__$1 = G__17098;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5947__auto__ = self__.__hash;
if(!((h__5947__auto__ == null))){
return h__5947__auto__;
} else {
var h__5947__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__5947__auto____$1;

return h__5947__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__17077 = other;
if(G__17077){
var bit__6200__auto__ = (G__17077.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__6200__auto__) || (G__17077.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__17099 = (i + (2));
i = G__17099;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj17079 = {};
return obj17079;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__17100 = (s + (2));
var G__17101 = d;
s = G__17100;
d = G__17101;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__17102 = (s + (2));
var G__17103 = (d + (2));
s = G__17102;
d = G__17103;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__17080 = cljs.core.aclone(self__.arr);
(G__17080[(idx + (1))] = v);

return G__17080;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__17104 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__17105 = cljs.core.next(es);
ret = G__17104;
es = G__17105;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__17106 = null;
var G__17106__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__17106__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__17106 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__17106__2.call(this,self__,k);
case 3:
return G__17106__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17106.cljs$core$IFn$_invoke$arity$2 = G__17106__2;
G__17106.cljs$core$IFn$_invoke$arity$3 = G__17106__3;
return G__17106;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args17060){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17060)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__17107 = (i + (2));
var G__17108 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__17107;
ret = G__17108;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6504__auto__ = this;
return cljs.core.es6_iterator(this__6504__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__17109_17117 = self__.arr;
G__17109_17117.pop();

G__17109_17117.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__17110 = self__.len;
var G__17111 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__17110,G__17111) : cljs.core.array__GT_transient_hash_map.call(null,G__17110,G__17111));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__17112 = o;
if(G__17112){
var bit__6207__auto__ = (G__17112.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__6207__auto__) || (G__17112.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__17112.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__17112);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__17112);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__17113 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__17113) : cljs.core.key.call(null,G__17113));
})(),(function (){var G__17114 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__17114) : cljs.core.val.call(null,G__17114));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__17118 = cljs.core.next(es);
var G__17119 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__17115 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__17115) : cljs.core.key.call(null,G__17115));
})(),(function (){var G__17116 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__17116) : cljs.core.val.call(null,G__17116));
})());
es = G__17118;
tcoll__$2 = G__17119;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__17120 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__17121 = (i + (2));
out = G__17120;
i = G__17121;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__17124 = cljs.core.aclone(arr);
(G__17124[i] = a);

return G__17124;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__17125 = cljs.core.aclone(arr);
(G__17125[i] = a);

(G__17125[j] = b);

return G__17125;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__17130 = init__$1;
var G__17131 = k;
var G__17132 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17130,G__17131,G__17132) : f.call(null,G__17130,G__17131,G__17132));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__17133 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17133) : cljs.core.deref.call(null,G__17133));
} else {
var G__17134 = (i + (2));
var G__17135 = init__$2;
i = G__17134;
init__$1 = G__17135;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__17136 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__17136) : cljs.core.create_inode_seq.call(null,G__17136));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_17150 = (0);
var j_17151 = (0);
while(true){
if((i_17150 < (32))){
if((((self__.bitmap >>> i_17150) & (1)) === (0))){
var G__17152 = (i_17150 + (1));
var G__17153 = j_17151;
i_17150 = G__17152;
j_17151 = G__17153;
continue;
} else {
(nodes[i_17150] = ((!(((self__.arr[j_17151]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_17151])),(self__.arr[j_17151]),(self__.arr[(j_17151 + (1))]),added_leaf_QMARK_):(self__.arr[(j_17151 + (1))])));

var G__17154 = (i_17150 + (1));
var G__17155 = (j_17151 + (2));
i_17150 = G__17154;
j_17151 = G__17155;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__17137 = edit__$1;
var G__17138 = (shift + (5));
var G__17139 = key_or_nil;
var G__17140 = val_or_node;
var G__17141 = hash;
var G__17142 = key;
var G__17143 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__17137,G__17138,G__17139,G__17140,G__17141,G__17142,G__17143) : cljs.core.create_node.call(null,G__17137,G__17138,G__17139,G__17140,G__17141,G__17142,G__17143));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_17156 = (0);
var j_17157 = (0);
while(true){
if((i_17156 < (32))){
if((((self__.bitmap >>> i_17156) & (1)) === (0))){
var G__17158 = (i_17156 + (1));
var G__17159 = j_17157;
i_17156 = G__17158;
j_17157 = G__17159;
continue;
} else {
(nodes[i_17156] = ((!(((self__.arr[j_17157]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_17157])),(self__.arr[j_17157]),(self__.arr[(j_17157 + (1))]),added_leaf_QMARK_):(self__.arr[(j_17157 + (1))])));

var G__17160 = (i_17156 + (1));
var G__17161 = (j_17157 + (2));
i_17156 = G__17160;
j_17157 = G__17161;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__17144 = (shift + (5));
var G__17145 = key_or_nil;
var G__17146 = val_or_node;
var G__17147 = hash;
var G__17148 = key;
var G__17149 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__17144,G__17145,G__17146,G__17147,G__17148,G__17149) : cljs.core.create_node.call(null,G__17144,G__17145,G__17146,G__17147,G__17148,G__17149));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__17162 = (i + (1));
var G__17163 = (j + (2));
var G__17164 = (bitmap | ((1) << i));
i = G__17162;
j = G__17163;
bitmap = G__17164;
continue;
} else {
var G__17165 = (i + (1));
var G__17166 = j;
var G__17167 = bitmap;
i = G__17165;
j = G__17166;
bitmap = G__17167;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__17168 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__17168) : cljs.core.create_array_node_seq.call(null,G__17168));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__17169 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17169) : cljs.core.deref.call(null,G__17169));
} else {
var G__17170 = (i + (1));
var G__17171 = init__$2;
i = G__17170;
init__$1 = G__17171;
continue;
}
} else {
var G__17172 = (i + (1));
var G__17173 = init__$1;
i = G__17172;
init__$1 = G__17173;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__17174 = (i + (2));
i = G__17174;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__17175 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__17175) : cljs.core.create_inode_seq.call(null,G__17175));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5947__auto__ = self__.__hash;
if(!((h__5947__auto__ == null))){
return h__5947__auto__;
} else {
var h__5947__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5947__auto____$1;

return h__5947__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__17176 = self__.nodes;
var G__17177 = (self__.i + (2));
var G__17178 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__17176,G__17177,G__17178) : cljs.core.create_inode_seq.call(null,G__17176,G__17177,G__17178));
} else {
var G__17179 = self__.nodes;
var G__17180 = self__.i;
var G__17181 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__17179,G__17180,G__17181) : cljs.core.create_inode_seq.call(null,G__17179,G__17180,G__17181));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6504__auto__ = this;
return cljs.core.es6_iterator(this__6504__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__17185 = (j + (2));
j = G__17185;
continue;
}
} else {
var G__17186 = (j + (2));
j = G__17186;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5947__auto__ = self__.__hash;
if(!((h__5947__auto__ == null))){
return h__5947__auto__;
} else {
var h__5947__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5947__auto____$1;

return h__5947__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__17187 = null;
var G__17188 = self__.nodes;
var G__17189 = self__.i;
var G__17190 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__17187,G__17188,G__17189,G__17190) : cljs.core.create_array_node_seq.call(null,G__17187,G__17188,G__17189,G__17190));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6504__auto__ = this;
return cljs.core.es6_iterator(this__6504__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__17195 = (j + (1));
j = G__17195;
continue;
}
} else {
var G__17196 = (j + (1));
j = G__17196;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__17198 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__17198) : cljs.core.keys.call(null,G__17198));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__17199 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__17199) : cljs.core.vals.call(null,G__17199));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__17200 = cljs.core.seq(coll);
var chunk__17201 = null;
var count__17202 = (0);
var i__17203 = (0);
while(true){
if((i__17203 < count__17202)){
var vec__17204 = chunk__17201.cljs$core$IIndexed$_nth$arity$2(null,i__17203);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17204,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17204,(1),null);
var G__17205_17216 = v;
var G__17206_17217 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17205_17216,G__17206_17217) : f.call(null,G__17205_17216,G__17206_17217));

var G__17218 = seq__17200;
var G__17219 = chunk__17201;
var G__17220 = count__17202;
var G__17221 = (i__17203 + (1));
seq__17200 = G__17218;
chunk__17201 = G__17219;
count__17202 = G__17220;
i__17203 = G__17221;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__17200);
if(temp__4126__auto__){
var seq__17200__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__17200__$1)){
var c__6313__auto__ = cljs.core.chunk_first(seq__17200__$1);
var G__17222 = cljs.core.chunk_rest(seq__17200__$1);
var G__17223 = c__6313__auto__;
var G__17224 = cljs.core.count(c__6313__auto__);
var G__17225 = (0);
seq__17200 = G__17222;
chunk__17201 = G__17223;
count__17202 = G__17224;
i__17203 = G__17225;
continue;
} else {
var vec__17207 = cljs.core.first(seq__17200__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17207,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17207,(1),null);
var G__17208_17226 = v;
var G__17209_17227 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17208_17226,G__17209_17227) : f.call(null,G__17208_17226,G__17209_17227));

var G__17228 = cljs.core.next(seq__17200__$1);
var G__17229 = null;
var G__17230 = (0);
var G__17231 = (0);
seq__17200 = G__17228;
chunk__17201 = G__17229;
count__17202 = G__17230;
i__17203 = G__17231;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__17210 = init;
var G__17211 = null;
var G__17212 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17210,G__17211,G__17212) : f.call(null,G__17210,G__17211,G__17212));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__17213 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17213) : cljs.core.deref.call(null,G__17213));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5947__auto__ = self__.__hash;
if(!((h__5947__auto__ == null))){
return h__5947__auto__;
} else {
var h__5947__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__5947__auto____$1;

return h__5947__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj17215 = {};
return obj17215;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__17232 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__17233 = cljs.core.next(es);
ret = G__17232;
es = G__17233;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__17234 = null;
var G__17234__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__17234__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__17234 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__17234__2.call(this,self__,k);
case 3:
return G__17234__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17234.cljs$core$IFn$_invoke$arity$2 = G__17234__2;
G__17234.cljs$core$IFn$_invoke$arity$3 = G__17234__3;
return G__17234;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args17197){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17197)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__17235 = (i + (2));
var G__17236 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__17235;
ret = G__17236;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__17237 = (i + (1));
var G__17238 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__17237;
out = G__17238;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6504__auto__ = this;
return cljs.core.es6_iterator(this__6504__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__17239 = o;
if(G__17239){
var bit__6207__auto__ = (G__17239.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__6207__auto__) || (G__17239.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__17239.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__17239);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__17239);
}
})()){
return tcoll.assoc_BANG_((function (){var G__17240 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__17240) : cljs.core.key.call(null,G__17240));
})(),(function (){var G__17241 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__17241) : cljs.core.val.call(null,G__17241));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__17244 = cljs.core.next(es);
var G__17245 = tcoll__$1.assoc_BANG_((function (){var G__17242 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__17242) : cljs.core.key.call(null,G__17242));
})(),(function (){var G__17243 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__17243) : cljs.core.val.call(null,G__17243));
})());
es = G__17244;
tcoll__$1 = G__17245;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__17246 = ((ascending_QMARK_)?t.left:t.right);
var G__17247 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__17246;
stack__$1 = G__17247;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5947__auto__ = self__.__hash;
if(!((h__5947__auto__ == null))){
return h__5947__auto__;
} else {
var h__5947__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5947__auto____$1;

return h__5947__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6504__auto__ = this;
return cljs.core.es6_iterator(this__6504__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__17260 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17260) : cljs.core.deref.call(null,G__17260));
} else {
var init__$2 = (function (){var G__17261 = init__$1;
var G__17262 = node.key;
var G__17263 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17261,G__17262,G__17263) : f.call(null,G__17261,G__17262,G__17263));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__17264 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17264) : cljs.core.deref.call(null,G__17264));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__17265 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17265) : cljs.core.deref.call(null,G__17265));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5947__auto__ = self__.__hash;
if(!((h__5947__auto__ == null))){
return h__5947__auto__;
} else {
var h__5947__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5947__auto____$1;

return h__5947__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__17267 = null;
var G__17267__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__17267__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__17267 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__17267__2.call(this,self__,k);
case 3:
return G__17267__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17267.cljs$core$IFn$_invoke$arity$2 = G__17267__2;
G__17267.cljs$core$IFn$_invoke$arity$3 = G__17267__3;
return G__17267;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args17266){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17266)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6504__auto__ = this;
return cljs.core.es6_iterator(this__6504__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5947__auto__ = self__.__hash;
if(!((h__5947__auto__ == null))){
return h__5947__auto__;
} else {
var h__5947__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__5947__auto____$1;

return h__5947__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__17269 = null;
var G__17269__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__17269__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__17269 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__17269__2.call(this,self__,k);
case 3:
return G__17269__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17269.cljs$core$IFn$_invoke$arity$2 = G__17269__2;
G__17269.cljs$core$IFn$_invoke$arity$3 = G__17269__3;
return G__17269;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args17268){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17268)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6504__auto__ = this;
return cljs.core.es6_iterator(this__6504__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__17282 = k;
var G__17283 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__17282,G__17283) : comp.call(null,G__17282,G__17283));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__17302 = k;
var G__17303 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__17302,G__17303) : comp.call(null,G__17302,G__17303));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__17314 = k;
var G__17315 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__17314,G__17315) : comp.call(null,G__17314,G__17315));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__17317 = cljs.core.seq(coll);
var chunk__17318 = null;
var count__17319 = (0);
var i__17320 = (0);
while(true){
if((i__17320 < count__17319)){
var vec__17321 = chunk__17318.cljs$core$IIndexed$_nth$arity$2(null,i__17320);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17321,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17321,(1),null);
var G__17322_17334 = v;
var G__17323_17335 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17322_17334,G__17323_17335) : f.call(null,G__17322_17334,G__17323_17335));

var G__17336 = seq__17317;
var G__17337 = chunk__17318;
var G__17338 = count__17319;
var G__17339 = (i__17320 + (1));
seq__17317 = G__17336;
chunk__17318 = G__17337;
count__17319 = G__17338;
i__17320 = G__17339;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__17317);
if(temp__4126__auto__){
var seq__17317__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__17317__$1)){
var c__6313__auto__ = cljs.core.chunk_first(seq__17317__$1);
var G__17340 = cljs.core.chunk_rest(seq__17317__$1);
var G__17341 = c__6313__auto__;
var G__17342 = cljs.core.count(c__6313__auto__);
var G__17343 = (0);
seq__17317 = G__17340;
chunk__17318 = G__17341;
count__17319 = G__17342;
i__17320 = G__17343;
continue;
} else {
var vec__17324 = cljs.core.first(seq__17317__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17324,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17324,(1),null);
var G__17325_17344 = v;
var G__17326_17345 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17325_17344,G__17326_17345) : f.call(null,G__17325_17344,G__17326_17345));

var G__17346 = cljs.core.next(seq__17317__$1);
var G__17347 = null;
var G__17348 = (0);
var G__17349 = (0);
seq__17317 = G__17346;
chunk__17318 = G__17347;
count__17319 = G__17348;
i__17320 = G__17349;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__17327 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__17327) : cljs.core.keys.call(null,G__17327));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__17328 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__17328) : cljs.core.vals.call(null,G__17328));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__17329 = k;
var G__17330 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__17329,G__17330) : self__.comp.call(null,G__17329,G__17330));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__17350 = t.left;
t = G__17350;
continue;
} else {
var G__17351 = t.right;
t = G__17351;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5947__auto__ = self__.__hash;
if(!((h__5947__auto__ == null))){
return h__5947__auto__;
} else {
var h__5947__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__5947__auto____$1;

return h__5947__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__17352 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__17353 = cljs.core.next(es);
ret = G__17352;
es = G__17353;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__17354 = null;
var G__17354__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__17354__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__17354 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__17354__2.call(this,self__,k);
case 3:
return G__17354__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17354.cljs$core$IFn$_invoke$arity$2 = G__17354__2;
G__17354.cljs$core$IFn$_invoke$arity$3 = G__17354__3;
return G__17354;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args17316){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17316)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__17331 = k;
var G__17332 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__17331,G__17332) : self__.comp.call(null,G__17331,G__17332));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__17355 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__17356 = t.left;
stack = G__17355;
t = G__17356;
continue;
} else {
var G__17357 = stack;
var G__17358 = t.right;
stack = G__17357;
t = G__17358;
continue;
}
} else {
if((c > (0))){
var G__17359 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__17360 = t.right;
stack = G__17359;
t = G__17360;
continue;
} else {
var G__17361 = stack;
var G__17362 = t.left;
stack = G__17361;
t = G__17362;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__17333 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__17333) : cljs.core.key.call(null,G__17333));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6504__auto__ = this;
return cljs.core.es6_iterator(this__6504__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__17363 = cljs.core.nnext(in$);
var G__17364 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__17363;
out = G__17364;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__17365__i = 0, G__17365__a = new Array(arguments.length -  0);
while (G__17365__i < G__17365__a.length) {G__17365__a[G__17365__i] = arguments[G__17365__i + 0]; ++G__17365__i;}
  keyvals = new cljs.core.IndexedSeq(G__17365__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__17366){
var keyvals = cljs.core.seq(arglist__17366);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__17367__i = 0, G__17367__a = new Array(arguments.length -  0);
while (G__17367__i < G__17367__a.length) {G__17367__a[G__17367__i] = arguments[G__17367__i + 0]; ++G__17367__i;}
  keyvals = new cljs.core.IndexedSeq(G__17367__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__17368){
var keyvals = cljs.core.seq(arglist__17368);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj17372 = {};
return obj17372;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__17373 = cljs.core.nnext(kvs);
kvs = G__17373;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__17374__i = 0, G__17374__a = new Array(arguments.length -  0);
while (G__17374__i < G__17374__a.length) {G__17374__a[G__17374__i] = arguments[G__17374__i + 0]; ++G__17374__i;}
  keyvals = new cljs.core.IndexedSeq(G__17374__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__17375){
var keyvals = cljs.core.seq(arglist__17375);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__17376 = cljs.core.nnext(in$);
var G__17377 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__17376;
out = G__17377;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__17378__i = 0, G__17378__a = new Array(arguments.length -  0);
while (G__17378__i < G__17378__a.length) {G__17378__a[G__17378__i] = arguments[G__17378__i + 0]; ++G__17378__i;}
  keyvals = new cljs.core.IndexedSeq(G__17378__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__17379){
var keyvals = cljs.core.seq(arglist__17379);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__17380 = cljs.core.nnext(in$);
var G__17381 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__17380;
out = G__17381;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__17382__i = 0, G__17382__a = new Array(arguments.length -  1);
while (G__17382__i < G__17382__a.length) {G__17382__a[G__17382__i] = arguments[G__17382__i + 1]; ++G__17382__i;}
  keyvals = new cljs.core.IndexedSeq(G__17382__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__17383){
var comparator = cljs.core.first(arglist__17383);
var keyvals = cljs.core.rest(arglist__17383);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__17384 = self__.mseq;
if(G__17384){
var bit__6207__auto__ = (G__17384.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__6207__auto__) || (G__17384.cljs$core$INext$)){
return true;
} else {
if((!G__17384.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__17384);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__17384);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__17385 = self__.mseq;
if(G__17385){
var bit__6207__auto__ = (G__17385.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__6207__auto__) || (G__17385.cljs$core$INext$)){
return true;
} else {
if((!G__17385.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__17385);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__17385);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6504__auto__ = this;
return cljs.core.es6_iterator(this__6504__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__17386 = self__.mseq;
if(G__17386){
var bit__6207__auto__ = (G__17386.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__6207__auto__) || (G__17386.cljs$core$INext$)){
return true;
} else {
if((!G__17386.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__17386);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__17386);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__17387 = self__.mseq;
if(G__17387){
var bit__6207__auto__ = (G__17387.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__6207__auto__) || (G__17387.cljs$core$INext$)){
return true;
} else {
if((!G__17387.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__17387);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__17387);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6504__auto__ = this;
return cljs.core.es6_iterator(this__6504__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__17388_SHARP_,p2__17389_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__5526__auto__ = p1__17388_SHARP_;
if(cljs.core.truth_(or__5526__auto__)){
return or__5526__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__17389_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__17390__i = 0, G__17390__a = new Array(arguments.length -  0);
while (G__17390__i < G__17390__a.length) {G__17390__a[G__17390__i] = arguments[G__17390__i + 0]; ++G__17390__i;}
  maps = new cljs.core.IndexedSeq(G__17390__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__17391){
var maps = cljs.core.seq(arglist__17391);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__17394 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__17395 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17394,G__17395) : f.call(null,G__17394,G__17395));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__5526__auto__ = m1;
if(cljs.core.truth_(or__5526__auto__)){
return or__5526__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__17396__i = 0, G__17396__a = new Array(arguments.length -  1);
while (G__17396__i < G__17396__a.length) {G__17396__a[G__17396__i] = arguments[G__17396__i + 1]; ++G__17396__i;}
  maps = new cljs.core.IndexedSeq(G__17396__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__17397){
var f = cljs.core.first(arglist__17397);
var maps = cljs.core.rest(arglist__17397);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__17398 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__17399 = cljs.core.next(keys);
ret = G__17398;
keys = G__17399;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__17402 = cljs.core.seq(coll);
var chunk__17403 = null;
var count__17404 = (0);
var i__17405 = (0);
while(true){
if((i__17405 < count__17404)){
var vec__17406 = chunk__17403.cljs$core$IIndexed$_nth$arity$2(null,i__17405);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17406,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17406,(1),null);
var G__17407_17412 = v;
var G__17408_17413 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17407_17412,G__17408_17413) : f.call(null,G__17407_17412,G__17408_17413));

var G__17414 = seq__17402;
var G__17415 = chunk__17403;
var G__17416 = count__17404;
var G__17417 = (i__17405 + (1));
seq__17402 = G__17414;
chunk__17403 = G__17415;
count__17404 = G__17416;
i__17405 = G__17417;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__17402);
if(temp__4126__auto__){
var seq__17402__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__17402__$1)){
var c__6313__auto__ = cljs.core.chunk_first(seq__17402__$1);
var G__17418 = cljs.core.chunk_rest(seq__17402__$1);
var G__17419 = c__6313__auto__;
var G__17420 = cljs.core.count(c__6313__auto__);
var G__17421 = (0);
seq__17402 = G__17418;
chunk__17403 = G__17419;
count__17404 = G__17420;
i__17405 = G__17421;
continue;
} else {
var vec__17409 = cljs.core.first(seq__17402__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17409,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17409,(1),null);
var G__17410_17422 = v;
var G__17411_17423 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17410_17422,G__17411_17423) : f.call(null,G__17410_17422,G__17411_17423));

var G__17424 = cljs.core.next(seq__17402__$1);
var G__17425 = null;
var G__17426 = (0);
var G__17427 = (0);
seq__17402 = G__17424;
chunk__17403 = G__17425;
count__17404 = G__17426;
i__17405 = G__17427;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5947__auto__ = self__.__hash;
if(!((h__5947__auto__ == null))){
return h__5947__auto__;
} else {
var h__5947__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__5947__auto____$1;

return h__5947__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__17400_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__17400_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__17428 = null;
var G__17428__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__17428__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__17428 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__17428__2.call(this,self__,k);
case 3:
return G__17428__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17428.cljs$core$IFn$_invoke$arity$2 = G__17428__2;
G__17428.cljs$core$IFn$_invoke$arity$3 = G__17428__3;
return G__17428;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args17401){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17401)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__17429 = (i + (1));
var G__17430 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__17429;
out = G__17430;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__17431 = (i + (1));
var G__17432 = cljs.core._conj_BANG_(out,(items[i]));
i = G__17431;
out = G__17432;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6504__auto__ = this;
return cljs.core.es6_iterator(this__6504__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__17434 = null;
var G__17434__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__17434__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__17434 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__17434__2.call(this,self__,k);
case 3:
return G__17434__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17434.cljs$core$IFn$_invoke$arity$2 = G__17434__2;
G__17434.cljs$core$IFn$_invoke$arity$3 = G__17434__3;
return G__17434;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args17433){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17433)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__17437 = cljs.core.seq(coll);
var chunk__17438 = null;
var count__17439 = (0);
var i__17440 = (0);
while(true){
if((i__17440 < count__17439)){
var vec__17441 = chunk__17438.cljs$core$IIndexed$_nth$arity$2(null,i__17440);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17441,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17441,(1),null);
var G__17442_17447 = v;
var G__17443_17448 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17442_17447,G__17443_17448) : f.call(null,G__17442_17447,G__17443_17448));

var G__17449 = seq__17437;
var G__17450 = chunk__17438;
var G__17451 = count__17439;
var G__17452 = (i__17440 + (1));
seq__17437 = G__17449;
chunk__17438 = G__17450;
count__17439 = G__17451;
i__17440 = G__17452;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__17437);
if(temp__4126__auto__){
var seq__17437__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__17437__$1)){
var c__6313__auto__ = cljs.core.chunk_first(seq__17437__$1);
var G__17453 = cljs.core.chunk_rest(seq__17437__$1);
var G__17454 = c__6313__auto__;
var G__17455 = cljs.core.count(c__6313__auto__);
var G__17456 = (0);
seq__17437 = G__17453;
chunk__17438 = G__17454;
count__17439 = G__17455;
i__17440 = G__17456;
continue;
} else {
var vec__17444 = cljs.core.first(seq__17437__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17444,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17444,(1),null);
var G__17445_17457 = v;
var G__17446_17458 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17445_17457,G__17446_17458) : f.call(null,G__17445_17457,G__17446_17458));

var G__17459 = cljs.core.next(seq__17437__$1);
var G__17460 = null;
var G__17461 = (0);
var G__17462 = (0);
seq__17437 = G__17459;
chunk__17438 = G__17460;
count__17439 = G__17461;
i__17440 = G__17462;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__5947__auto__ = self__.__hash;
if(!((h__5947__auto__ == null))){
return h__5947__auto__;
} else {
var h__5947__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__5947__auto____$1;

return h__5947__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__17435_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__17435_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__17463 = null;
var G__17463__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__17463__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__17463 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__17463__2.call(this,self__,k);
case 3:
return G__17463__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17463.cljs$core$IFn$_invoke$arity$2 = G__17463__2;
G__17463.cljs$core$IFn$_invoke$arity$3 = G__17463__3;
return G__17463;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args17436){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17436)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6504__auto__ = this;
return cljs.core.es6_iterator(this__6504__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__6407__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__6407__auto__.length)){
var G__17464 = (i + (1));
var G__17465 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__17464;
res = G__17465;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__17466 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__17467 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__17466;
out = G__17467;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__17468__delegate = function (keys){
return cljs.core.set(keys);
};
var G__17468 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__17469__i = 0, G__17469__a = new Array(arguments.length -  0);
while (G__17469__i < G__17469__a.length) {G__17469__a[G__17469__i] = arguments[G__17469__i + 0]; ++G__17469__i;}
  keys = new cljs.core.IndexedSeq(G__17469__a,0);
} 
return G__17468__delegate.call(this,keys);};
G__17468.cljs$lang$maxFixedArity = 0;
G__17468.cljs$lang$applyTo = (function (arglist__17470){
var keys = cljs.core.seq(arglist__17470);
return G__17468__delegate(keys);
});
G__17468.cljs$core$IFn$_invoke$arity$variadic = G__17468__delegate;
return G__17468;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__17471 = null;
if (arguments.length > 0) {
var G__17472__i = 0, G__17472__a = new Array(arguments.length -  0);
while (G__17472__i < G__17472__a.length) {G__17472__a[G__17472__i] = arguments[G__17472__i + 0]; ++G__17472__i;}
G__17471 = new cljs.core.IndexedSeq(G__17472__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__17471);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__17473__i = 0, G__17473__a = new Array(arguments.length -  0);
while (G__17473__i < G__17473__a.length) {G__17473__a[G__17473__i] = arguments[G__17473__i + 0]; ++G__17473__i;}
  keys = new cljs.core.IndexedSeq(G__17473__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__17474){
var keys = cljs.core.seq(arglist__17474);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__17475__i = 0, G__17475__a = new Array(arguments.length -  1);
while (G__17475__i < G__17475__a.length) {G__17475__a[G__17475__i] = arguments[G__17475__i + 1]; ++G__17475__i;}
  keys = new cljs.core.IndexedSeq(G__17475__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__17476){
var comparator = cljs.core.first(arglist__17476);
var keys = cljs.core.rest(arglist__17476);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__17477_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__17477_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__17477_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__17478_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__17478_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__17478_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__17499 = null;
var G__17499__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__17499__1 = (function (result){
var G__17489 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17489) : rf.call(null,G__17489));
});
var G__17499__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__17490 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17490) : cljs.core.deref.call(null,G__17490));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__17491 = result;
var G__17492 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17491,G__17492) : rf.call(null,G__17491,G__17492));
}
});
G__17499 = function(result,input){
switch(arguments.length){
case 0:
return G__17499__0.call(this);
case 1:
return G__17499__1.call(this,result);
case 2:
return G__17499__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17499.cljs$core$IFn$_invoke$arity$0 = G__17499__0;
G__17499.cljs$core$IFn$_invoke$arity$1 = G__17499__1;
G__17499.cljs$core$IFn$_invoke$arity$2 = G__17499__2;
return G__17499;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__17497,seen__$1){
while(true){
var vec__17498 = p__17497;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17498,(0),null);
var xs__$1 = vec__17498;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__17500 = cljs.core.rest(s);
var G__17501 = seen__$1;
p__17497 = G__17500;
seen__$1 = G__17501;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__17502 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__17503 = cljs.core.next(s__$1);
ret = G__17502;
s__$1 = G__17503;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__17505 = x;
if(G__17505){
var bit__6200__auto__ = (G__17505.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__6200__auto__) || (G__17505.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__17506 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__17507 = cljs.core.next(ks);
var G__17508 = cljs.core.next(vs);
map = G__17506;
ks = G__17507;
vs = G__17508;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__17519 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__17519) : k.call(null,G__17519));
})() > (function (){var G__17520 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__17520) : k.call(null,G__17520));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__17521__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__17509_SHARP_,p2__17510_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__17509_SHARP_,p2__17510_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__17521 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__17522__i = 0, G__17522__a = new Array(arguments.length -  3);
while (G__17522__i < G__17522__a.length) {G__17522__a[G__17522__i] = arguments[G__17522__i + 3]; ++G__17522__i;}
  more = new cljs.core.IndexedSeq(G__17522__a,0);
} 
return G__17521__delegate.call(this,k,x,y,more);};
G__17521.cljs$lang$maxFixedArity = 3;
G__17521.cljs$lang$applyTo = (function (arglist__17523){
var k = cljs.core.first(arglist__17523);
arglist__17523 = cljs.core.next(arglist__17523);
var x = cljs.core.first(arglist__17523);
arglist__17523 = cljs.core.next(arglist__17523);
var y = cljs.core.first(arglist__17523);
var more = cljs.core.rest(arglist__17523);
return G__17521__delegate(k,x,y,more);
});
G__17521.cljs$core$IFn$_invoke$arity$variadic = G__17521__delegate;
return G__17521;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__17524 = null;
if (arguments.length > 3) {
var G__17525__i = 0, G__17525__a = new Array(arguments.length -  3);
while (G__17525__i < G__17525__a.length) {G__17525__a[G__17525__i] = arguments[G__17525__i + 3]; ++G__17525__i;}
G__17524 = new cljs.core.IndexedSeq(G__17525__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__17524);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__17536 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__17536) : k.call(null,G__17536));
})() < (function (){var G__17537 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__17537) : k.call(null,G__17537));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__17538__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__17526_SHARP_,p2__17527_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__17526_SHARP_,p2__17527_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__17538 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__17539__i = 0, G__17539__a = new Array(arguments.length -  3);
while (G__17539__i < G__17539__a.length) {G__17539__a[G__17539__i] = arguments[G__17539__i + 3]; ++G__17539__i;}
  more = new cljs.core.IndexedSeq(G__17539__a,0);
} 
return G__17538__delegate.call(this,k,x,y,more);};
G__17538.cljs$lang$maxFixedArity = 3;
G__17538.cljs$lang$applyTo = (function (arglist__17540){
var k = cljs.core.first(arglist__17540);
arglist__17540 = cljs.core.next(arglist__17540);
var x = cljs.core.first(arglist__17540);
arglist__17540 = cljs.core.next(arglist__17540);
var y = cljs.core.first(arglist__17540);
var more = cljs.core.rest(arglist__17540);
return G__17538__delegate(k,x,y,more);
});
G__17538.cljs$core$IFn$_invoke$arity$variadic = G__17538__delegate;
return G__17538;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__17541 = null;
if (arguments.length > 3) {
var G__17542__i = 0, G__17542__a = new Array(arguments.length -  3);
while (G__17542__i < G__17542__a.length) {G__17542__a[G__17542__i] = arguments[G__17542__i + 3]; ++G__17542__i;}
G__17541 = new cljs.core.IndexedSeq(G__17542__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__17541);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__17559 = null;
var G__17559__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__17559__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__17554 = result;
var G__17555 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17554,G__17555) : rf.call(null,G__17554,G__17555));
})());
})());
var G__17556 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17556) : rf.call(null,G__17556));
});
var G__17559__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__17557 = result;
var G__17558 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17557,G__17558) : rf.call(null,G__17557,G__17558));
} else {
return result;
}
});
G__17559 = function(result,input){
switch(arguments.length){
case 0:
return G__17559__0.call(this);
case 1:
return G__17559__1.call(this,result);
case 2:
return G__17559__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17559.cljs$core$IFn$_invoke$arity$0 = G__17559__0;
G__17559.cljs$core$IFn$_invoke$arity$1 = G__17559__1;
G__17559.cljs$core$IFn$_invoke$arity$2 = G__17559__2;
return G__17559;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__17572 = null;
var G__17572__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__17572__1 = (function (result){
var G__17567 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17567) : rf.call(null,G__17567));
});
var G__17572__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__17568 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__17568) : pred.call(null,G__17568));
})())){
var G__17569 = result;
var G__17570 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17569,G__17570) : rf.call(null,G__17569,G__17570));
} else {
return cljs.core.reduced(result);
}
});
G__17572 = function(result,input){
switch(arguments.length){
case 0:
return G__17572__0.call(this);
case 1:
return G__17572__1.call(this,result);
case 2:
return G__17572__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17572.cljs$core$IFn$_invoke$arity$0 = G__17572__0;
G__17572.cljs$core$IFn$_invoke$arity$1 = G__17572__1;
G__17572.cljs$core$IFn$_invoke$arity$2 = G__17572__2;
return G__17572;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__17571 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__17571) : pred.call(null,G__17571));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__17577 = (function (){var G__17579 = cljs.core._entry_key(sc,e);
var G__17580 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__17579,G__17580) : comp.call(null,G__17579,G__17580));
})();
var G__17578 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__17577,G__17578) : test.call(null,G__17577,G__17578));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__17584 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17584,(0),null);
var s = vec__17584;
if(cljs.core.truth_((function (){var G__17585 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__17585) : include.call(null,G__17585));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__17586 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17586,(0),null);
var s = vec__17586;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__17590 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17590,(0),null);
var s = vec__17590;
if(cljs.core.truth_((function (){var G__17591 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__17591) : include.call(null,G__17591));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__17592 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17592,(0),null);
var s = vec__17592;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__17593 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__17593) : Math.ceil.call(null,G__17593));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__5947__auto__ = self__.__hash;
if(!((h__5947__auto__ == null))){
return h__5947__auto__;
} else {
var h__5947__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__5947__auto____$1;

return h__5947__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__17594 = ret;
var G__17595 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17594,G__17595) : f.call(null,G__17594,G__17595));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__17596 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17596) : cljs.core.deref.call(null,G__17596));
} else {
var G__17597 = (i + self__.step);
var G__17598 = ret__$1;
i = G__17597;
ret = G__17598;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6504__auto__ = this;
return cljs.core.es6_iterator(this__6504__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__17616 = null;
var G__17616__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__17616__1 = (function (result){
var G__17613 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17613) : rf.call(null,G__17613));
});
var G__17616__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__17614 = result;
var G__17615 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17614,G__17615) : rf.call(null,G__17614,G__17615));
} else {
return result;
}
});
G__17616 = function(result,input){
switch(arguments.length){
case 0:
return G__17616__0.call(this);
case 1:
return G__17616__1.call(this,result);
case 2:
return G__17616__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17616.cljs$core$IFn$_invoke$arity$0 = G__17616__0;
G__17616.cljs$core$IFn$_invoke$arity$1 = G__17616__1;
G__17616.cljs$core$IFn$_invoke$arity$2 = G__17616__2;
return G__17616;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__17638 = null;
var G__17638__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__17638__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__17629 = result;
var G__17630 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17629,G__17630) : rf.call(null,G__17629,G__17630));
})());
})());
var G__17631 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17631) : rf.call(null,G__17631));
});
var G__17638__2 = (function (result,input){
var pval = (function (){var G__17632 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17632) : cljs.core.deref.call(null,G__17632));
})();
var val = (function (){var G__17633 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17633) : f.call(null,G__17633));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__17634 = result;
var G__17635 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17634,G__17635) : rf.call(null,G__17634,G__17635));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__17638 = function(result,input){
switch(arguments.length){
case 0:
return G__17638__0.call(this);
case 1:
return G__17638__1.call(this,result);
case 2:
return G__17638__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17638.cljs$core$IFn$_invoke$arity$0 = G__17638__0;
G__17638.cljs$core$IFn$_invoke$arity$1 = G__17638__1;
G__17638.cljs$core$IFn$_invoke$arity$2 = G__17638__2;
return G__17638;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__17636 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17636) : f.call(null,G__17636));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__17617_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__17637 = p1__17617_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17637) : f.call(null,G__17637));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__17647 = init;
var G__17648 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17647,G__17648) : f.call(null,G__17647,G__17648));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__17743 = null;
var G__17743__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__17743__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17701 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17701) : f.call(null,G__17701));
})()],null));
});
var G__17743__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17702 = x;
var G__17703 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17702,G__17703) : f.call(null,G__17702,G__17703));
})()],null));
});
var G__17743__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17704 = x;
var G__17705 = y;
var G__17706 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17704,G__17705,G__17706) : f.call(null,G__17704,G__17705,G__17706));
})()],null));
});
var G__17743__4 = (function() { 
var G__17744__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__17744 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__17745__i = 0, G__17745__a = new Array(arguments.length -  3);
while (G__17745__i < G__17745__a.length) {G__17745__a[G__17745__i] = arguments[G__17745__i + 3]; ++G__17745__i;}
  args = new cljs.core.IndexedSeq(G__17745__a,0);
} 
return G__17744__delegate.call(this,x,y,z,args);};
G__17744.cljs$lang$maxFixedArity = 3;
G__17744.cljs$lang$applyTo = (function (arglist__17746){
var x = cljs.core.first(arglist__17746);
arglist__17746 = cljs.core.next(arglist__17746);
var y = cljs.core.first(arglist__17746);
arglist__17746 = cljs.core.next(arglist__17746);
var z = cljs.core.first(arglist__17746);
var args = cljs.core.rest(arglist__17746);
return G__17744__delegate(x,y,z,args);
});
G__17744.cljs$core$IFn$_invoke$arity$variadic = G__17744__delegate;
return G__17744;
})()
;
G__17743 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__17743__0.call(this);
case 1:
return G__17743__1.call(this,x);
case 2:
return G__17743__2.call(this,x,y);
case 3:
return G__17743__3.call(this,x,y,z);
default:
var G__17747 = null;
if (arguments.length > 3) {
var G__17748__i = 0, G__17748__a = new Array(arguments.length -  3);
while (G__17748__i < G__17748__a.length) {G__17748__a[G__17748__i] = arguments[G__17748__i + 3]; ++G__17748__i;}
G__17747 = new cljs.core.IndexedSeq(G__17748__a,0);
}
return G__17743__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__17747);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17743.cljs$lang$maxFixedArity = 3;
G__17743.cljs$lang$applyTo = G__17743__4.cljs$lang$applyTo;
G__17743.cljs$core$IFn$_invoke$arity$0 = G__17743__0;
G__17743.cljs$core$IFn$_invoke$arity$1 = G__17743__1;
G__17743.cljs$core$IFn$_invoke$arity$2 = G__17743__2;
G__17743.cljs$core$IFn$_invoke$arity$3 = G__17743__3;
G__17743.cljs$core$IFn$_invoke$arity$variadic = G__17743__4.cljs$core$IFn$_invoke$arity$variadic;
return G__17743;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__17749 = null;
var G__17749__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__17749__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17707 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17707) : f.call(null,G__17707));
})(),(function (){var G__17708 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__17708) : g.call(null,G__17708));
})()],null));
});
var G__17749__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17709 = x;
var G__17710 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17709,G__17710) : f.call(null,G__17709,G__17710));
})(),(function (){var G__17711 = x;
var G__17712 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__17711,G__17712) : g.call(null,G__17711,G__17712));
})()],null));
});
var G__17749__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17713 = x;
var G__17714 = y;
var G__17715 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17713,G__17714,G__17715) : f.call(null,G__17713,G__17714,G__17715));
})(),(function (){var G__17716 = x;
var G__17717 = y;
var G__17718 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__17716,G__17717,G__17718) : g.call(null,G__17716,G__17717,G__17718));
})()],null));
});
var G__17749__4 = (function() { 
var G__17750__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__17750 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__17751__i = 0, G__17751__a = new Array(arguments.length -  3);
while (G__17751__i < G__17751__a.length) {G__17751__a[G__17751__i] = arguments[G__17751__i + 3]; ++G__17751__i;}
  args = new cljs.core.IndexedSeq(G__17751__a,0);
} 
return G__17750__delegate.call(this,x,y,z,args);};
G__17750.cljs$lang$maxFixedArity = 3;
G__17750.cljs$lang$applyTo = (function (arglist__17752){
var x = cljs.core.first(arglist__17752);
arglist__17752 = cljs.core.next(arglist__17752);
var y = cljs.core.first(arglist__17752);
arglist__17752 = cljs.core.next(arglist__17752);
var z = cljs.core.first(arglist__17752);
var args = cljs.core.rest(arglist__17752);
return G__17750__delegate(x,y,z,args);
});
G__17750.cljs$core$IFn$_invoke$arity$variadic = G__17750__delegate;
return G__17750;
})()
;
G__17749 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__17749__0.call(this);
case 1:
return G__17749__1.call(this,x);
case 2:
return G__17749__2.call(this,x,y);
case 3:
return G__17749__3.call(this,x,y,z);
default:
var G__17753 = null;
if (arguments.length > 3) {
var G__17754__i = 0, G__17754__a = new Array(arguments.length -  3);
while (G__17754__i < G__17754__a.length) {G__17754__a[G__17754__i] = arguments[G__17754__i + 3]; ++G__17754__i;}
G__17753 = new cljs.core.IndexedSeq(G__17754__a,0);
}
return G__17749__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__17753);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17749.cljs$lang$maxFixedArity = 3;
G__17749.cljs$lang$applyTo = G__17749__4.cljs$lang$applyTo;
G__17749.cljs$core$IFn$_invoke$arity$0 = G__17749__0;
G__17749.cljs$core$IFn$_invoke$arity$1 = G__17749__1;
G__17749.cljs$core$IFn$_invoke$arity$2 = G__17749__2;
G__17749.cljs$core$IFn$_invoke$arity$3 = G__17749__3;
G__17749.cljs$core$IFn$_invoke$arity$variadic = G__17749__4.cljs$core$IFn$_invoke$arity$variadic;
return G__17749;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__17755 = null;
var G__17755__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__17755__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17719 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17719) : f.call(null,G__17719));
})(),(function (){var G__17720 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__17720) : g.call(null,G__17720));
})(),(function (){var G__17721 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__17721) : h.call(null,G__17721));
})()],null));
});
var G__17755__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17722 = x;
var G__17723 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17722,G__17723) : f.call(null,G__17722,G__17723));
})(),(function (){var G__17724 = x;
var G__17725 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__17724,G__17725) : g.call(null,G__17724,G__17725));
})(),(function (){var G__17726 = x;
var G__17727 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__17726,G__17727) : h.call(null,G__17726,G__17727));
})()],null));
});
var G__17755__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17728 = x;
var G__17729 = y;
var G__17730 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17728,G__17729,G__17730) : f.call(null,G__17728,G__17729,G__17730));
})(),(function (){var G__17731 = x;
var G__17732 = y;
var G__17733 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__17731,G__17732,G__17733) : g.call(null,G__17731,G__17732,G__17733));
})(),(function (){var G__17734 = x;
var G__17735 = y;
var G__17736 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__17734,G__17735,G__17736) : h.call(null,G__17734,G__17735,G__17736));
})()],null));
});
var G__17755__4 = (function() { 
var G__17756__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__17756 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__17757__i = 0, G__17757__a = new Array(arguments.length -  3);
while (G__17757__i < G__17757__a.length) {G__17757__a[G__17757__i] = arguments[G__17757__i + 3]; ++G__17757__i;}
  args = new cljs.core.IndexedSeq(G__17757__a,0);
} 
return G__17756__delegate.call(this,x,y,z,args);};
G__17756.cljs$lang$maxFixedArity = 3;
G__17756.cljs$lang$applyTo = (function (arglist__17758){
var x = cljs.core.first(arglist__17758);
arglist__17758 = cljs.core.next(arglist__17758);
var y = cljs.core.first(arglist__17758);
arglist__17758 = cljs.core.next(arglist__17758);
var z = cljs.core.first(arglist__17758);
var args = cljs.core.rest(arglist__17758);
return G__17756__delegate(x,y,z,args);
});
G__17756.cljs$core$IFn$_invoke$arity$variadic = G__17756__delegate;
return G__17756;
})()
;
G__17755 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__17755__0.call(this);
case 1:
return G__17755__1.call(this,x);
case 2:
return G__17755__2.call(this,x,y);
case 3:
return G__17755__3.call(this,x,y,z);
default:
var G__17759 = null;
if (arguments.length > 3) {
var G__17760__i = 0, G__17760__a = new Array(arguments.length -  3);
while (G__17760__i < G__17760__a.length) {G__17760__a[G__17760__i] = arguments[G__17760__i + 3]; ++G__17760__i;}
G__17759 = new cljs.core.IndexedSeq(G__17760__a,0);
}
return G__17755__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__17759);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17755.cljs$lang$maxFixedArity = 3;
G__17755.cljs$lang$applyTo = G__17755__4.cljs$lang$applyTo;
G__17755.cljs$core$IFn$_invoke$arity$0 = G__17755__0;
G__17755.cljs$core$IFn$_invoke$arity$1 = G__17755__1;
G__17755.cljs$core$IFn$_invoke$arity$2 = G__17755__2;
G__17755.cljs$core$IFn$_invoke$arity$3 = G__17755__3;
G__17755.cljs$core$IFn$_invoke$arity$variadic = G__17755__4.cljs$core$IFn$_invoke$arity$variadic;
return G__17755;
})()
});
var juxt__4 = (function() { 
var G__17761__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__17762 = null;
var G__17762__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__17649_SHARP_,p2__17650_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__17649_SHARP_,(function (){return (p2__17650_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__17650_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__17650_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__17762__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__17651_SHARP_,p2__17652_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__17651_SHARP_,(function (){var G__17737 = x;
return (p2__17652_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__17652_SHARP_.cljs$core$IFn$_invoke$arity$1(G__17737) : p2__17652_SHARP_.call(null,G__17737));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__17762__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__17653_SHARP_,p2__17654_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__17653_SHARP_,(function (){var G__17738 = x;
var G__17739 = y;
return (p2__17654_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__17654_SHARP_.cljs$core$IFn$_invoke$arity$2(G__17738,G__17739) : p2__17654_SHARP_.call(null,G__17738,G__17739));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__17762__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__17655_SHARP_,p2__17656_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__17655_SHARP_,(function (){var G__17740 = x;
var G__17741 = y;
var G__17742 = z;
return (p2__17656_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__17656_SHARP_.cljs$core$IFn$_invoke$arity$3(G__17740,G__17741,G__17742) : p2__17656_SHARP_.call(null,G__17740,G__17741,G__17742));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__17762__4 = (function() { 
var G__17763__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__17657_SHARP_,p2__17658_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__17657_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__17658_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__17763 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__17764__i = 0, G__17764__a = new Array(arguments.length -  3);
while (G__17764__i < G__17764__a.length) {G__17764__a[G__17764__i] = arguments[G__17764__i + 3]; ++G__17764__i;}
  args = new cljs.core.IndexedSeq(G__17764__a,0);
} 
return G__17763__delegate.call(this,x,y,z,args);};
G__17763.cljs$lang$maxFixedArity = 3;
G__17763.cljs$lang$applyTo = (function (arglist__17765){
var x = cljs.core.first(arglist__17765);
arglist__17765 = cljs.core.next(arglist__17765);
var y = cljs.core.first(arglist__17765);
arglist__17765 = cljs.core.next(arglist__17765);
var z = cljs.core.first(arglist__17765);
var args = cljs.core.rest(arglist__17765);
return G__17763__delegate(x,y,z,args);
});
G__17763.cljs$core$IFn$_invoke$arity$variadic = G__17763__delegate;
return G__17763;
})()
;
G__17762 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__17762__0.call(this);
case 1:
return G__17762__1.call(this,x);
case 2:
return G__17762__2.call(this,x,y);
case 3:
return G__17762__3.call(this,x,y,z);
default:
var G__17766 = null;
if (arguments.length > 3) {
var G__17767__i = 0, G__17767__a = new Array(arguments.length -  3);
while (G__17767__i < G__17767__a.length) {G__17767__a[G__17767__i] = arguments[G__17767__i + 3]; ++G__17767__i;}
G__17766 = new cljs.core.IndexedSeq(G__17767__a,0);
}
return G__17762__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__17766);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17762.cljs$lang$maxFixedArity = 3;
G__17762.cljs$lang$applyTo = G__17762__4.cljs$lang$applyTo;
G__17762.cljs$core$IFn$_invoke$arity$0 = G__17762__0;
G__17762.cljs$core$IFn$_invoke$arity$1 = G__17762__1;
G__17762.cljs$core$IFn$_invoke$arity$2 = G__17762__2;
G__17762.cljs$core$IFn$_invoke$arity$3 = G__17762__3;
G__17762.cljs$core$IFn$_invoke$arity$variadic = G__17762__4.cljs$core$IFn$_invoke$arity$variadic;
return G__17762;
})()
;})(fs__$1))
};
var G__17761 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__17768__i = 0, G__17768__a = new Array(arguments.length -  3);
while (G__17768__i < G__17768__a.length) {G__17768__a[G__17768__i] = arguments[G__17768__i + 3]; ++G__17768__i;}
  fs = new cljs.core.IndexedSeq(G__17768__a,0);
} 
return G__17761__delegate.call(this,f,g,h,fs);};
G__17761.cljs$lang$maxFixedArity = 3;
G__17761.cljs$lang$applyTo = (function (arglist__17769){
var f = cljs.core.first(arglist__17769);
arglist__17769 = cljs.core.next(arglist__17769);
var g = cljs.core.first(arglist__17769);
arglist__17769 = cljs.core.next(arglist__17769);
var h = cljs.core.first(arglist__17769);
var fs = cljs.core.rest(arglist__17769);
return G__17761__delegate(f,g,h,fs);
});
G__17761.cljs$core$IFn$_invoke$arity$variadic = G__17761__delegate;
return G__17761;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__17770 = null;
if (arguments.length > 3) {
var G__17771__i = 0, G__17771__a = new Array(arguments.length -  3);
while (G__17771__i < G__17771__a.length) {G__17771__a[G__17771__i] = arguments[G__17771__i + 3]; ++G__17771__i;}
G__17770 = new cljs.core.IndexedSeq(G__17771__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__17770);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__17772 = cljs.core.next(coll);
coll = G__17772;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__17773 = (n - (1));
var G__17774 = cljs.core.next(coll);
n = G__17773;
coll = G__17774;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__17778 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17778,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17778,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17778,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_17786 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,"...");
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__17787_17793 = cljs.core.first(coll);
var G__17788_17794 = writer;
var G__17789_17795 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__17787_17793,G__17788_17794,G__17789_17795) : print_one.call(null,G__17787_17793,G__17788_17794,G__17789_17795));
} else {
}

var coll_17796__$1 = cljs.core.next(coll);
var n_17797 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_17796__$1) && (((n_17797 == null)) || (!((n_17797 === (0)))))){
cljs.core._write(writer,sep);

var G__17790_17798 = cljs.core.first(coll_17796__$1);
var G__17791_17799 = writer;
var G__17792_17800 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__17790_17798,G__17791_17799,G__17792_17800) : print_one.call(null,G__17790_17798,G__17791_17799,G__17792_17800));

var G__17801 = cljs.core.next(coll_17796__$1);
var G__17802 = (n_17797 - (1));
coll_17796__$1 = G__17801;
n_17797 = G__17802;
continue;
} else {
if((cljs.core.seq(coll_17796__$1)) && ((n_17797 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_17786;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__17807 = cljs.core.seq(ss);
var chunk__17808 = null;
var count__17809 = (0);
var i__17810 = (0);
while(true){
if((i__17810 < count__17809)){
var s = chunk__17808.cljs$core$IIndexed$_nth$arity$2(null,i__17810);
cljs.core._write(writer,s);

var G__17811 = seq__17807;
var G__17812 = chunk__17808;
var G__17813 = count__17809;
var G__17814 = (i__17810 + (1));
seq__17807 = G__17811;
chunk__17808 = G__17812;
count__17809 = G__17813;
i__17810 = G__17814;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__17807);
if(temp__4126__auto__){
var seq__17807__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__17807__$1)){
var c__6313__auto__ = cljs.core.chunk_first(seq__17807__$1);
var G__17815 = cljs.core.chunk_rest(seq__17807__$1);
var G__17816 = c__6313__auto__;
var G__17817 = cljs.core.count(c__6313__auto__);
var G__17818 = (0);
seq__17807 = G__17815;
chunk__17808 = G__17816;
count__17809 = G__17817;
i__17810 = G__17818;
continue;
} else {
var s = cljs.core.first(seq__17807__$1);
cljs.core._write(writer,s);

var G__17819 = cljs.core.next(seq__17807__$1);
var G__17820 = null;
var G__17821 = (0);
var G__17822 = (0);
seq__17807 = G__17819;
chunk__17808 = G__17820;
count__17809 = G__17821;
i__17810 = G__17822;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__17823__i = 0, G__17823__a = new Array(arguments.length -  1);
while (G__17823__i < G__17823__a.length) {G__17823__a[G__17823__i] = arguments[G__17823__i + 1]; ++G__17823__i;}
  ss = new cljs.core.IndexedSeq(G__17823__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__17824){
var writer = cljs.core.first(arglist__17824);
var ss = cljs.core.rest(arglist__17824);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj17826 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj17826;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__17829 = "[\\\\\"\b\f\n\r\t]";
var G__17830 = "g";
return RegExp(G__17829,G__17830);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__5514__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__5514__auto__)){
var and__5514__auto____$1 = (function (){var G__17844 = obj;
if(G__17844){
var bit__6207__auto__ = (G__17844.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__6207__auto__) || (G__17844.cljs$core$IMeta$)){
return true;
} else {
if((!G__17844.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__17844);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__17844);
}
})();
if(and__5514__auto____$1){
return cljs.core.meta(obj);
} else {
return and__5514__auto____$1;
}
} else {
return and__5514__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__17845 = obj;
if(G__17845){
var bit__6200__auto__ = (G__17845.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__6200__auto__) || (G__17845.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__17846 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__17847 = pr_writer;
var G__17848 = writer;
var G__17849 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__17846,G__17847,G__17848,G__17849) : cljs.core.print_map.call(null,G__17846,G__17847,G__17848,G__17849));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__17850 = obj;
return goog.isString(G__17850);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__17852 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__17852;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__17851 = obj;
if(G__17851){
var bit__6207__auto__ = (G__17851.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__6207__auto__) || (G__17851.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__17851.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__17851);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__17851);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__17857 = cljs.core.seq(cljs.core.next(objs));
var chunk__17858 = null;
var count__17859 = (0);
var i__17860 = (0);
while(true){
if((i__17860 < count__17859)){
var obj = chunk__17858.cljs$core$IIndexed$_nth$arity$2(null,i__17860);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__17861 = seq__17857;
var G__17862 = chunk__17858;
var G__17863 = count__17859;
var G__17864 = (i__17860 + (1));
seq__17857 = G__17861;
chunk__17858 = G__17862;
count__17859 = G__17863;
i__17860 = G__17864;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__17857);
if(temp__4126__auto__){
var seq__17857__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__17857__$1)){
var c__6313__auto__ = cljs.core.chunk_first(seq__17857__$1);
var G__17865 = cljs.core.chunk_rest(seq__17857__$1);
var G__17866 = c__6313__auto__;
var G__17867 = cljs.core.count(c__6313__auto__);
var G__17868 = (0);
seq__17857 = G__17865;
chunk__17858 = G__17866;
count__17859 = G__17867;
i__17860 = G__17868;
continue;
} else {
var obj = cljs.core.first(seq__17857__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__17869 = cljs.core.next(seq__17857__$1);
var G__17870 = null;
var G__17871 = (0);
var G__17872 = (0);
seq__17857 = G__17869;
chunk__17858 = G__17870;
count__17859 = G__17871;
i__17860 = G__17872;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__17873__i = 0, G__17873__a = new Array(arguments.length -  0);
while (G__17873__i < G__17873__a.length) {G__17873__a[G__17873__i] = arguments[G__17873__i + 0]; ++G__17873__i;}
  objs = new cljs.core.IndexedSeq(G__17873__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__17874){
var objs = cljs.core.seq(arglist__17874);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__17875__i = 0, G__17875__a = new Array(arguments.length -  0);
while (G__17875__i < G__17875__a.length) {G__17875__a[G__17875__i] = arguments[G__17875__i + 0]; ++G__17875__i;}
  objs = new cljs.core.IndexedSeq(G__17875__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__17876){
var objs = cljs.core.seq(arglist__17876);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__17877__i = 0, G__17877__a = new Array(arguments.length -  0);
while (G__17877__i < G__17877__a.length) {G__17877__a[G__17877__i] = arguments[G__17877__i + 0]; ++G__17877__i;}
  objs = new cljs.core.IndexedSeq(G__17877__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__17878){
var objs = cljs.core.seq(arglist__17878);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__17879__i = 0, G__17879__a = new Array(arguments.length -  0);
while (G__17879__i < G__17879__a.length) {G__17879__a[G__17879__i] = arguments[G__17879__i + 0]; ++G__17879__i;}
  objs = new cljs.core.IndexedSeq(G__17879__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__17880){
var objs = cljs.core.seq(arglist__17880);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__17881__i = 0, G__17881__a = new Array(arguments.length -  0);
while (G__17881__i < G__17881__a.length) {G__17881__a[G__17881__i] = arguments[G__17881__i + 0]; ++G__17881__i;}
  objs = new cljs.core.IndexedSeq(G__17881__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__17882){
var objs = cljs.core.seq(arglist__17882);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__17883__i = 0, G__17883__a = new Array(arguments.length -  0);
while (G__17883__i < G__17883__a.length) {G__17883__a[G__17883__i] = arguments[G__17883__i + 0]; ++G__17883__i;}
  objs = new cljs.core.IndexedSeq(G__17883__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__17884){
var objs = cljs.core.seq(arglist__17884);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__17885__i = 0, G__17885__a = new Array(arguments.length -  0);
while (G__17885__i < G__17885__a.length) {G__17885__a[G__17885__i] = arguments[G__17885__i + 0]; ++G__17885__i;}
  objs = new cljs.core.IndexedSeq(G__17885__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__17886){
var objs = cljs.core.seq(arglist__17886);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__17887__i = 0, G__17887__a = new Array(arguments.length -  0);
while (G__17887__i < G__17887__a.length) {G__17887__a[G__17887__i] = arguments[G__17887__i + 0]; ++G__17887__i;}
  objs = new cljs.core.IndexedSeq(G__17887__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__17888){
var objs = cljs.core.seq(arglist__17888);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__17895_17901 = cljs.core.key(e);
var G__17896_17902 = w;
var G__17897_17903 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__17895_17901,G__17896_17902,G__17897_17903) : print_one.call(null,G__17895_17901,G__17896_17902,G__17897_17903));

cljs.core._write(w," ");

var G__17898 = cljs.core.val(e);
var G__17899 = w;
var G__17900 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__17898,G__17899,G__17900) : print_one.call(null,G__17898,G__17899,G__17900));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__17904__i = 0, G__17904__a = new Array(arguments.length -  2);
while (G__17904__i < G__17904__a.length) {G__17904__a[G__17904__i] = arguments[G__17904__i + 2]; ++G__17904__i;}
  args = new cljs.core.IndexedSeq(G__17904__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__17905){
var iref = cljs.core.first(arglist__17905);
arglist__17905 = cljs.core.next(arglist__17905);
var f = cljs.core.first(arglist__17905);
var args = cljs.core.rest(arglist__17905);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__17908 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__17908) : cljs.core.atom.call(null,G__17908));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__17910 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17910) : cljs.core.deref.call(null,G__17910));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__17911_SHARP_,p2__17912_SHARP_){
var ret = (function (){var G__17915 = p1__17911_SHARP_;
var G__17916 = p2__17912_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17915,G__17916) : rf.call(null,G__17915,G__17916));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__17919 = null;
var G__17919__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__17919__1 = (function (result){
var G__17918 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17918) : rf.call(null,G__17918));
});
var G__17919__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__17919 = function(result,input){
switch(arguments.length){
case 0:
return G__17919__0.call(this);
case 1:
return G__17919__1.call(this,result);
case 2:
return G__17919__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17919.cljs$core$IFn$_invoke$arity$0 = G__17919__0;
G__17919.cljs$core$IFn$_invoke$arity$1 = G__17919__1;
G__17919.cljs$core$IFn$_invoke$arity$2 = G__17919__2;
return G__17919;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__17928 = null;
var G__17928__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__17928__1 = (function (result){
var G__17924 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17924) : rf.call(null,G__17924));
});
var G__17928__2 = (function (result,input){
var prior = (function (){var G__17925 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17925) : cljs.core.deref.call(null,G__17925));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__17926 = result;
var G__17927 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17926,G__17927) : rf.call(null,G__17926,G__17927));
}
});
G__17928 = function(result,input){
switch(arguments.length){
case 0:
return G__17928__0.call(this);
case 1:
return G__17928__1.call(this,result);
case 2:
return G__17928__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17928.cljs$core$IFn$_invoke$arity$0 = G__17928__0;
G__17928.cljs$core$IFn$_invoke$arity$1 = G__17928__1;
G__17928.cljs$core$IFn$_invoke$arity$2 = G__17928__2;
return G__17928;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__6504__auto__ = this;
return cljs.core.es6_iterator(this__6504__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__17930_SHARP_,p2__17929_SHARP_){
var G__17932 = p2__17929_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__17932) : proc.call(null,G__17932));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj17934 = {};
return obj17934;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__5514__auto__ = x;
if(and__5514__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__5514__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__6170__auto__ = (((x == null))?null:x);
return (function (){var or__5526__auto__ = (cljs.core._clj__GT_js[(function (){var G__17938 = x__6170__auto__;
return goog.typeOf(G__17938);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__5514__auto__ = x;
if(and__5514__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__5514__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__6170__auto__ = (((x == null))?null:x);
return (function (){var or__5526__auto__ = (cljs.core._key__GT_js[(function (){var G__17942 = x__6170__auto__;
return goog.typeOf(G__17942);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__17945 = k;
if(G__17945){
var bit__6207__auto__ = null;
if(cljs.core.truth_((function (){var or__5526__auto__ = bit__6207__auto__;
if(cljs.core.truth_(or__5526__auto__)){
return or__5526__auto__;
} else {
return G__17945.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__17945.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__17945);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__17945);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__17946 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__17946) : cljs.core.clj__GT_js.call(null,G__17946));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__17962 = x;
if(G__17962){
var bit__6207__auto__ = null;
if(cljs.core.truth_((function (){var or__5526__auto__ = bit__6207__auto__;
if(cljs.core.truth_(or__5526__auto__)){
return or__5526__auto__;
} else {
return G__17962.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__17962.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__17962);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__17962);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj17964 = {};
return obj17964;
})();
var seq__17965_17975 = cljs.core.seq(x);
var chunk__17966_17976 = null;
var count__17967_17977 = (0);
var i__17968_17978 = (0);
while(true){
if((i__17968_17978 < count__17967_17977)){
var vec__17969_17979 = chunk__17966_17976.cljs$core$IIndexed$_nth$arity$2(null,i__17968_17978);
var k_17980 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17969_17979,(0),null);
var v_17981 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17969_17979,(1),null);
(m[cljs.core.key__GT_js(k_17980)] = clj__GT_js(v_17981));

var G__17982 = seq__17965_17975;
var G__17983 = chunk__17966_17976;
var G__17984 = count__17967_17977;
var G__17985 = (i__17968_17978 + (1));
seq__17965_17975 = G__17982;
chunk__17966_17976 = G__17983;
count__17967_17977 = G__17984;
i__17968_17978 = G__17985;
continue;
} else {
var temp__4126__auto___17986 = cljs.core.seq(seq__17965_17975);
if(temp__4126__auto___17986){
var seq__17965_17987__$1 = temp__4126__auto___17986;
if(cljs.core.chunked_seq_QMARK_(seq__17965_17987__$1)){
var c__6313__auto___17988 = cljs.core.chunk_first(seq__17965_17987__$1);
var G__17989 = cljs.core.chunk_rest(seq__17965_17987__$1);
var G__17990 = c__6313__auto___17988;
var G__17991 = cljs.core.count(c__6313__auto___17988);
var G__17992 = (0);
seq__17965_17975 = G__17989;
chunk__17966_17976 = G__17990;
count__17967_17977 = G__17991;
i__17968_17978 = G__17992;
continue;
} else {
var vec__17970_17993 = cljs.core.first(seq__17965_17987__$1);
var k_17994 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17970_17993,(0),null);
var v_17995 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17970_17993,(1),null);
(m[cljs.core.key__GT_js(k_17994)] = clj__GT_js(v_17995));

var G__17996 = cljs.core.next(seq__17965_17987__$1);
var G__17997 = null;
var G__17998 = (0);
var G__17999 = (0);
seq__17965_17975 = G__17996;
chunk__17966_17976 = G__17997;
count__17967_17977 = G__17998;
i__17968_17978 = G__17999;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__17971_18000 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__17972_18001 = null;
var count__17973_18002 = (0);
var i__17974_18003 = (0);
while(true){
if((i__17974_18003 < count__17973_18002)){
var x_18004__$1 = chunk__17972_18001.cljs$core$IIndexed$_nth$arity$2(null,i__17974_18003);
arr.push(x_18004__$1);

var G__18005 = seq__17971_18000;
var G__18006 = chunk__17972_18001;
var G__18007 = count__17973_18002;
var G__18008 = (i__17974_18003 + (1));
seq__17971_18000 = G__18005;
chunk__17972_18001 = G__18006;
count__17973_18002 = G__18007;
i__17974_18003 = G__18008;
continue;
} else {
var temp__4126__auto___18009 = cljs.core.seq(seq__17971_18000);
if(temp__4126__auto___18009){
var seq__17971_18010__$1 = temp__4126__auto___18009;
if(cljs.core.chunked_seq_QMARK_(seq__17971_18010__$1)){
var c__6313__auto___18011 = cljs.core.chunk_first(seq__17971_18010__$1);
var G__18012 = cljs.core.chunk_rest(seq__17971_18010__$1);
var G__18013 = c__6313__auto___18011;
var G__18014 = cljs.core.count(c__6313__auto___18011);
var G__18015 = (0);
seq__17971_18000 = G__18012;
chunk__17972_18001 = G__18013;
count__17973_18002 = G__18014;
i__17974_18003 = G__18015;
continue;
} else {
var x_18016__$1 = cljs.core.first(seq__17971_18010__$1);
arr.push(x_18016__$1);

var G__18017 = cljs.core.next(seq__17971_18010__$1);
var G__18018 = null;
var G__18019 = (0);
var G__18020 = (0);
seq__17971_18000 = G__18017;
chunk__17972_18001 = G__18018;
count__17973_18002 = G__18019;
i__17974_18003 = G__18020;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj18022 = {};
return obj18022;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__5514__auto__ = x;
if(and__5514__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__5514__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__6170__auto__ = (((x == null))?null:x);
return (function (){var or__5526__auto__ = (cljs.core._js__GT_clj[(function (){var G__18026 = x__6170__auto__;
return goog.typeOf(G__18026);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__18083__delegate = function (x,opts){
var map__18056 = opts;
var map__18056__$1 = ((cljs.core.seq_QMARK_(map__18056))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__18056):map__18056);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__18056__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__18056,map__18056__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__18072 = x__$1;
if(G__18072){
var bit__6207__auto__ = null;
if(cljs.core.truth_((function (){var or__5526__auto__ = bit__6207__auto__;
if(cljs.core.truth_(or__5526__auto__)){
return or__5526__auto__;
} else {
return G__18072.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__18072.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__18072);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__18072);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__6282__auto__ = ((function (map__18056,map__18056__$1,keywordize_keys,keyfn){
return (function iter__18073(s__18074){
return (new cljs.core.LazySeq(null,((function (map__18056,map__18056__$1,keywordize_keys,keyfn){
return (function (){
var s__18074__$1 = s__18074;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__18074__$1);
if(temp__4126__auto__){
var s__18074__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__18074__$2)){
var c__6280__auto__ = cljs.core.chunk_first(s__18074__$2);
var size__6281__auto__ = cljs.core.count(c__6280__auto__);
var b__18076 = cljs.core.chunk_buffer(size__6281__auto__);
if((function (){var i__18075 = (0);
while(true){
if((i__18075 < size__6281__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__6280__auto__,i__18075);
cljs.core.chunk_append(b__18076,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__18081 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__18081) : keyfn.call(null,G__18081));
})(),thisfn((x__$1[k]))], null));

var G__18084 = (i__18075 + (1));
i__18075 = G__18084;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__18076),iter__18073(cljs.core.chunk_rest(s__18074__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__18076),null);
}
} else {
var k = cljs.core.first(s__18074__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__18082 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__18082) : keyfn.call(null,G__18082));
})(),thisfn((x__$1[k]))], null),iter__18073(cljs.core.rest(s__18074__$2)));
}
} else {
return null;
}
break;
}
});})(map__18056,map__18056__$1,keywordize_keys,keyfn))
,null,null));
});})(map__18056,map__18056__$1,keywordize_keys,keyfn))
;
return iter__6282__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__18056,map__18056__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__18083 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__18085__i = 0, G__18085__a = new Array(arguments.length -  1);
while (G__18085__i < G__18085__a.length) {G__18085__a[G__18085__i] = arguments[G__18085__i + 1]; ++G__18085__i;}
  opts = new cljs.core.IndexedSeq(G__18085__a,0);
} 
return G__18083__delegate.call(this,x,opts);};
G__18083.cljs$lang$maxFixedArity = 1;
G__18083.cljs$lang$applyTo = (function (arglist__18086){
var x = cljs.core.first(arglist__18086);
var opts = cljs.core.rest(arglist__18086);
return G__18083__delegate(x,opts);
});
G__18083.cljs$core$IFn$_invoke$arity$variadic = G__18083__delegate;
return G__18083;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__18087 = null;
if (arguments.length > 1) {
var G__18088__i = 0, G__18088__a = new Array(arguments.length -  1);
while (G__18088__i < G__18088__a.length) {G__18088__a[G__18088__i] = arguments[G__18088__i + 1]; ++G__18088__i;}
G__18087 = new cljs.core.IndexedSeq(G__18088__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__18087);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__18091 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__18091) : cljs.core.atom.call(null,G__18091));
})();
return ((function (mem){
return (function() { 
var G__18093__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__18092 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18092) : cljs.core.deref.call(null,G__18092));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__18093 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__18094__i = 0, G__18094__a = new Array(arguments.length -  0);
while (G__18094__i < G__18094__a.length) {G__18094__a[G__18094__i] = arguments[G__18094__i + 0]; ++G__18094__i;}
  args = new cljs.core.IndexedSeq(G__18094__a,0);
} 
return G__18093__delegate.call(this,args);};
G__18093.cljs$lang$maxFixedArity = 0;
G__18093.cljs$lang$applyTo = (function (arglist__18095){
var args = cljs.core.seq(arglist__18095);
return G__18093__delegate(args);
});
G__18093.cljs$core$IFn$_invoke$arity$variadic = G__18093__delegate;
return G__18093;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__18097 = ret;
f = G__18097;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__18098__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__18098 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__18099__i = 0, G__18099__a = new Array(arguments.length -  1);
while (G__18099__i < G__18099__a.length) {G__18099__a[G__18099__i] = arguments[G__18099__i + 1]; ++G__18099__i;}
  args = new cljs.core.IndexedSeq(G__18099__a,0);
} 
return G__18098__delegate.call(this,f,args);};
G__18098.cljs$lang$maxFixedArity = 1;
G__18098.cljs$lang$applyTo = (function (arglist__18100){
var f = cljs.core.first(arglist__18100);
var args = cljs.core.rest(arglist__18100);
return G__18098__delegate(f,args);
});
G__18098.cljs$core$IFn$_invoke$arity$variadic = G__18098__delegate;
return G__18098;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__18101 = null;
if (arguments.length > 1) {
var G__18102__i = 0, G__18102__a = new Array(arguments.length -  1);
while (G__18102__i < G__18102__a.length) {G__18102__a[G__18102__i] = arguments[G__18102__i + 1]; ++G__18102__i;}
G__18101 = new cljs.core.IndexedSeq(G__18102__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__18101);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__18105 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__18105) : Math.floor.call(null,G__18105));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__18107 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18107) : f.call(null,G__18107));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__18109 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__18109) : cljs.core.atom.call(null,G__18109));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__18110__i = 0, G__18110__a = new Array(arguments.length -  1);
while (G__18110__i < G__18110__a.length) {G__18110__a[G__18110__i] = arguments[G__18110__i + 1]; ++G__18110__i;}
  args = new cljs.core.IndexedSeq(G__18110__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__18111){
var f = cljs.core.first(arglist__18111);
var args = cljs.core.rest(arglist__18111);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__18176 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18176) : cljs.core.deref.call(null,G__18176));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__5526__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
var and__5514__auto__ = cljs.core.vector_QMARK_(parent);
if(and__5514__auto__){
var and__5514__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__5514__auto____$1){
var and__5514__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__5514__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__18201 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__18199 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__18199) : child.call(null,G__18199));
})(),(function (){var G__18200 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__18200) : parent.call(null,G__18200));
})());
var G__18202 = (i + (1));
ret = G__18201;
i = G__18202;
continue;
}
break;
}
} else {
return and__5514__auto____$2;
}
} else {
return and__5514__auto____$1;
}
} else {
return and__5514__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__18206 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18206) : cljs.core.deref.call(null,G__18206));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__18210 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18210) : cljs.core.deref.call(null,G__18210));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__18214 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18214) : cljs.core.deref.call(null,G__18214));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__18223 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__18223) : targets.call(null,G__18223));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__18224 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__18224) : sources.call(null,G__18224));
})()));
});})(tp,td,ta))
;
var or__5526__auto__ = ((cljs.core.contains_QMARK_((function (){var G__18228 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__18228) : tp.call(null,G__18228));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__18229 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__18229) : ta.call(null,G__18229));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__18230 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__18230) : ta.call(null,G__18230));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__5526__auto__)){
return or__5526__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__18237 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__18237) : parentMap.call(null,G__18237));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__18238 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__18238) : parentMap.call(null,G__18238));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__18231_SHARP_){
return cljs.core.cons(cljs.core.first(p1__18231_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__18231_SHARP_),cljs.core.second(p1__18231_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__18239 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__18239) : parentMap.call(null,G__18239));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__18232_SHARP_,p2__18233_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__18232_SHARP_,p2__18233_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__18242 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18242) : cljs.core.deref.call(null,G__18242));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__18243 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18243) : cljs.core.deref.call(null,G__18243));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__18259 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18259) : cljs.core.deref.call(null,G__18259));
})().call(null,x);
var or__5526__auto__ = (cljs.core.truth_((function (){var and__5514__auto__ = xprefs;
if(cljs.core.truth_(and__5514__auto__)){
var G__18261 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__18261) : xprefs.call(null,G__18261));
} else {
return and__5514__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__5526__auto__)){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__18262 = cljs.core.rest(ps);
ps = G__18262;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__5526__auto____$1)){
return or__5526__auto____$1;
} else {
var or__5526__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__18263 = cljs.core.rest(ps);
ps = G__18263;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__5526__auto____$2)){
return or__5526__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__5526__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__5526__auto__)){
return or__5526__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__18277){
var vec__18278 = p__18277;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18278,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18278,(1),null);
var e = vec__18278;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__18279 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18279) : cljs.core.deref.call(null,G__18279));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__5526__auto__ = (be == null);
if(or__5526__auto__){
return or__5526__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__18280 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18280) : cljs.core.deref.call(null,G__18280));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__18281 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18281) : cljs.core.deref.call(null,G__18281));
})(),(function (){var G__18282 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18282) : cljs.core.deref.call(null,G__18282));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj18284 = {};
return obj18284;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__5514__auto__ = mf;
if(and__5514__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__5514__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__6170__auto__ = (((mf == null))?null:mf);
return (function (){var or__5526__auto__ = (cljs.core._reset[(function (){var G__18288 = x__6170__auto__;
return goog.typeOf(G__18288);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._reset["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__5514__auto__ = mf;
if(and__5514__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__5514__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__6170__auto__ = (((mf == null))?null:mf);
return (function (){var or__5526__auto__ = (cljs.core._add_method[(function (){var G__18292 = x__6170__auto__;
return goog.typeOf(G__18292);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._add_method["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__5514__auto__ = mf;
if(and__5514__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__5514__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__6170__auto__ = (((mf == null))?null:mf);
return (function (){var or__5526__auto__ = (cljs.core._remove_method[(function (){var G__18296 = x__6170__auto__;
return goog.typeOf(G__18296);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._remove_method["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__5514__auto__ = mf;
if(and__5514__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__5514__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__6170__auto__ = (((mf == null))?null:mf);
return (function (){var or__5526__auto__ = (cljs.core._prefer_method[(function (){var G__18300 = x__6170__auto__;
return goog.typeOf(G__18300);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__5514__auto__ = mf;
if(and__5514__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__5514__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__6170__auto__ = (((mf == null))?null:mf);
return (function (){var or__5526__auto__ = (cljs.core._get_method[(function (){var G__18304 = x__6170__auto__;
return goog.typeOf(G__18304);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._get_method["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__5514__auto__ = mf;
if(and__5514__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__5514__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__6170__auto__ = (((mf == null))?null:mf);
return (function (){var or__5526__auto__ = (cljs.core._methods[(function (){var G__18308 = x__6170__auto__;
return goog.typeOf(G__18308);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._methods["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__5514__auto__ = mf;
if(and__5514__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__5514__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__6170__auto__ = (((mf == null))?null:mf);
return (function (){var or__5526__auto__ = (cljs.core._prefers[(function (){var G__18312 = x__6170__auto__;
return goog.typeOf(G__18312);
})()]);
if(or__5526__auto__){
return or__5526__auto__;
} else {
var or__5526__auto____$1 = (cljs.core._prefers["_"]);
if(or__5526__auto____$1){
return or__5526__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__18314 = this$__$1;
return goog.getUid(G__18314);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__18315 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18315) : cljs.core.deref.call(null,G__18315));
})(),(function (){var G__18316 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18316) : cljs.core.deref.call(null,G__18316));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__18317 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18317) : cljs.core.deref.call(null,G__18317));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__18318 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18318) : cljs.core.deref.call(null,G__18318));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__18319 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18319) : cljs.core.deref.call(null,G__18319));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__18320 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18320) : cljs.core.deref.call(null,G__18320));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__19161 = null;
var G__19161__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__19161__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18321 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__18321) : self__.dispatch_fn.call(null,G__18321));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18322 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__18322) : target_fn.call(null,G__18322));
});
var G__19161__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18323 = a;
var G__18324 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__18323,G__18324) : self__.dispatch_fn.call(null,G__18323,G__18324));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18325 = a;
var G__18326 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__18325,G__18326) : target_fn.call(null,G__18325,G__18326));
});
var G__19161__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18327 = a;
var G__18328 = b;
var G__18329 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__18327,G__18328,G__18329) : self__.dispatch_fn.call(null,G__18327,G__18328,G__18329));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18330 = a;
var G__18331 = b;
var G__18332 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__18330,G__18331,G__18332) : target_fn.call(null,G__18330,G__18331,G__18332));
});
var G__19161__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18333 = a;
var G__18334 = b;
var G__18335 = c;
var G__18336 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__18333,G__18334,G__18335,G__18336) : self__.dispatch_fn.call(null,G__18333,G__18334,G__18335,G__18336));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18337 = a;
var G__18338 = b;
var G__18339 = c;
var G__18340 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__18337,G__18338,G__18339,G__18340) : target_fn.call(null,G__18337,G__18338,G__18339,G__18340));
});
var G__19161__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18341 = a;
var G__18342 = b;
var G__18343 = c;
var G__18344 = d;
var G__18345 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__18341,G__18342,G__18343,G__18344,G__18345) : self__.dispatch_fn.call(null,G__18341,G__18342,G__18343,G__18344,G__18345));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18346 = a;
var G__18347 = b;
var G__18348 = c;
var G__18349 = d;
var G__18350 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__18346,G__18347,G__18348,G__18349,G__18350) : target_fn.call(null,G__18346,G__18347,G__18348,G__18349,G__18350));
});
var G__19161__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18351 = a;
var G__18352 = b;
var G__18353 = c;
var G__18354 = d;
var G__18355 = e;
var G__18356 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__18351,G__18352,G__18353,G__18354,G__18355,G__18356) : self__.dispatch_fn.call(null,G__18351,G__18352,G__18353,G__18354,G__18355,G__18356));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18357 = a;
var G__18358 = b;
var G__18359 = c;
var G__18360 = d;
var G__18361 = e;
var G__18362 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__18357,G__18358,G__18359,G__18360,G__18361,G__18362) : target_fn.call(null,G__18357,G__18358,G__18359,G__18360,G__18361,G__18362));
});
var G__19161__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18363 = a;
var G__18364 = b;
var G__18365 = c;
var G__18366 = d;
var G__18367 = e;
var G__18368 = f;
var G__18369 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__18363,G__18364,G__18365,G__18366,G__18367,G__18368,G__18369) : self__.dispatch_fn.call(null,G__18363,G__18364,G__18365,G__18366,G__18367,G__18368,G__18369));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18370 = a;
var G__18371 = b;
var G__18372 = c;
var G__18373 = d;
var G__18374 = e;
var G__18375 = f;
var G__18376 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__18370,G__18371,G__18372,G__18373,G__18374,G__18375,G__18376) : target_fn.call(null,G__18370,G__18371,G__18372,G__18373,G__18374,G__18375,G__18376));
});
var G__19161__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18377 = a;
var G__18378 = b;
var G__18379 = c;
var G__18380 = d;
var G__18381 = e;
var G__18382 = f;
var G__18383 = g;
var G__18384 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__18377,G__18378,G__18379,G__18380,G__18381,G__18382,G__18383,G__18384) : self__.dispatch_fn.call(null,G__18377,G__18378,G__18379,G__18380,G__18381,G__18382,G__18383,G__18384));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18385 = a;
var G__18386 = b;
var G__18387 = c;
var G__18388 = d;
var G__18389 = e;
var G__18390 = f;
var G__18391 = g;
var G__18392 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__18385,G__18386,G__18387,G__18388,G__18389,G__18390,G__18391,G__18392) : target_fn.call(null,G__18385,G__18386,G__18387,G__18388,G__18389,G__18390,G__18391,G__18392));
});
var G__19161__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18393 = a;
var G__18394 = b;
var G__18395 = c;
var G__18396 = d;
var G__18397 = e;
var G__18398 = f;
var G__18399 = g;
var G__18400 = h;
var G__18401 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__18393,G__18394,G__18395,G__18396,G__18397,G__18398,G__18399,G__18400,G__18401) : self__.dispatch_fn.call(null,G__18393,G__18394,G__18395,G__18396,G__18397,G__18398,G__18399,G__18400,G__18401));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18402 = a;
var G__18403 = b;
var G__18404 = c;
var G__18405 = d;
var G__18406 = e;
var G__18407 = f;
var G__18408 = g;
var G__18409 = h;
var G__18410 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__18402,G__18403,G__18404,G__18405,G__18406,G__18407,G__18408,G__18409,G__18410) : target_fn.call(null,G__18402,G__18403,G__18404,G__18405,G__18406,G__18407,G__18408,G__18409,G__18410));
});
var G__19161__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18411 = a;
var G__18412 = b;
var G__18413 = c;
var G__18414 = d;
var G__18415 = e;
var G__18416 = f;
var G__18417 = g;
var G__18418 = h;
var G__18419 = i;
var G__18420 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__18411,G__18412,G__18413,G__18414,G__18415,G__18416,G__18417,G__18418,G__18419,G__18420) : self__.dispatch_fn.call(null,G__18411,G__18412,G__18413,G__18414,G__18415,G__18416,G__18417,G__18418,G__18419,G__18420));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18421 = a;
var G__18422 = b;
var G__18423 = c;
var G__18424 = d;
var G__18425 = e;
var G__18426 = f;
var G__18427 = g;
var G__18428 = h;
var G__18429 = i;
var G__18430 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__18421,G__18422,G__18423,G__18424,G__18425,G__18426,G__18427,G__18428,G__18429,G__18430) : target_fn.call(null,G__18421,G__18422,G__18423,G__18424,G__18425,G__18426,G__18427,G__18428,G__18429,G__18430));
});
var G__19161__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18431 = a;
var G__18432 = b;
var G__18433 = c;
var G__18434 = d;
var G__18435 = e;
var G__18436 = f;
var G__18437 = g;
var G__18438 = h;
var G__18439 = i;
var G__18440 = j;
var G__18441 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__18431,G__18432,G__18433,G__18434,G__18435,G__18436,G__18437,G__18438,G__18439,G__18440,G__18441) : self__.dispatch_fn.call(null,G__18431,G__18432,G__18433,G__18434,G__18435,G__18436,G__18437,G__18438,G__18439,G__18440,G__18441));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18442 = a;
var G__18443 = b;
var G__18444 = c;
var G__18445 = d;
var G__18446 = e;
var G__18447 = f;
var G__18448 = g;
var G__18449 = h;
var G__18450 = i;
var G__18451 = j;
var G__18452 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__18442,G__18443,G__18444,G__18445,G__18446,G__18447,G__18448,G__18449,G__18450,G__18451,G__18452) : target_fn.call(null,G__18442,G__18443,G__18444,G__18445,G__18446,G__18447,G__18448,G__18449,G__18450,G__18451,G__18452));
});
var G__19161__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18453 = a;
var G__18454 = b;
var G__18455 = c;
var G__18456 = d;
var G__18457 = e;
var G__18458 = f;
var G__18459 = g;
var G__18460 = h;
var G__18461 = i;
var G__18462 = j;
var G__18463 = k;
var G__18464 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__18453,G__18454,G__18455,G__18456,G__18457,G__18458,G__18459,G__18460,G__18461,G__18462,G__18463,G__18464) : self__.dispatch_fn.call(null,G__18453,G__18454,G__18455,G__18456,G__18457,G__18458,G__18459,G__18460,G__18461,G__18462,G__18463,G__18464));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18465 = a;
var G__18466 = b;
var G__18467 = c;
var G__18468 = d;
var G__18469 = e;
var G__18470 = f;
var G__18471 = g;
var G__18472 = h;
var G__18473 = i;
var G__18474 = j;
var G__18475 = k;
var G__18476 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__18465,G__18466,G__18467,G__18468,G__18469,G__18470,G__18471,G__18472,G__18473,G__18474,G__18475,G__18476) : target_fn.call(null,G__18465,G__18466,G__18467,G__18468,G__18469,G__18470,G__18471,G__18472,G__18473,G__18474,G__18475,G__18476));
});
var G__19161__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18477 = a;
var G__18478 = b;
var G__18479 = c;
var G__18480 = d;
var G__18481 = e;
var G__18482 = f;
var G__18483 = g;
var G__18484 = h;
var G__18485 = i;
var G__18486 = j;
var G__18487 = k;
var G__18488 = l;
var G__18489 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__18477,G__18478,G__18479,G__18480,G__18481,G__18482,G__18483,G__18484,G__18485,G__18486,G__18487,G__18488,G__18489) : self__.dispatch_fn.call(null,G__18477,G__18478,G__18479,G__18480,G__18481,G__18482,G__18483,G__18484,G__18485,G__18486,G__18487,G__18488,G__18489));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18490 = a;
var G__18491 = b;
var G__18492 = c;
var G__18493 = d;
var G__18494 = e;
var G__18495 = f;
var G__18496 = g;
var G__18497 = h;
var G__18498 = i;
var G__18499 = j;
var G__18500 = k;
var G__18501 = l;
var G__18502 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__18490,G__18491,G__18492,G__18493,G__18494,G__18495,G__18496,G__18497,G__18498,G__18499,G__18500,G__18501,G__18502) : target_fn.call(null,G__18490,G__18491,G__18492,G__18493,G__18494,G__18495,G__18496,G__18497,G__18498,G__18499,G__18500,G__18501,G__18502));
});
var G__19161__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18503 = a;
var G__18504 = b;
var G__18505 = c;
var G__18506 = d;
var G__18507 = e;
var G__18508 = f;
var G__18509 = g;
var G__18510 = h;
var G__18511 = i;
var G__18512 = j;
var G__18513 = k;
var G__18514 = l;
var G__18515 = m;
var G__18516 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__18503,G__18504,G__18505,G__18506,G__18507,G__18508,G__18509,G__18510,G__18511,G__18512,G__18513,G__18514,G__18515,G__18516) : self__.dispatch_fn.call(null,G__18503,G__18504,G__18505,G__18506,G__18507,G__18508,G__18509,G__18510,G__18511,G__18512,G__18513,G__18514,G__18515,G__18516));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18517 = a;
var G__18518 = b;
var G__18519 = c;
var G__18520 = d;
var G__18521 = e;
var G__18522 = f;
var G__18523 = g;
var G__18524 = h;
var G__18525 = i;
var G__18526 = j;
var G__18527 = k;
var G__18528 = l;
var G__18529 = m;
var G__18530 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__18517,G__18518,G__18519,G__18520,G__18521,G__18522,G__18523,G__18524,G__18525,G__18526,G__18527,G__18528,G__18529,G__18530) : target_fn.call(null,G__18517,G__18518,G__18519,G__18520,G__18521,G__18522,G__18523,G__18524,G__18525,G__18526,G__18527,G__18528,G__18529,G__18530));
});
var G__19161__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18531 = a;
var G__18532 = b;
var G__18533 = c;
var G__18534 = d;
var G__18535 = e;
var G__18536 = f;
var G__18537 = g;
var G__18538 = h;
var G__18539 = i;
var G__18540 = j;
var G__18541 = k;
var G__18542 = l;
var G__18543 = m;
var G__18544 = n;
var G__18545 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__18531,G__18532,G__18533,G__18534,G__18535,G__18536,G__18537,G__18538,G__18539,G__18540,G__18541,G__18542,G__18543,G__18544,G__18545) : self__.dispatch_fn.call(null,G__18531,G__18532,G__18533,G__18534,G__18535,G__18536,G__18537,G__18538,G__18539,G__18540,G__18541,G__18542,G__18543,G__18544,G__18545));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18546 = a;
var G__18547 = b;
var G__18548 = c;
var G__18549 = d;
var G__18550 = e;
var G__18551 = f;
var G__18552 = g;
var G__18553 = h;
var G__18554 = i;
var G__18555 = j;
var G__18556 = k;
var G__18557 = l;
var G__18558 = m;
var G__18559 = n;
var G__18560 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__18546,G__18547,G__18548,G__18549,G__18550,G__18551,G__18552,G__18553,G__18554,G__18555,G__18556,G__18557,G__18558,G__18559,G__18560) : target_fn.call(null,G__18546,G__18547,G__18548,G__18549,G__18550,G__18551,G__18552,G__18553,G__18554,G__18555,G__18556,G__18557,G__18558,G__18559,G__18560));
});
var G__19161__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18561 = a;
var G__18562 = b;
var G__18563 = c;
var G__18564 = d;
var G__18565 = e;
var G__18566 = f;
var G__18567 = g;
var G__18568 = h;
var G__18569 = i;
var G__18570 = j;
var G__18571 = k;
var G__18572 = l;
var G__18573 = m;
var G__18574 = n;
var G__18575 = o;
var G__18576 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__18561,G__18562,G__18563,G__18564,G__18565,G__18566,G__18567,G__18568,G__18569,G__18570,G__18571,G__18572,G__18573,G__18574,G__18575,G__18576) : self__.dispatch_fn.call(null,G__18561,G__18562,G__18563,G__18564,G__18565,G__18566,G__18567,G__18568,G__18569,G__18570,G__18571,G__18572,G__18573,G__18574,G__18575,G__18576));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18577 = a;
var G__18578 = b;
var G__18579 = c;
var G__18580 = d;
var G__18581 = e;
var G__18582 = f;
var G__18583 = g;
var G__18584 = h;
var G__18585 = i;
var G__18586 = j;
var G__18587 = k;
var G__18588 = l;
var G__18589 = m;
var G__18590 = n;
var G__18591 = o;
var G__18592 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__18577,G__18578,G__18579,G__18580,G__18581,G__18582,G__18583,G__18584,G__18585,G__18586,G__18587,G__18588,G__18589,G__18590,G__18591,G__18592) : target_fn.call(null,G__18577,G__18578,G__18579,G__18580,G__18581,G__18582,G__18583,G__18584,G__18585,G__18586,G__18587,G__18588,G__18589,G__18590,G__18591,G__18592));
});
var G__19161__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18593 = a;
var G__18594 = b;
var G__18595 = c;
var G__18596 = d;
var G__18597 = e;
var G__18598 = f;
var G__18599 = g;
var G__18600 = h;
var G__18601 = i;
var G__18602 = j;
var G__18603 = k;
var G__18604 = l;
var G__18605 = m;
var G__18606 = n;
var G__18607 = o;
var G__18608 = p;
var G__18609 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__18593,G__18594,G__18595,G__18596,G__18597,G__18598,G__18599,G__18600,G__18601,G__18602,G__18603,G__18604,G__18605,G__18606,G__18607,G__18608,G__18609) : self__.dispatch_fn.call(null,G__18593,G__18594,G__18595,G__18596,G__18597,G__18598,G__18599,G__18600,G__18601,G__18602,G__18603,G__18604,G__18605,G__18606,G__18607,G__18608,G__18609));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18610 = a;
var G__18611 = b;
var G__18612 = c;
var G__18613 = d;
var G__18614 = e;
var G__18615 = f;
var G__18616 = g;
var G__18617 = h;
var G__18618 = i;
var G__18619 = j;
var G__18620 = k;
var G__18621 = l;
var G__18622 = m;
var G__18623 = n;
var G__18624 = o;
var G__18625 = p;
var G__18626 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__18610,G__18611,G__18612,G__18613,G__18614,G__18615,G__18616,G__18617,G__18618,G__18619,G__18620,G__18621,G__18622,G__18623,G__18624,G__18625,G__18626) : target_fn.call(null,G__18610,G__18611,G__18612,G__18613,G__18614,G__18615,G__18616,G__18617,G__18618,G__18619,G__18620,G__18621,G__18622,G__18623,G__18624,G__18625,G__18626));
});
var G__19161__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18627 = a;
var G__18628 = b;
var G__18629 = c;
var G__18630 = d;
var G__18631 = e;
var G__18632 = f;
var G__18633 = g;
var G__18634 = h;
var G__18635 = i;
var G__18636 = j;
var G__18637 = k;
var G__18638 = l;
var G__18639 = m;
var G__18640 = n;
var G__18641 = o;
var G__18642 = p;
var G__18643 = q;
var G__18644 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__18627,G__18628,G__18629,G__18630,G__18631,G__18632,G__18633,G__18634,G__18635,G__18636,G__18637,G__18638,G__18639,G__18640,G__18641,G__18642,G__18643,G__18644) : self__.dispatch_fn.call(null,G__18627,G__18628,G__18629,G__18630,G__18631,G__18632,G__18633,G__18634,G__18635,G__18636,G__18637,G__18638,G__18639,G__18640,G__18641,G__18642,G__18643,G__18644));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18645 = a;
var G__18646 = b;
var G__18647 = c;
var G__18648 = d;
var G__18649 = e;
var G__18650 = f;
var G__18651 = g;
var G__18652 = h;
var G__18653 = i;
var G__18654 = j;
var G__18655 = k;
var G__18656 = l;
var G__18657 = m;
var G__18658 = n;
var G__18659 = o;
var G__18660 = p;
var G__18661 = q;
var G__18662 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__18645,G__18646,G__18647,G__18648,G__18649,G__18650,G__18651,G__18652,G__18653,G__18654,G__18655,G__18656,G__18657,G__18658,G__18659,G__18660,G__18661,G__18662) : target_fn.call(null,G__18645,G__18646,G__18647,G__18648,G__18649,G__18650,G__18651,G__18652,G__18653,G__18654,G__18655,G__18656,G__18657,G__18658,G__18659,G__18660,G__18661,G__18662));
});
var G__19161__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18663 = a;
var G__18664 = b;
var G__18665 = c;
var G__18666 = d;
var G__18667 = e;
var G__18668 = f;
var G__18669 = g;
var G__18670 = h;
var G__18671 = i;
var G__18672 = j;
var G__18673 = k;
var G__18674 = l;
var G__18675 = m;
var G__18676 = n;
var G__18677 = o;
var G__18678 = p;
var G__18679 = q;
var G__18680 = r;
var G__18681 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__18663,G__18664,G__18665,G__18666,G__18667,G__18668,G__18669,G__18670,G__18671,G__18672,G__18673,G__18674,G__18675,G__18676,G__18677,G__18678,G__18679,G__18680,G__18681) : self__.dispatch_fn.call(null,G__18663,G__18664,G__18665,G__18666,G__18667,G__18668,G__18669,G__18670,G__18671,G__18672,G__18673,G__18674,G__18675,G__18676,G__18677,G__18678,G__18679,G__18680,G__18681));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18682 = a;
var G__18683 = b;
var G__18684 = c;
var G__18685 = d;
var G__18686 = e;
var G__18687 = f;
var G__18688 = g;
var G__18689 = h;
var G__18690 = i;
var G__18691 = j;
var G__18692 = k;
var G__18693 = l;
var G__18694 = m;
var G__18695 = n;
var G__18696 = o;
var G__18697 = p;
var G__18698 = q;
var G__18699 = r;
var G__18700 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__18682,G__18683,G__18684,G__18685,G__18686,G__18687,G__18688,G__18689,G__18690,G__18691,G__18692,G__18693,G__18694,G__18695,G__18696,G__18697,G__18698,G__18699,G__18700) : target_fn.call(null,G__18682,G__18683,G__18684,G__18685,G__18686,G__18687,G__18688,G__18689,G__18690,G__18691,G__18692,G__18693,G__18694,G__18695,G__18696,G__18697,G__18698,G__18699,G__18700));
});
var G__19161__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18701 = a;
var G__18702 = b;
var G__18703 = c;
var G__18704 = d;
var G__18705 = e;
var G__18706 = f;
var G__18707 = g;
var G__18708 = h;
var G__18709 = i;
var G__18710 = j;
var G__18711 = k;
var G__18712 = l;
var G__18713 = m;
var G__18714 = n;
var G__18715 = o;
var G__18716 = p;
var G__18717 = q;
var G__18718 = r;
var G__18719 = s;
var G__18720 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__18701,G__18702,G__18703,G__18704,G__18705,G__18706,G__18707,G__18708,G__18709,G__18710,G__18711,G__18712,G__18713,G__18714,G__18715,G__18716,G__18717,G__18718,G__18719,G__18720) : self__.dispatch_fn.call(null,G__18701,G__18702,G__18703,G__18704,G__18705,G__18706,G__18707,G__18708,G__18709,G__18710,G__18711,G__18712,G__18713,G__18714,G__18715,G__18716,G__18717,G__18718,G__18719,G__18720));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18721 = a;
var G__18722 = b;
var G__18723 = c;
var G__18724 = d;
var G__18725 = e;
var G__18726 = f;
var G__18727 = g;
var G__18728 = h;
var G__18729 = i;
var G__18730 = j;
var G__18731 = k;
var G__18732 = l;
var G__18733 = m;
var G__18734 = n;
var G__18735 = o;
var G__18736 = p;
var G__18737 = q;
var G__18738 = r;
var G__18739 = s;
var G__18740 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__18721,G__18722,G__18723,G__18724,G__18725,G__18726,G__18727,G__18728,G__18729,G__18730,G__18731,G__18732,G__18733,G__18734,G__18735,G__18736,G__18737,G__18738,G__18739,G__18740) : target_fn.call(null,G__18721,G__18722,G__18723,G__18724,G__18725,G__18726,G__18727,G__18728,G__18729,G__18730,G__18731,G__18732,G__18733,G__18734,G__18735,G__18736,G__18737,G__18738,G__18739,G__18740));
});
var G__19161__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__19161 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__19161__1.call(this,self__);
case 2:
return G__19161__2.call(this,self__,a);
case 3:
return G__19161__3.call(this,self__,a,b);
case 4:
return G__19161__4.call(this,self__,a,b,c);
case 5:
return G__19161__5.call(this,self__,a,b,c,d);
case 6:
return G__19161__6.call(this,self__,a,b,c,d,e);
case 7:
return G__19161__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__19161__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__19161__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__19161__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__19161__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__19161__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__19161__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__19161__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__19161__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__19161__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__19161__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__19161__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__19161__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__19161__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__19161__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__19161__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19161.cljs$core$IFn$_invoke$arity$1 = G__19161__1;
G__19161.cljs$core$IFn$_invoke$arity$2 = G__19161__2;
G__19161.cljs$core$IFn$_invoke$arity$3 = G__19161__3;
G__19161.cljs$core$IFn$_invoke$arity$4 = G__19161__4;
G__19161.cljs$core$IFn$_invoke$arity$5 = G__19161__5;
G__19161.cljs$core$IFn$_invoke$arity$6 = G__19161__6;
G__19161.cljs$core$IFn$_invoke$arity$7 = G__19161__7;
G__19161.cljs$core$IFn$_invoke$arity$8 = G__19161__8;
G__19161.cljs$core$IFn$_invoke$arity$9 = G__19161__9;
G__19161.cljs$core$IFn$_invoke$arity$10 = G__19161__10;
G__19161.cljs$core$IFn$_invoke$arity$11 = G__19161__11;
G__19161.cljs$core$IFn$_invoke$arity$12 = G__19161__12;
G__19161.cljs$core$IFn$_invoke$arity$13 = G__19161__13;
G__19161.cljs$core$IFn$_invoke$arity$14 = G__19161__14;
G__19161.cljs$core$IFn$_invoke$arity$15 = G__19161__15;
G__19161.cljs$core$IFn$_invoke$arity$16 = G__19161__16;
G__19161.cljs$core$IFn$_invoke$arity$17 = G__19161__17;
G__19161.cljs$core$IFn$_invoke$arity$18 = G__19161__18;
G__19161.cljs$core$IFn$_invoke$arity$19 = G__19161__19;
G__19161.cljs$core$IFn$_invoke$arity$20 = G__19161__20;
G__19161.cljs$core$IFn$_invoke$arity$21 = G__19161__21;
G__19161.cljs$core$IFn$_invoke$arity$22 = G__19161__22;
return G__19161;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args18313){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args18313)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18741 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__18741) : self__.dispatch_fn.call(null,G__18741));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18742 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__18742) : target_fn.call(null,G__18742));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18743 = a;
var G__18744 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__18743,G__18744) : self__.dispatch_fn.call(null,G__18743,G__18744));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18745 = a;
var G__18746 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__18745,G__18746) : target_fn.call(null,G__18745,G__18746));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18747 = a;
var G__18748 = b;
var G__18749 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__18747,G__18748,G__18749) : self__.dispatch_fn.call(null,G__18747,G__18748,G__18749));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18750 = a;
var G__18751 = b;
var G__18752 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__18750,G__18751,G__18752) : target_fn.call(null,G__18750,G__18751,G__18752));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18753 = a;
var G__18754 = b;
var G__18755 = c;
var G__18756 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__18753,G__18754,G__18755,G__18756) : self__.dispatch_fn.call(null,G__18753,G__18754,G__18755,G__18756));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18757 = a;
var G__18758 = b;
var G__18759 = c;
var G__18760 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__18757,G__18758,G__18759,G__18760) : target_fn.call(null,G__18757,G__18758,G__18759,G__18760));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18761 = a;
var G__18762 = b;
var G__18763 = c;
var G__18764 = d;
var G__18765 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__18761,G__18762,G__18763,G__18764,G__18765) : self__.dispatch_fn.call(null,G__18761,G__18762,G__18763,G__18764,G__18765));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18766 = a;
var G__18767 = b;
var G__18768 = c;
var G__18769 = d;
var G__18770 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__18766,G__18767,G__18768,G__18769,G__18770) : target_fn.call(null,G__18766,G__18767,G__18768,G__18769,G__18770));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18771 = a;
var G__18772 = b;
var G__18773 = c;
var G__18774 = d;
var G__18775 = e;
var G__18776 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__18771,G__18772,G__18773,G__18774,G__18775,G__18776) : self__.dispatch_fn.call(null,G__18771,G__18772,G__18773,G__18774,G__18775,G__18776));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18777 = a;
var G__18778 = b;
var G__18779 = c;
var G__18780 = d;
var G__18781 = e;
var G__18782 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__18777,G__18778,G__18779,G__18780,G__18781,G__18782) : target_fn.call(null,G__18777,G__18778,G__18779,G__18780,G__18781,G__18782));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18783 = a;
var G__18784 = b;
var G__18785 = c;
var G__18786 = d;
var G__18787 = e;
var G__18788 = f;
var G__18789 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__18783,G__18784,G__18785,G__18786,G__18787,G__18788,G__18789) : self__.dispatch_fn.call(null,G__18783,G__18784,G__18785,G__18786,G__18787,G__18788,G__18789));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18790 = a;
var G__18791 = b;
var G__18792 = c;
var G__18793 = d;
var G__18794 = e;
var G__18795 = f;
var G__18796 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__18790,G__18791,G__18792,G__18793,G__18794,G__18795,G__18796) : target_fn.call(null,G__18790,G__18791,G__18792,G__18793,G__18794,G__18795,G__18796));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18797 = a;
var G__18798 = b;
var G__18799 = c;
var G__18800 = d;
var G__18801 = e;
var G__18802 = f;
var G__18803 = g;
var G__18804 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__18797,G__18798,G__18799,G__18800,G__18801,G__18802,G__18803,G__18804) : self__.dispatch_fn.call(null,G__18797,G__18798,G__18799,G__18800,G__18801,G__18802,G__18803,G__18804));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18805 = a;
var G__18806 = b;
var G__18807 = c;
var G__18808 = d;
var G__18809 = e;
var G__18810 = f;
var G__18811 = g;
var G__18812 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__18805,G__18806,G__18807,G__18808,G__18809,G__18810,G__18811,G__18812) : target_fn.call(null,G__18805,G__18806,G__18807,G__18808,G__18809,G__18810,G__18811,G__18812));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18813 = a;
var G__18814 = b;
var G__18815 = c;
var G__18816 = d;
var G__18817 = e;
var G__18818 = f;
var G__18819 = g;
var G__18820 = h;
var G__18821 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__18813,G__18814,G__18815,G__18816,G__18817,G__18818,G__18819,G__18820,G__18821) : self__.dispatch_fn.call(null,G__18813,G__18814,G__18815,G__18816,G__18817,G__18818,G__18819,G__18820,G__18821));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18822 = a;
var G__18823 = b;
var G__18824 = c;
var G__18825 = d;
var G__18826 = e;
var G__18827 = f;
var G__18828 = g;
var G__18829 = h;
var G__18830 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__18822,G__18823,G__18824,G__18825,G__18826,G__18827,G__18828,G__18829,G__18830) : target_fn.call(null,G__18822,G__18823,G__18824,G__18825,G__18826,G__18827,G__18828,G__18829,G__18830));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18831 = a;
var G__18832 = b;
var G__18833 = c;
var G__18834 = d;
var G__18835 = e;
var G__18836 = f;
var G__18837 = g;
var G__18838 = h;
var G__18839 = i;
var G__18840 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__18831,G__18832,G__18833,G__18834,G__18835,G__18836,G__18837,G__18838,G__18839,G__18840) : self__.dispatch_fn.call(null,G__18831,G__18832,G__18833,G__18834,G__18835,G__18836,G__18837,G__18838,G__18839,G__18840));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18841 = a;
var G__18842 = b;
var G__18843 = c;
var G__18844 = d;
var G__18845 = e;
var G__18846 = f;
var G__18847 = g;
var G__18848 = h;
var G__18849 = i;
var G__18850 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__18841,G__18842,G__18843,G__18844,G__18845,G__18846,G__18847,G__18848,G__18849,G__18850) : target_fn.call(null,G__18841,G__18842,G__18843,G__18844,G__18845,G__18846,G__18847,G__18848,G__18849,G__18850));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18851 = a;
var G__18852 = b;
var G__18853 = c;
var G__18854 = d;
var G__18855 = e;
var G__18856 = f;
var G__18857 = g;
var G__18858 = h;
var G__18859 = i;
var G__18860 = j;
var G__18861 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__18851,G__18852,G__18853,G__18854,G__18855,G__18856,G__18857,G__18858,G__18859,G__18860,G__18861) : self__.dispatch_fn.call(null,G__18851,G__18852,G__18853,G__18854,G__18855,G__18856,G__18857,G__18858,G__18859,G__18860,G__18861));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18862 = a;
var G__18863 = b;
var G__18864 = c;
var G__18865 = d;
var G__18866 = e;
var G__18867 = f;
var G__18868 = g;
var G__18869 = h;
var G__18870 = i;
var G__18871 = j;
var G__18872 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__18862,G__18863,G__18864,G__18865,G__18866,G__18867,G__18868,G__18869,G__18870,G__18871,G__18872) : target_fn.call(null,G__18862,G__18863,G__18864,G__18865,G__18866,G__18867,G__18868,G__18869,G__18870,G__18871,G__18872));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18873 = a;
var G__18874 = b;
var G__18875 = c;
var G__18876 = d;
var G__18877 = e;
var G__18878 = f;
var G__18879 = g;
var G__18880 = h;
var G__18881 = i;
var G__18882 = j;
var G__18883 = k;
var G__18884 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__18873,G__18874,G__18875,G__18876,G__18877,G__18878,G__18879,G__18880,G__18881,G__18882,G__18883,G__18884) : self__.dispatch_fn.call(null,G__18873,G__18874,G__18875,G__18876,G__18877,G__18878,G__18879,G__18880,G__18881,G__18882,G__18883,G__18884));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18885 = a;
var G__18886 = b;
var G__18887 = c;
var G__18888 = d;
var G__18889 = e;
var G__18890 = f;
var G__18891 = g;
var G__18892 = h;
var G__18893 = i;
var G__18894 = j;
var G__18895 = k;
var G__18896 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__18885,G__18886,G__18887,G__18888,G__18889,G__18890,G__18891,G__18892,G__18893,G__18894,G__18895,G__18896) : target_fn.call(null,G__18885,G__18886,G__18887,G__18888,G__18889,G__18890,G__18891,G__18892,G__18893,G__18894,G__18895,G__18896));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18897 = a;
var G__18898 = b;
var G__18899 = c;
var G__18900 = d;
var G__18901 = e;
var G__18902 = f;
var G__18903 = g;
var G__18904 = h;
var G__18905 = i;
var G__18906 = j;
var G__18907 = k;
var G__18908 = l;
var G__18909 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__18897,G__18898,G__18899,G__18900,G__18901,G__18902,G__18903,G__18904,G__18905,G__18906,G__18907,G__18908,G__18909) : self__.dispatch_fn.call(null,G__18897,G__18898,G__18899,G__18900,G__18901,G__18902,G__18903,G__18904,G__18905,G__18906,G__18907,G__18908,G__18909));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18910 = a;
var G__18911 = b;
var G__18912 = c;
var G__18913 = d;
var G__18914 = e;
var G__18915 = f;
var G__18916 = g;
var G__18917 = h;
var G__18918 = i;
var G__18919 = j;
var G__18920 = k;
var G__18921 = l;
var G__18922 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__18910,G__18911,G__18912,G__18913,G__18914,G__18915,G__18916,G__18917,G__18918,G__18919,G__18920,G__18921,G__18922) : target_fn.call(null,G__18910,G__18911,G__18912,G__18913,G__18914,G__18915,G__18916,G__18917,G__18918,G__18919,G__18920,G__18921,G__18922));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18923 = a;
var G__18924 = b;
var G__18925 = c;
var G__18926 = d;
var G__18927 = e;
var G__18928 = f;
var G__18929 = g;
var G__18930 = h;
var G__18931 = i;
var G__18932 = j;
var G__18933 = k;
var G__18934 = l;
var G__18935 = m;
var G__18936 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__18923,G__18924,G__18925,G__18926,G__18927,G__18928,G__18929,G__18930,G__18931,G__18932,G__18933,G__18934,G__18935,G__18936) : self__.dispatch_fn.call(null,G__18923,G__18924,G__18925,G__18926,G__18927,G__18928,G__18929,G__18930,G__18931,G__18932,G__18933,G__18934,G__18935,G__18936));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18937 = a;
var G__18938 = b;
var G__18939 = c;
var G__18940 = d;
var G__18941 = e;
var G__18942 = f;
var G__18943 = g;
var G__18944 = h;
var G__18945 = i;
var G__18946 = j;
var G__18947 = k;
var G__18948 = l;
var G__18949 = m;
var G__18950 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__18937,G__18938,G__18939,G__18940,G__18941,G__18942,G__18943,G__18944,G__18945,G__18946,G__18947,G__18948,G__18949,G__18950) : target_fn.call(null,G__18937,G__18938,G__18939,G__18940,G__18941,G__18942,G__18943,G__18944,G__18945,G__18946,G__18947,G__18948,G__18949,G__18950));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18951 = a;
var G__18952 = b;
var G__18953 = c;
var G__18954 = d;
var G__18955 = e;
var G__18956 = f;
var G__18957 = g;
var G__18958 = h;
var G__18959 = i;
var G__18960 = j;
var G__18961 = k;
var G__18962 = l;
var G__18963 = m;
var G__18964 = n;
var G__18965 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__18951,G__18952,G__18953,G__18954,G__18955,G__18956,G__18957,G__18958,G__18959,G__18960,G__18961,G__18962,G__18963,G__18964,G__18965) : self__.dispatch_fn.call(null,G__18951,G__18952,G__18953,G__18954,G__18955,G__18956,G__18957,G__18958,G__18959,G__18960,G__18961,G__18962,G__18963,G__18964,G__18965));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18966 = a;
var G__18967 = b;
var G__18968 = c;
var G__18969 = d;
var G__18970 = e;
var G__18971 = f;
var G__18972 = g;
var G__18973 = h;
var G__18974 = i;
var G__18975 = j;
var G__18976 = k;
var G__18977 = l;
var G__18978 = m;
var G__18979 = n;
var G__18980 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__18966,G__18967,G__18968,G__18969,G__18970,G__18971,G__18972,G__18973,G__18974,G__18975,G__18976,G__18977,G__18978,G__18979,G__18980) : target_fn.call(null,G__18966,G__18967,G__18968,G__18969,G__18970,G__18971,G__18972,G__18973,G__18974,G__18975,G__18976,G__18977,G__18978,G__18979,G__18980));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18981 = a;
var G__18982 = b;
var G__18983 = c;
var G__18984 = d;
var G__18985 = e;
var G__18986 = f;
var G__18987 = g;
var G__18988 = h;
var G__18989 = i;
var G__18990 = j;
var G__18991 = k;
var G__18992 = l;
var G__18993 = m;
var G__18994 = n;
var G__18995 = o;
var G__18996 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__18981,G__18982,G__18983,G__18984,G__18985,G__18986,G__18987,G__18988,G__18989,G__18990,G__18991,G__18992,G__18993,G__18994,G__18995,G__18996) : self__.dispatch_fn.call(null,G__18981,G__18982,G__18983,G__18984,G__18985,G__18986,G__18987,G__18988,G__18989,G__18990,G__18991,G__18992,G__18993,G__18994,G__18995,G__18996));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18997 = a;
var G__18998 = b;
var G__18999 = c;
var G__19000 = d;
var G__19001 = e;
var G__19002 = f;
var G__19003 = g;
var G__19004 = h;
var G__19005 = i;
var G__19006 = j;
var G__19007 = k;
var G__19008 = l;
var G__19009 = m;
var G__19010 = n;
var G__19011 = o;
var G__19012 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__18997,G__18998,G__18999,G__19000,G__19001,G__19002,G__19003,G__19004,G__19005,G__19006,G__19007,G__19008,G__19009,G__19010,G__19011,G__19012) : target_fn.call(null,G__18997,G__18998,G__18999,G__19000,G__19001,G__19002,G__19003,G__19004,G__19005,G__19006,G__19007,G__19008,G__19009,G__19010,G__19011,G__19012));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__19013 = a;
var G__19014 = b;
var G__19015 = c;
var G__19016 = d;
var G__19017 = e;
var G__19018 = f;
var G__19019 = g;
var G__19020 = h;
var G__19021 = i;
var G__19022 = j;
var G__19023 = k;
var G__19024 = l;
var G__19025 = m;
var G__19026 = n;
var G__19027 = o;
var G__19028 = p;
var G__19029 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__19013,G__19014,G__19015,G__19016,G__19017,G__19018,G__19019,G__19020,G__19021,G__19022,G__19023,G__19024,G__19025,G__19026,G__19027,G__19028,G__19029) : self__.dispatch_fn.call(null,G__19013,G__19014,G__19015,G__19016,G__19017,G__19018,G__19019,G__19020,G__19021,G__19022,G__19023,G__19024,G__19025,G__19026,G__19027,G__19028,G__19029));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__19030 = a;
var G__19031 = b;
var G__19032 = c;
var G__19033 = d;
var G__19034 = e;
var G__19035 = f;
var G__19036 = g;
var G__19037 = h;
var G__19038 = i;
var G__19039 = j;
var G__19040 = k;
var G__19041 = l;
var G__19042 = m;
var G__19043 = n;
var G__19044 = o;
var G__19045 = p;
var G__19046 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__19030,G__19031,G__19032,G__19033,G__19034,G__19035,G__19036,G__19037,G__19038,G__19039,G__19040,G__19041,G__19042,G__19043,G__19044,G__19045,G__19046) : target_fn.call(null,G__19030,G__19031,G__19032,G__19033,G__19034,G__19035,G__19036,G__19037,G__19038,G__19039,G__19040,G__19041,G__19042,G__19043,G__19044,G__19045,G__19046));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__19047 = a;
var G__19048 = b;
var G__19049 = c;
var G__19050 = d;
var G__19051 = e;
var G__19052 = f;
var G__19053 = g;
var G__19054 = h;
var G__19055 = i;
var G__19056 = j;
var G__19057 = k;
var G__19058 = l;
var G__19059 = m;
var G__19060 = n;
var G__19061 = o;
var G__19062 = p;
var G__19063 = q;
var G__19064 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__19047,G__19048,G__19049,G__19050,G__19051,G__19052,G__19053,G__19054,G__19055,G__19056,G__19057,G__19058,G__19059,G__19060,G__19061,G__19062,G__19063,G__19064) : self__.dispatch_fn.call(null,G__19047,G__19048,G__19049,G__19050,G__19051,G__19052,G__19053,G__19054,G__19055,G__19056,G__19057,G__19058,G__19059,G__19060,G__19061,G__19062,G__19063,G__19064));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__19065 = a;
var G__19066 = b;
var G__19067 = c;
var G__19068 = d;
var G__19069 = e;
var G__19070 = f;
var G__19071 = g;
var G__19072 = h;
var G__19073 = i;
var G__19074 = j;
var G__19075 = k;
var G__19076 = l;
var G__19077 = m;
var G__19078 = n;
var G__19079 = o;
var G__19080 = p;
var G__19081 = q;
var G__19082 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__19065,G__19066,G__19067,G__19068,G__19069,G__19070,G__19071,G__19072,G__19073,G__19074,G__19075,G__19076,G__19077,G__19078,G__19079,G__19080,G__19081,G__19082) : target_fn.call(null,G__19065,G__19066,G__19067,G__19068,G__19069,G__19070,G__19071,G__19072,G__19073,G__19074,G__19075,G__19076,G__19077,G__19078,G__19079,G__19080,G__19081,G__19082));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__19083 = a;
var G__19084 = b;
var G__19085 = c;
var G__19086 = d;
var G__19087 = e;
var G__19088 = f;
var G__19089 = g;
var G__19090 = h;
var G__19091 = i;
var G__19092 = j;
var G__19093 = k;
var G__19094 = l;
var G__19095 = m;
var G__19096 = n;
var G__19097 = o;
var G__19098 = p;
var G__19099 = q;
var G__19100 = r;
var G__19101 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__19083,G__19084,G__19085,G__19086,G__19087,G__19088,G__19089,G__19090,G__19091,G__19092,G__19093,G__19094,G__19095,G__19096,G__19097,G__19098,G__19099,G__19100,G__19101) : self__.dispatch_fn.call(null,G__19083,G__19084,G__19085,G__19086,G__19087,G__19088,G__19089,G__19090,G__19091,G__19092,G__19093,G__19094,G__19095,G__19096,G__19097,G__19098,G__19099,G__19100,G__19101));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__19102 = a;
var G__19103 = b;
var G__19104 = c;
var G__19105 = d;
var G__19106 = e;
var G__19107 = f;
var G__19108 = g;
var G__19109 = h;
var G__19110 = i;
var G__19111 = j;
var G__19112 = k;
var G__19113 = l;
var G__19114 = m;
var G__19115 = n;
var G__19116 = o;
var G__19117 = p;
var G__19118 = q;
var G__19119 = r;
var G__19120 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__19102,G__19103,G__19104,G__19105,G__19106,G__19107,G__19108,G__19109,G__19110,G__19111,G__19112,G__19113,G__19114,G__19115,G__19116,G__19117,G__19118,G__19119,G__19120) : target_fn.call(null,G__19102,G__19103,G__19104,G__19105,G__19106,G__19107,G__19108,G__19109,G__19110,G__19111,G__19112,G__19113,G__19114,G__19115,G__19116,G__19117,G__19118,G__19119,G__19120));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__19121 = a;
var G__19122 = b;
var G__19123 = c;
var G__19124 = d;
var G__19125 = e;
var G__19126 = f;
var G__19127 = g;
var G__19128 = h;
var G__19129 = i;
var G__19130 = j;
var G__19131 = k;
var G__19132 = l;
var G__19133 = m;
var G__19134 = n;
var G__19135 = o;
var G__19136 = p;
var G__19137 = q;
var G__19138 = r;
var G__19139 = s;
var G__19140 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__19121,G__19122,G__19123,G__19124,G__19125,G__19126,G__19127,G__19128,G__19129,G__19130,G__19131,G__19132,G__19133,G__19134,G__19135,G__19136,G__19137,G__19138,G__19139,G__19140) : self__.dispatch_fn.call(null,G__19121,G__19122,G__19123,G__19124,G__19125,G__19126,G__19127,G__19128,G__19129,G__19130,G__19131,G__19132,G__19133,G__19134,G__19135,G__19136,G__19137,G__19138,G__19139,G__19140));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__19141 = a;
var G__19142 = b;
var G__19143 = c;
var G__19144 = d;
var G__19145 = e;
var G__19146 = f;
var G__19147 = g;
var G__19148 = h;
var G__19149 = i;
var G__19150 = j;
var G__19151 = k;
var G__19152 = l;
var G__19153 = m;
var G__19154 = n;
var G__19155 = o;
var G__19156 = p;
var G__19157 = q;
var G__19158 = r;
var G__19159 = s;
var G__19160 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__19141,G__19142,G__19143,G__19144,G__19145,G__19146,G__19147,G__19148,G__19149,G__19150,G__19151,G__19152,G__19153,G__19154,G__19155,G__19156,G__19157,G__19158,G__19159,G__19160) : target_fn.call(null,G__19141,G__19142,G__19143,G__19144,G__19145,G__19146,G__19147,G__19148,G__19149,G__19150,G__19151,G__19152,G__19153,G__19154,G__19155,G__19156,G__19157,G__19158,G__19159,G__19160));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__19162 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__19162);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__6113__auto__,writer__6114__auto__,opt__6115__auto__){
return cljs.core._write(writer__6114__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__19167 = msg;
return Error(G__19167);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__19172 = x;
var G__19173 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__19172,G__19173) : pred.call(null,G__19172,G__19173));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__19174 = y;
var G__19175 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__19174,G__19175) : pred.call(null,G__19174,G__19175));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});
